<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/16/2020 10:30:44 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{DF24D2D5-830E-4B8F-8DD0-F25D2F020F2F}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IBRollover"
  DTS:PackageType="5"
  DTS:VersionBuild="58"
  DTS:VersionGUID="{B7CB5F69-6833-46D6-A779-83ABA5AA2B2B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ArtivaMT]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0f3254b3-cd06-42ca-93cd-245bb12dbfee}"
      DTS:ObjectName="ArtivaMT">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PathArtiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\Bradford\Outbound\ArtivaMT-THIRDPROD-Bradford-RollOver-4202021125328.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{27BFA756-0D05-4BD0-A7C7-5A2F5BD0B389}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\Bradford\Outbound\RollOver-ExceptionReport-4202021125328.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[RolledOver]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{7e95935f-f6e2-4cdf-8908-c499594ca9e3}"
      DTS:ObjectName="RolledOver">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::RollOver]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\Bradford\Outbound\RolledOver-4202021125328.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{45848271-1438-4B06-ACD3-C01E1A8F253B}"
      DTS:ObjectName="ClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Bradford</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A6CDA0B4-3F90-48B7-8C83-34783CFCE80A}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B71EA8D5-4F77-4AA4-A4EE-E8016EE602DD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE(LEFT(  (DT_WSTR, 99) @[System::StartTime]  ,19)&#xA;,&quot;:&quot;,&quot;&quot;),&quot;/&quot;,&quot;&quot;),&quot; &quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DateStamp">
      <DTS:VariableValue
        DTS:DataType="8">4202021125328</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{28D902DC-4329-467C-9171-75989C88962F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +   &quot;RollOver-ExceptionReport-&quot; + @[User::DateStamp]  + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\Bradford\Outbound\RollOver-ExceptionReport-4202021125328.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9010F25A-FC17-41C0-AF32-39CD22391356}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\Bradford\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{553D668F-E9FA-4BC6-A9B9-AFF38621624C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-RollOver-&quot; +  @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathArtiva">
      <DTS:VariableValue
        DTS:DataType="8">M:\Bradford\Outbound\ArtivaMT-THIRDPROD-Bradford-RollOver-4202021125328.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9834A874-78FA-4338-882D-F6238079106C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory] + &quot;RolledOver-&quot; + @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="RollOver">
      <DTS:VariableValue
        DTS:DataType="8">M:\Bradford\Outbound\RolledOver-4202021125328.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{2906BFC8-E0C4-4C05-9F30-7E5287E0B542}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\ArtivaMT"
              componentClassID="DTSAdapter.FlatFileDestination.3"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="ArtivaMT">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\ArtivaMT.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[ArtivaMT]"
                  connectionManagerRefId="Package.ConnectionManagers[ArtivaMT]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].Columns[Data]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="Data"
                      externalMetadataColumnId="Package\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      name="Data" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Exceptions"
              componentClassID="DTSAdapter.FlatFileDestination.3"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="Exceptions">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Exceptions.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Exceptions]"
                  connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Exceptions.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].Columns[Data]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="Data"
                      externalMetadataColumnId="Package\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      name="Message" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\RolledOver"
              componentClassID="DTSAdapter.FlatFileDestination.3"
              contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Flat File Destination"
              localeId="1033"
              name="RolledOver">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether the data will overwrite or append to the destination file."
                  name="Overwrite">true</property>
                <property
                  dataType="System.Null"
                  description="Specifies the text to write to the destination file before any data is written."
                  expressionType="Notify"
                  name="Header" />
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\RolledOver.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[RolledOver]"
                  connectionManagerRefId="Package.ConnectionManagers[RolledOver]"
                  name="FlatFileConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Data Flow Task\RolledOver.Inputs[Flat File Destination Input]"
                  hasSideEffects="true"
                  name="Flat File Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\RolledOver.Inputs[Flat File Destination Input].Columns[Data]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="8000"
                      cachedName="Data"
                      externalMetadataColumnId="Package\Data Flow Task\RolledOver.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Data Flow Task\RolledOver.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                      codePage="1252"
                      dataType="str"
                      length="5000"
                      name="Message" />
                  </externalMetadataColumns>
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Component"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public Output1Buffer Output1Buffer;

    public ExceptionsBuffer ExceptionsBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 RolloverConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"RolloverConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ARTIVA
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ARTIVA").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.Odbc;
using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        conn = new OdbcConnection(Connections.ARTIVA.ConnectionString);
        conn.Open();
    }
    OdbcConnection conn;
    private bool _exceptionReportCreated;
    private bool islistacc;
    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }

        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
        if (!islistacc)
            System.IO.File.Delete(Connections.RolloverConnection.ConnectionString);

    }

    public override void CreateNewOutputRows()
    {
        var tbl = new DataTable();
        string query = @"SELECT account.ARACID,account.ARACCLACCT,ent.ARENFNM,ent.ARENLNM,ent.ZZENMNM,ISNULL(AFA.ZZACPROPSIFCURBAL,0) AS ZZACPROPSIFCURBAL,
            arrela.ARRELPHASE,arrela.ARRELCONLVL,arrela.ARRELID,ARP.ARPAHACTIVE,account.ARACLPYDTE,ISNULL(finaccount.AFACCURBALINT,0) AS AFACCURBALINT,arrela.ARRELSTATUSID
            FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT account on ARCLID = account.ARACCLTID AND ARCLID IN('BBEL01', 'BAGL03', 'BASL07', 'BHCL09', 'BHAL10',  
            'BVSL11', 'BBPL12', 'BHAL14', 'BBEL15', 'BCNL16', 'BBAL17', 'BBCL18', 'BSHL19', 'BBOL40', 'BAOL41', 'BHOL42')  
            JOIN ARENTITY ent ON account.ARACRPID = ent.ARENID JOIN ARCLIENT clt ON account.ARACCLTID = clt.ARCLID  
            JOIN ARRELATIONSHIP arrela ON account.ARACRPRELID = arrela.ARRELID 
			INNER JOIN AFACCOUNT finaccount on finaccount.AFACKEY = account.ARACFINACCTID
			LEFT JOIN ZZACPROPSIFDATA afa ON afa.ZZACPROPSIFACCTID = account.ARACID
			LEFT JOIN ARPAHIST AS ARP ON ARP.ARPAHID = ARRELPAHID WHERE DATEDIFF(DAY, account.ARACLSTDTE, GETDATE()) = 45  
            AND arrela.ARRELSTATUSID <> 'INACTCANCEL'";

        using (OdbcCommand cmd = new OdbcCommand(query, conn, null))
        {
            if (conn.State != ConnectionState.Open)
                conn.Open();

            cmd.CommandTimeout = 300;
            using (var reader = cmd.ExecuteReader())
            {
                tbl.Load(reader);
            }



        }
        string ARACID = "", ARACCLACCT = "", ARENFNM = "", ARENLNM = "", ZZENMNM = "", ARRELPHASE = "", ARPAHACTIVE = "", ARACLPYDTE = "", 
             ARRELCONLVL="", ARRELID="", ARRELSTATUSID="";
        decimal AFACCURBALINT = 0m, ZZACPROPSIFCURBAL = 0m;

        Output1Buffer.AddRow();
        Output1Buffer.Data = "Consumer Last Name,Consumer First Name,Client Reference / account Number,Radius Account Number,Account Balance";
        //AFACCURBALINT
        foreach (DataRow dr in tbl.Rows)
        {

            ARACID = dr["ARACID"] == DBNull.Value || dr["ARACID"] == null || dr["ARACID"].ToString() == "" ? "" : dr["ARACID"].ToString();
            ARACCLACCT = dr["ARACCLACCT"] == DBNull.Value || dr["ARACCLACCT"] == null || dr["ARACCLACCT"].ToString() == "" ? "" : dr["ARACCLACCT"].ToString();
            ARENFNM = dr["ARENFNM"] == DBNull.Value || dr["ARENFNM"] == null || dr["ARENFNM"].ToString() == "" ? "" : dr["ARENFNM"].ToString();
            ARENLNM = dr["ARENLNM"] == DBNull.Value || dr["ARENLNM"] == null || dr["ARENLNM"].ToString() == "" ? "" : dr["ARENLNM"].ToString();
            ZZENMNM = dr["ZZENMNM"] == DBNull.Value || dr["ZZENMNM"] == null || dr["ZZENMNM"].ToString() == "" ? "" : dr["ZZENMNM"].ToString();
            ZZACPROPSIFCURBAL = dr["ZZACPROPSIFCURBAL"] == DBNull.Value || dr["ZZACPROPSIFCURBAL"] == null || dr["ZZACPROPSIFCURBAL"].ToString() == "" ? 0 : Convert.ToDecimal(dr["ZZACPROPSIFCURBAL"]);
            AFACCURBALINT = dr["AFACCURBALINT"] == DBNull.Value || dr["AFACCURBALINT"] == null || dr["AFACCURBALINT"].ToString() == "" ? 0 : Convert.ToDecimal(dr["AFACCURBALINT"]);
            ARRELPHASE = dr["ARRELPHASE"] == DBNull.Value || dr["ARRELPHASE"] == null || dr["ARRELPHASE"].ToString() == "" ? "" : dr["ARRELPHASE"].ToString();
            ARPAHACTIVE = dr["ARPAHACTIVE"] == DBNull.Value || dr["ARPAHACTIVE"] == null || dr["ARPAHACTIVE"].ToString() == "" ? "" : dr["ARPAHACTIVE"].ToString();
            ARACLPYDTE = dr["ARACLPYDTE"] == DBNull.Value || dr["ARACLPYDTE"] == null || dr["ARACLPYDTE"].ToString() == "" ? "" : dr["ARACLPYDTE"].ToString();
            ARRELSTATUSID = dr["ARRELSTATUSID"] == DBNull.Value || dr["ARRELSTATUSID"] == null || dr["ARRELSTATUSID"].ToString() == "" ? "" : dr["ARRELSTATUSID"].ToString();
            ARRELCONLVL = dr["ARRELCONLVL"] == DBNull.Value || dr["ARRELCONLVL"] == null || dr["ARRELCONLVL"].ToString() == "" ? "" : dr["ARRELCONLVL"].ToString();
            ARRELID = dr["ARRELID"] == DBNull.Value || dr["ARRELID"] == null || dr["ARRELID"].ToString() == "" ? "" : dr["ARRELID"].ToString();


           /* if (ARPAHACTIVE == "*" || !string.IsNullOrEmpty(ARACLPYDTE))
            {
                _exceptionReportCreated = true;
                ExceptionsBuffer.AddRow();
                ExceptionsBuffer.Data = ARACID + " has a payment plan on it and can not be rolled over";

            } else
            {
            */
                if (AFACCURBALINT < 1)
                {

                    var c = new CloseAccount_C();

                    c.AccountId = ARACID;
                    c.CloseCode = "CCR";

                    AddPlacementRow(c);
                } else
                {
                    //var upd = new UpdateAccount_UPD();
                    var acm = new AccountChangeMaintenance_ACM();

                    //upd.AccountId = ARACID;
                    //upd.UpdateValue = "UNASSIGN";

                    acm.AccountId = ARACID;
                    acm.ActionGroup = "ZZCLTROLL";

                    //AddPlacementRow(upd);
                    AddPlacementRow(acm);


                    if (ARRELPHASE == "AUDIT")
                    {
                        var st = new StatusCodeUpdate_ST();
                        st.AccountId = ARACID;
                        st.ContactLevel = ARRELCONLVL;
                        st.StatusCode = ARRELSTATUSID;
                        st.RelationshipId = ARRELID;

                        AddPlacementRow(st);

                    }

                    islistacc = true;
                    Output1Buffer.AddRow();
                    Output1Buffer.Data = ARENLNM + "," + ARENFNM + "," + ARACCLACCT + "," + ARACID + "," + AFACCURBALINT.ToString();




                }
                
            

        }
   }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList).Replace("\r\n","");
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;


        Output0Buffer.AddRow();
        Output0Buffer.Data = recordString.ToUpper();
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7daa4a068a124f68b662a174814eee52.Properties.Settings.get_Default():SC_7daa4a068a124f68b662a174814eee52.Properties.Sett" +
    "ings")]

namespace SC_7daa4a068a124f68b662a174814eee52.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7daa4a068a124f68b662a174814eee52.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5627A05B-FFD1-4BFD-89ED-18A3D2EEDA0D}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7daa4a068a124f68b662a174814eee52</RootNamespace>
    <AssemblyName>SC_7daa4a068a124f68b662a174814eee52</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_7daa4a068a124f68b662a174814eee52</msb:CodeName>
		<msb:DisplayName>SC_7daa4a068a124f68b662a174814eee52</msb:DisplayName>
		<msb:ProjectId>{197B43C4-01A6-4A52-BC9C-7258DDB95198}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7daa4a068a124f68b662a174814eee52.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7daa4a068a124f68b662a174814eee52")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7daa4a068a124f68b662a174814eee52")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7daa4a068a124f68b662a174814eee52.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7daa4a068a124f68b662a174814eee52.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7daa4a068a124f68b662a174814eee52.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7daa4a068a124f68b662a174814eee52.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7daa4a068a124f68b662a174814eee52.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_7daa4a068a124f68b662a174814eee52.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
AACTCLgCpwEXAJsqAAAAAJMIxAKtARcAoyoAAAAAlgiJCrQBGACqKgAAAACGGM4IBgAYALIqAAAA
AJEY1Ai5ARgAAAABAOABAAABACoIAAACANoJAAADAF0HAAABAEQFAAABAEQFAAABACoIAAACANoJ
AAADAF0HAAABAEQFAAABAEQFAAABACoIAAACANoJAAADAF0HAAABAEQFAAABAEQFAAABAEEKAAAC
ANsIAAADACcKAAAEAF0HAAABALkKAAABALkKAAABAEQFCQDOCAEAEQDOCAYAGQDOCAoAKQDOCBAA
MQDOCBAAOQDOCBAAQQDOCBAASQDOCBAAUQDOCBAAWQDOCBAAYQDOCBAAaQDOCAYAAQHOCAYAIQHO
CBUAMQHOCAYA6QAnBQYA+QBwBRwAcQDOCBAAOQEzBgYA6QAyBQYAOQEsAwYAQQFLAwYASQGCAyAA
eQDOCAYAiQDOCEQAOQFTA04AYQEVCwEAiQDaB1QAeQCVAVkAwQBLAwYAeQBJCmAAeQHACGYAmQDD
CmsAoQACBm8AgQE+BXQA8QCFBRwAiQFpC3kAkQGOBX8AgQBKB4UAgQCBAoUAgQAnBokAqQDOCAYA
qQCLAZEAqQASApEAsQDOCAYAsQCLAZEAsQCuB5EAuQDOCAYAuQCLAZEAuQCuBZEAuQAcApEAuQB8
AZEAgQCFBRwAiQFmCqMAmQA0C6kADADOCAYADACaAbkAoQFkBb8AiQHnAdAAiQGDCtYAiQHvAd0A
iQFbCBwA0QDOCOIA0QALBuwA0QD6BQEAuQHOCBAA0QBFCwYA0QB0CgYA0QB3CqkA6QDOCAYA6QDL
APYA6QDuCf0A8QDOCAYA6QAnAQMBwQGUBgkByQFmAg8B0QFFCBYB2QFPAhsB2QFcCyQBCQHOCCoB
KQHOCAYALgALANsBLgATAOQBLgAbAAMCLgAjAAwCLgArADUCLgAzADUCLgA7ADUCLgBDAAwCLgBL
ADsCLgBTADUCLgBbAFICQwBjAJoCIwFrAJoCSQFzAAMCaQFzAAMCoQF7AJoCJQCtAPIAAwABAAQA
AwAFAAUABwAHAAkACgAKAAwAAAA4Ab0BAADuBcEBAAA4Ab0BAADuBcEBAAA4Ab0BAADuBcEBAAD+
BsUBAADmBsUBAAC1AMUBAAA1CMoBAADYAtABAACNCtYBAQAHAAMAAQAIAAUAAQANAAcAAQAOAAkA
AQATAAsAAQAUAA0AAgAeAA8AAgAfABEAAgAgABMAAgAjABUAAgAkABcAAQAlABcAAgAmABkAsQAE
gAAAAQAAAGMeSmAAAAAAAACEAAAABAAAAAAAAAAAAAAAMgE9AQAAAAALAAAAAAAAAAAAAAA7Ac8K
AAAAAAQAAAAAAAAAAAAAADIBEgEAAAAAAQABAAAAAAAAAAAARAEyAwAAAAALAAAAAAAAAAAAAAA7
AfQKAAAAAAsAAAAAAAAAAAAAADsBZwcAAAAABAAAAAAAAAAAAAAAMgEUBgAAAAADAAIABwAAAAAA
AABNAS8KAAAAAAsAAAAAAAAAAAAAADsBigcAAAAAAAAAAAEAAABPCQAAAAAAAAkAEAEIAJQACACZ
AAgAngB1AMsAAQBlAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTUnVudGltZUNvbm5l
Y3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABJRFRTQ29ubmVjdGlv
bk1hbmFnZXIxMDAASUVudW1lcmFibGVgMQBMaXN0YDEAU0NfN2RhYTRhMDY4YTEyNGY2OGI2NjJh
MTc0ODE0ZWVlNTIAPE1vZHVsZT4AZ2V0X0FSVElWQQBDbG9zZUFjY291bnRfQwBHZXRPdXRwdXRJ
RABBY2NvdW50Q2hhbmdlTWFpbnRlbmFuY2VfQUNNAFN5c3RlbS5JTwBTdGF0dXNDb2RlVXBkYXRl
X1NUAFN5c3RlbS5EYXRhAHNldF9EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBtc2NvcmxpYgBT
eXN0ZW0uRGF0YS5PZGJjAGlzbGlzdGFjYwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBSZWxh
dGlvbnNoaXBJZABBY2NvdW50SWQATG9hZABBZGQATWFya091dHB1dHNGaW5pc2hlZABfZXhjZXB0
aW9uUmVwb3J0Q3JlYXRlZABEYkNvbW1hbmQAT2RiY0NvbW1hbmQAcmVjb3JkAFJlcGxhY2UASXNO
dWxsT3JXaGl0ZVNwYWNlAGRlZmF1bHRJbnN0YW5jZQBDbG9zZUNvZGUAU3RhdHVzQ29kZQBEYXRh
VGFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmls
ZQBHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBPbmUAQ29tbW9uRW5naW5lAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3Vy
Y2VDdWx0dXJlAEdlbmVyYWxQdXJwb3NlUmVjb3JkQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9u
QmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBv
c2UARGlzcG9zZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRl
AERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAV3JpdGVTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJp
bmcAVG9TdHJpbmcAVG9EZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABDb250YWN0TGV2ZWwA
U0NfN2RhYTRhMDY4YTEyNGY2OGI2NjJhMTc0ODE0ZWVlNTIuZGxsAERCTnVsbABzZXRfRGF0YV9J
c051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ab3BfTGVz
c1RoYW4AT3BlbgBTY3JpcHRNYWluAGNvbm4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24AT2RiY1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1l
Q29ubmVjdGlvbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAE9kYmND
b25uZWN0aW9uAGdldF9FeGNlcHRpb25Db25uZWN0aW9uAGdldF9Sb2xsb3ZlckNvbm5lY3Rpb24A
SW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3VsdHVyZUluZm8A
WmVybwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRp
bWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAEFjdGlvbkdyb3VwAENo
YXIASURhdGFSZWFkZXIAT2RiY0RhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBPdXRwdXQwQnVmZmVy
AE91dHB1dDFCdWZmZXIAUGlwZWxpbmVCdWZmZXIARXhjZXB0aW9uc0J1ZmZlcgBTY3JpcHRCdWZm
ZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAVG9VcHBlcgBNaWNy
b3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUGlwZWxpbmUuV3JhcHBlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3Rv
cgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZS5E
YXRhLlJlY29yZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3Vy
Y2VzAFNDXzdkYWE0YTA2OGExMjRmNjhiNjYyYTE3NDgxNGVlZTUyLlByb3BlcnRpZXMuUmVzb3Vy
Y2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ183ZGFhNGEwNjhhMTI0ZjY4YjY2MmExNzQ4
MTRlZWU1Mi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVt
bkluZGV4ZXMAU2V0dGluZ3MAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAEJ1ZmZlcnMA
RmlsZUhlbHBlcnMARmluaXNoT3V0cHV0cwBnZXRfUm93cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENv
bmNhdABPYmplY3QAU2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9z
dABzZXRfQ29tbWFuZFRpbWVvdXQAUHJpbWVPdXRwdXQATW92ZU5leHQARGF0YVJvdwBBZGRSb3cA
QWRkUGxhY2VtZW50Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQAAAAAAiMFTAEUATABFAEMA
VAAgAGEAYwBjAG8AdQBuAHQALgBBAFIAQQBDAEkARAAsAGEAYwBjAG8AdQBuAHQALgBBAFIAQQBD
AEMATABBAEMAQwBUACwAZQBuAHQALgBBAFIARQBOAEYATgBNACwAZQBuAHQALgBBAFIARQBOAEwA
TgBNACwAZQBuAHQALgBaAFoARQBOAE0ATgBNACwASQBTAE4AVQBMAEwAKABBAEYAQQAuAFoAWgBB
AEMAUABSAE8AUABTAEkARgBDAFUAUgBCAEEATAAsADAAKQAgAEEAUwAgAFoAWgBBAEMAUABSAE8A
UABTAEkARgBDAFUAUgBCAEEATAAsAA0ACgAgACAAIAAgACAAIAAgACAAIAAgACAAIABhAHIAcgBl
AGwAYQAuAEEAUgBSAEUATABQAEgAQQBTAEUALABhAHIAcgBlAGwAYQAuAEEAUgBSAEUATABDAE8A
TgBMAFYATAAsAGEAcgByAGUAbABhAC4AQQBSAFIARQBMAEkARAAsAEEAUgBQAC4AQQBSAFAAQQBI
AEEAQwBUAEkAVgBFACwAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMATABQAFkARABUAEUALABJAFMA
TgBVAEwATAAoAGYAaQBuAGEAYwBjAG8AdQBuAHQALgBBAEYAQQBDAEMAVQBSAEIAQQBMAEkATgBU
ACwAMAApACAAQQBTACAAQQBGAEEAQwBDAFUAUgBCAEEATABJAE4AVAAsAGEAcgByAGUAbABhAC4A
QQBSAFIARQBMAFMAVABBAFQAVQBTAEkARAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAARgBS
AE8ATQAgACUAUwBUAEEAUgBUAFQAQQBCAEwARQAgAEEAUgBDAEwASQBFAE4AVAAgAEkATgBOAEUA
UgAgAEoATwBJAE4AIABBAFIAQQBDAEMATwBVAE4AVAAgAGEAYwBjAG8AdQBuAHQAIABvAG4AIABB
AFIAQwBMAEkARAAgAD0AIABhAGMAYwBvAHUAbgB0AC4AQQBSAEEAQwBDAEwAVABJAEQAIABBAE4A
RAAgAEEAUgBDAEwASQBEACAASQBOACgAJwBCAEIARQBMADAAMQAnACwAIAAnAEIAQQBHAEwAMAAz
ACcALAAgACcAQgBBAFMATAAwADcAJwAsACAAJwBCAEgAQwBMADAAOQAnACwAIAAnAEIASABBAEwA
MQAwACcALAAgACAADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACcAQgBWAFMATAAxADEAJwAs
ACAAJwBCAEIAUABMADEAMgAnACwAIAAnAEIASABBAEwAMQA0ACcALAAgACcAQgBCAEUATAAxADUA
JwAsACAAJwBCAEMATgBMADEANgAnACwAIAAnAEIAQgBBAEwAMQA3ACcALAAgACcAQgBCAEMATAAx
ADgAJwAsACAAJwBCAFMASABMADEAOQAnACwAIAAnAEIAQgBPAEwANAAwACcALAAgACcAQgBBAE8A
TAA0ADEAJwAsACAAJwBCAEgATwBMADQAMgAnACkAIAAgAA0ACgAgACAAIAAgACAAIAAgACAAIAAg
ACAAIABKAE8ASQBOACAAQQBSAEUATgBUAEkAVABZACAAZQBuAHQAIABPAE4AIABhAGMAYwBvAHUA
bgB0AC4AQQBSAEEAQwBSAFAASQBEACAAPQAgAGUAbgB0AC4AQQBSAEUATgBJAEQAIABKAE8ASQBO
ACAAQQBSAEMATABJAEUATgBUACAAYwBsAHQAIABPAE4AIABhAGMAYwBvAHUAbgB0AC4AQQBSAEEA
QwBDAEwAVABJAEQAIAA9ACAAYwBsAHQALgBBAFIAQwBMAEkARAAgACAADQAKACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgAEoATwBJAE4AIABBAFIAUgBFAEwAQQBUAEkATwBOAFMASABJAFAAIABhAHIA
cgBlAGwAYQAgAE8ATgAgAGEAYwBjAG8AdQBuAHQALgBBAFIAQQBDAFIAUABSAEUATABJAEQAIAA9
ACAAYQByAHIAZQBsAGEALgBBAFIAUgBFAEwASQBEACAADQAKAAkACQAJAEkATgBOAEUAUgAgAEoA
TwBJAE4AIABBAEYAQQBDAEMATwBVAE4AVAAgAGYAaQBuAGEAYwBjAG8AdQBuAHQAIABvAG4AIABm
AGkAbgBhAGMAYwBvAHUAbgB0AC4AQQBGAEEAQwBLAEUAWQAgAD0AIABhAGMAYwBvAHUAbgB0AC4A
QQBSAEEAQwBGAEkATgBBAEMAQwBUAEkARAANAAoACQAJAAkATABFAEYAVAAgAEoATwBJAE4AIABa
AFoAQQBDAFAAUgBPAFAAUwBJAEYARABBAFQAQQAgAGEAZgBhACAATwBOACAAYQBmAGEALgBaAFoA
QQBDAFAAUgBPAFAAUwBJAEYAQQBDAEMAVABJAEQAIAA9ACAAYQBjAGMAbwB1AG4AdAAuAEEAUgBB
AEMASQBEAA0ACgAJAAkACQBMAEUARgBUACAASgBPAEkATgAgAEEAUgBQAEEASABJAFMAVAAgAEEA
UwAgAEEAUgBQACAATwBOACAAQQBSAFAALgBBAFIAUABBAEgASQBEACAAPQAgAEEAUgBSAEUATABQ
AEEASABJAEQAIABXAEgARQBSAEUAIABEAEEAVABFAEQASQBGAEYAKABEAEEAWQAsACAAYQBjAGMA
bwB1AG4AdAAuAEEAUgBBAEMATABTAFQARABUAEUALAAgAEcARQBUAEQAQQBUAEUAKAApACkAIAA9
ACAANAA1ACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAQQBOAEQAIABhAHIAcgBlAGwA
YQAuAEEAUgBSAEUATABTAFQAQQBUAFUAUwBJAEQAIAA8AD4AIAAnAEkATgBBAEMAVABDAEEATgBD
AEUATAAnAAEBAIDdQwBvAG4AcwB1AG0AZQByACAATABhAHMAdAAgAE4AYQBtAGUALABDAG8AbgBz
AHUAbQBlAHIAIABGAGkAcgBzAHQAIABOAGEAbQBlACwAQwBsAGkAZQBuAHQAIABSAGUAZgBlAHIA
ZQBuAGMAZQAgAC8AIABhAGMAYwBvAHUAbgB0ACAATgB1AG0AYgBlAHIALABSAGEAZABpAHUAcwAg
AEEAYwBjAG8AdQBuAHQAIABOAHUAbQBiAGUAcgAsAEEAYwBjAG8AdQBuAHQAIABCAGEAbABhAG4A
YwBlAAANQQBSAEEAQwBJAEQAABVBAFIAQQBDAEMATABBAEMAQwBUAAAPQQBSAEUATgBGAE4ATQAA
D0EAUgBFAE4ATABOAE0AAA9aAFoARQBOAE0ATgBNAAAjWgBaAEEAQwBQAFIATwBQAFMASQBGAEMA
VQBSAEIAQQBMAAAbQQBGAEEAQwBDAFUAUgBCAEEATABJAE4AVAAAFUEAUgBSAEUATABQAEgAQQBT
AEUAABdBAFIAUABBAEgAQQBDAFQASQBWAEUAABVBAFIAQQBDAEwAUABZAEQAVABFAAAbQQBSAFIA
RQBMAFMAVABBAFQAVQBTAEkARAAAF0EAUgBSAEUATABDAE8ATgBMAFYATAAAD0EAUgBSAEUATABJ
AEQAAAdDAEMAUgAAE1oAWgBDAEwAVABSAE8ATABMAAALQQBVAEQASQBUAAADLAAABQ0ACgAAC0MA
TwBNAEEASwAAAy4AAAMwAAADLwAAA04AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkA
IABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBp
AGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMA
dABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAAARTwB1AHQAcAB1AHQAIAAxAAAVRQB4AGMAZQBw
AHQAaQBvAG4AcwAAJVIAbwBsAGwAbwB2AGUAcgBDAG8AbgBuAGUAYwB0AGkAbwBuAAAnRQB4AGMA
ZQBwAHQAaQBvAG4AQwBvAG4AbgBlAGMAdABpAG8AbgAADUEAUgBUAEkAVgBBAABxUwBDAF8ANwBk
AGEAYQA0AGEAMAA2ADgAYQAxADIANABmADYAOABiADYANgAyAGEAMQA3ADQAOAAxADQAZQBlAGUA
NQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAACKtmbBAMF0RK05
0HP1KW2ZAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAjQMgAA4EAAEBDh4HEhI9Dg4ODg4ODg4R
QRJFEkkSTRJRElUSWRJdEmEJIAMBDhI5EoCpBSAAEYCtBCAAEkkGIAEBEoC1BSAAEoC5BCAAEk0D
IAAcBCABHA4EBhKAwQUAAgIODgUAARFBHAMGEUEHAAICEUERQQIGDgQKARJVBAoBElkECgESXQUA
AQ4dDgMgAAIDBwEOBxUSgM0BHgAFIAEBEwALEAEBDhUSgNUBHgAECgEeAAUgAg4ODgYgAR0OHQME
AAECDgkgAwESbR0IEnEFIAIBCBwDBwEIBgACCBJxDgUgAR0ICAUgABKA4QUgABKA5QYgARKA6Q4E
IAASfQgAARKA7RGA8QUgABKA9QcgAgEOEoD1CLd6XFYZNOCJCImEXc2AgMyRCPoM7UpFUaeCCD4M
CNWcw9ZXAwYSOQIGAgMGEhwDBhIgAwYSDAMGEhADBhIUAwYSdQQGEoCFBAYSgIkDBhIoBjABAQEe
AAQgAQECCyAEAQgdCB0SbRJxBSABARJ1BQAAEoCFBQAAEoCJBgABARKAiQQAABIoAwAAAQMoAA4D
KAACBCgAEn0FCAASgIUFCAASgIkECAASKAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfN2RhYTRhMDY4YTEyNGY2OGI2NjJhMTc0ODE0ZWVlNTIA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAEhQAAAAAAAAAAAAAGJQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABUUAAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAA
AAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
SmBjHgAAAQBKYGMePwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
AAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA3AGQAYQBh
ADQAYQAwADYAOABhADEAMgA0AGYANgA4AGIANgA2ADIAYQAxADcANAA4ADEANABlAGUAZQA1ADIA
AAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA3ADcAOQAuADIANAA2
ADUAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA3AGQAYQBhADQA
YQAwADYAOABhADEAMgA0AGYANgA4AGIANgA2ADIAYQAxADcANAA4ADEANABlAGUAZQA1ADIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADcA
ZABhAGEANABhADAANgA4AGEAMQAyADQAZgA2ADgAYgA2ADYAMgBhADEANwA0ADgAMQA0AGUAZQBl
ADUAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA3AGQA
YQBhADQAYQAwADYAOABhADEAMgA0AGYANgA4AGIANgA2ADIAYQAxADcANAA4ADEANABlAGUAZQA1
ADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANwA3ADkA
LgAyADQANgA1ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANwA3ADkALgAyADQANgA1ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAdDAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_7daa4a068a124f68b662a174814eee52</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">e1f31f2429ecd327619836d3e25480d0</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">05b981657ef462aafd96720072d352267fd7f957</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Data Flow Task\Script Component.Connections[RolloverConnection]"
                  connectionManagerID="Package.ConnectionManagers[RolledOver]"
                  connectionManagerRefId="Package.ConnectionManagers[RolledOver]"
                  name="RolloverConnection" />
                <connection
                  refId="Package\Data Flow Task\Script Component.Connections[ExceptionConnection]"
                  connectionManagerID="Package.ConnectionManagers[Exceptions]"
                  connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                  name="ExceptionConnection" />
                <connection
                  refId="Package\Data Flow Task\Script Component.Connections[ARTIVA]"
                  connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                  connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                  name="ARTIVA" />
              </connections>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Output 1]"
                  hasSideEffects="true"
                  name="Output 1">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Script Component.Outputs[Exceptions]"
                  hasSideEffects="true"
                  name="Exceptions">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[Exceptions]"
              endId="Package\Data Flow Task\Exceptions.Inputs[Flat File Destination Input]"
              name="Exceptions"
              startId="Package\Data Flow Task\Script Component.Outputs[Exceptions]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 0]"
              endId="Package\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input]"
              name="Output 0"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Data Flow Task.Paths[Output 1]"
              endId="Package\Data Flow Task\RolledOver.Inputs[Flat File Destination Input]"
              name="Output 1"
              startId="Package\Data Flow Task\Script Component.Outputs[Output 1]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Data Flow Task"
          TopLeft="346.5,129.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="130,42"
          Id="Package\Data Flow Task\RolledOver"
          TopLeft="619,192" />
        <NodeLayout
          Size="163,42"
          Id="Package\Data Flow Task\Script Component"
          TopLeft="356,96" />
        <NodeLayout
          Size="129,42"
          Id="Package\Data Flow Task\Exceptions"
          TopLeft="380,194" />
        <NodeLayout
          Size="121,42"
          Id="Package\Data Flow Task\ArtivaMT"
          TopLeft="142,191" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 1]"
          TopLeft="476.25,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="207.75,54"
              Start="0,0"
              End="207.75,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.579476861167" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.579476861167"
                    Point2="0,18.579476861167"
                    Point3="4,18.579476861167" />
                  <mssgle:LineSegment
                    End="203.75,18.579476861167" />
                  <mssgle:CubicBezierSegment
                    Point1="203.75,18.579476861167"
                    Point2="207.75,18.579476861167"
                    Point3="207.75,22.579476861167" />
                  <mssgle:LineSegment
                    End="207.75,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="83.9219140625,23.579476861167,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Output 0]"
          TopLeft="437.5,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-235,53"
              Start="0,0"
              End="-235,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="-4,26.5" />
                  <mssgle:LineSegment
                    End="-231,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-231,26.5"
                    Point2="-235,26.5"
                    Point3="-235,30.5" />
                  <mssgle:LineSegment
                    End="-235,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-137.65572265625,31.5,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Exceptions]"
          TopLeft="463.333333333333,138">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-18.8333333333333,56"
              Start="0,0"
              End="-18.8333333333333,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.726609963548" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.726609963548"
                    Point2="0,22.726609963548"
                    Point3="-4,22.726609963548" />
                  <mssgle:LineSegment
                    End="-14.8333333333333,22.726609963548" />
                  <mssgle:CubicBezierSegment
                    Point1="-14.8333333333333,22.726609963548"
                    Point2="-18.8333333333333,22.726609963548"
                    Point3="-18.8333333333333,26.726609963548" />
                  <mssgle:LineSegment
                    End="-18.8333333333333,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-33.4842447916667,27.726609963548,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>