<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/31/2020 12:57:05 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{E435A433-8DC2-4F58-8B4C-C2C77CAAE710}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="DODScrubRes"
  DTS:PackageType="5"
  DTS:VersionBuild="24"
  DTS:VersionGUID="{2ABB9567-A7B3-4917-B29E-D1842E6C1A45}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{00824E3F-85D8-4633-B788-EC0E60FCA82C}"
      DTS:ObjectName="Artiva">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Dsn="+ @[$Project::Namespace] +";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Dsn=DBA01PROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva-MT]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{EB559304-E8CB-4731-B4D4-1F8C4C2422FE}"
      DTS:ObjectName="Artiva-MT">
      <DTS:PropertyExpression
        DTS:Name="ColumnNamesInFirstDataRow">False</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ArtivaFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\TDBank\Out\ArtivaMT-DBA01PROD-TDBank-0-DODScrubIn20200908.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="8000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{02425DA6-01F7-4A0E-ABF1-6D7A8CFE60ED}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{F73B9F2F-178D-4901-B8E5-D1A4036833E0}"
      DTS:ObjectName="Filemask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*DODScrub*.txt</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{AAC6BBC7-0FB0-41D5-AB28-A34E029D536F}"
      DTS:ObjectName="In">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">In\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{17771119-9899-44D3-A75C-9A2CEFEC62F6}"
      DTS:ObjectName="Out">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Out\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{19D2E6F8-FD0B-464B-8863-66CF9D20E560}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-&quot; + @[User::CurrentFile]  + &quot;-DODScrubIn&quot; + (DT_STR,4,1252)YEAR(GETDATE()) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART(&quot;mm&quot;,GETDATE()),2) + RIGHT(&quot;0&quot; + (DT_STR,4,1252)DATEPART(&quot;dd&quot;,GETDATE()),2) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ArtivaFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\TDBank\Out\ArtivaMT-DBA01PROD-TDBank-0-DODScrubIn20200908.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{845C1B39-0906-4CBC-9118-83B7842D6639}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3B95AF25-9E0B-458B-89C5-4C5A8EB005A8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::In]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\TDBank\In\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5CFE4FFF-7F75-4D62-99C5-4EC9AF11286F}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::Out]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\TDBank\Out\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{21442057-7E67-4D0A-BC22-7C9F2F3C8277}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{9D97413B-EFE1-48D2-BE1C-0AFED97A9416}"
        DTS:ObjectName="{9D97413B-EFE1-48D2-BE1C-0AFED97A9416}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::Filemask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\TDBank\In\" />
            <FEFEProperty
              FileSpec="*DODScrub*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{55219E93-078F-48DC-9DF3-6F16763EA835}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Artiva-MT]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva-MT]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="4000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Data" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Script Component"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f299f0909e1b4360a234edea523d275b.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{017A03DA-3E64-455A-A4E4-E9013CD0CF45}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f299f0909e1b4360a234edea523d275b</RootNamespace>
    <AssemblyName>SC_f299f0909e1b4360a234edea523d275b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Collections.Generic;
using FileHelpers;
using System.IO;
using System.Linq;
using System.Globalization;
using System.Data.Odbc;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    OdbcConnection conn;
    Dictionary<string, string> ServiceComponent;
    Dictionary<string, string> EIDServiceComponent;
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        conn = new OdbcConnection(Connections.ARTIVA.ConnectionString);
        conn.Open();

        ServiceComponent = new Dictionary<string, string>() { {"AG","Army National Guard"},
{"AR","Army Active Duty"},
{"AT","Army Temporary"},
{"AV","Army Reserve"},
{"AZ","Army Unknown"},
{"CR","Coast Guard Active Duty"},
{"CV","Coast Guard Reserve"},
{"FG","Air National Guard"},
{"FR","Air Force Active Duty"},
{"FT","Air Force Temporary"},
{"FV","Air Force Reserve"},
{"HR","Public Health Services"},
{"MR","Marines Corps Active Duty"},
{"MT","Marine Corps Temporary"},
{"MV","Marine Corps Reserve"},
{"MZ","Marine Corps Unknown"},
{"NR","Navy Active Duty"},
{"NT","Navy Temporary"},
{"NV","Navy Reserve"},
{"NZ","Navy Unknown"},
{"OR","Nat'l Oceanic & Atmospheric Administration"},
{"ZZ","N/A (Unaffiliated)"}};

        EIDServiceComponent = new Dictionary<string, string>() { {"AG","Army National Guard"},
{"AR","Army Active Duty"},
{"AT","Army Temporary"},
{"AV","Army Reserve"},
{"AZ","Army Unknown"},
{"CR","Coast Guard Active Duty"},
{"CV","Coast Guard Reserve"},
{"FG","Air National Guard"},
{"FR","Air Force Active Duty"},
{"FT","Air Force Temporary"},
{"FV","Air Force Reserve"},
{"HR","Public Health Services"},
{"MR","Marines Corps Active Duty"},
{"MT","Marine Corps Temporary"},
{"MV","Marine Corps Reserve"},
{"MZ","Marine Corps Unknown"},
{"NR","Navy Active Duty"},
{"NT","Navy Temporary"},
{"NV","Navy Reserve"},
{"NZ","Navy Unknown"},
{"OR","Nat'l Oceanic & Atmospheric Administration"},
{"ZZ","N/A (Unaffiliated"}
};
    }



    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }

    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        try { 

        string filePath = Variables.FullInboundDirectory + Variables.CurrentFile;
        IEnumerable<string> allLines = File.ReadLines(filePath);

        string aracid = "";//line.Substring(63, 28).Trim()
        string adstatusdate = "";//line.Substring(91, 8).Trim()
        string OnActivityontheActiveDutyStatusDate = "";//line.Substring(100, 1).Trim()
        string LeftActiveDutylessorequal367DaysfromtheActiveDutyStatusDate = "";//line.Substring(101, 1).Trim()
        string NotifiedofActiveDutyRecallonActiveDutyStatusDate = "";//line.Substring(102, 1).Trim()
        string ActiveDutyEndDate = "";//line.Substring(103, 8).Trim()
        string MatchResultCode = "";//line.Substring(111, 1).Trim()
        string Error = "";//line.Substring(112, 1).Trim()
        string DateofMatch = "";//line.Substring(113, 8).Trim()
        string ActiveDutyBeginDate = "";//line.Substring(121, 8).Trim()
        string EIDBeginDate = "";//line.Substring(129, 8).Trim()
        string EIDEndnDate = "";//line.Substring(137, 8).Trim()
        string ServiceComponent = "";//line.Substring(145, 2).Trim()
        string EIDServiceComponent = "";//line.Substring(147, 2).Trim()
        string CertificateID = "";//line.Substring(169, 15).Trim()



        string AccountStatus = "";
        string CancelCode = "";
        string strServiceComponent = "";
        string strEIDServiceComponent = "";
        string[] statusesToIgnore = { "BANKRUPT", "CEASE", "COMPLAINT", "DISPUTE", "FRAUD", "INACTCANCEL", "LIT", "SHRADLS", "SHRLEGAL", "SOL", "VCOMP" };

        foreach (string line in allLines)
        {

            aracid = line.Substring(63, 28).Trim();
            adstatusdate = line.Substring(91, 8).Trim();
            OnActivityontheActiveDutyStatusDate = line.Substring(100, 1).Trim();
            LeftActiveDutylessorequal367DaysfromtheActiveDutyStatusDate = line.Substring(101, 1).Trim();
            NotifiedofActiveDutyRecallonActiveDutyStatusDate = line.Substring(102, 1).Trim();
            ActiveDutyEndDate = line.Substring(103, 8).Trim();
            MatchResultCode = line.Substring(111, 1).Trim();
            Error = line.Substring(112, 1).Trim();
            DateofMatch = line.Substring(113, 8).Trim();
            ActiveDutyBeginDate = line.Substring(121, 8).Trim();
            EIDBeginDate = line.Substring(129, 8).Trim();
            EIDEndnDate = line.Substring(137, 8).Trim();
            ServiceComponent = line.Substring(145, 2).Trim();
            EIDServiceComponent = line.Substring(147, 2).Trim();
            CertificateID = line.Substring(169, 15).Trim();

            if (OnActivityontheActiveDutyStatusDate == "X")
            {

                using (var cmd = new OdbcCommand(string.Format("SELECT account.ARACID AccountID,arrela.ARRELSTATUSID AccountStatus,clt.ZZSCRADODCANCDE CancelCode " +
                "FROM ARACCOUNT account JOIN ARRELATIONSHIP arrela ON account.ARACRPRELID = arrela.ARRELID JOIN ARCLIENT clt ON account.ARACCLTID = clt.ARCLID " +
                "WHERE account.ARACID = '{0}'", aracid), conn))
                {
                    if (conn.State != ConnectionState.Open)
                        conn.Open();

                    cmd.CommandTimeout = 3000000;

                    using (var reader = cmd.ExecuteReader())
                    {
                            while (reader.Read())
                            {
                                AccountStatus = reader["AccountStatus"] == DBNull.Value || reader["AccountStatus"] == null || reader["AccountStatus"].ToString() == "" ? "" : reader["AccountStatus"].ToString();
                                CancelCode = reader["CancelCode"] == DBNull.Value || reader["CancelCode"] == null || reader["CancelCode"].ToString() == "" ? "" : reader["CancelCode"].ToString();

                            }
                        
                    }


                }

                if (this.ServiceComponent.ContainsKey(ServiceComponent))
                    strServiceComponent = this.ServiceComponent[ServiceComponent];
                if (this.EIDServiceComponent.ContainsKey(EIDServiceComponent))
                    strEIDServiceComponent = this.EIDServiceComponent[EIDServiceComponent];

                var note = new Note_NOTE();
                var dod = new DODLITScrubHit_117();


                note.AccountId = aracid;
                note.Note = "SCRA SCRUB RETURNED - HIT RECEIVED";

                dod.ACCTID = aracid;
                dod.SCRADODScrubHitDate = getDate(DateofMatch);
                dod.ActiveDutyStatusDate = getDate(adstatusdate);
                dod.MatchResultCode = MatchResultCode;
                dod.OnActivityontheActiveDutyStatusDate = "X";
                dod.LeftActiveDutyLTE367DaysfromtheActiveDutyStatusDate = LeftActiveDutylessorequal367DaysfromtheActiveDutyStatusDate;
                dod.NotifiedofActiveDutyRecallonActiveDutyStatusDate = NotifiedofActiveDutyRecallonActiveDutyStatusDate;
                dod.ServiceComponentDescription = strServiceComponent;
                dod.EIDServiceComponentDescription = strEIDServiceComponent;
                dod.EIDServiceComponentValue = EIDServiceComponent;
                dod.ServiceComponentValue = ServiceComponent;
                dod.EIDBeginDate = getDate(EIDBeginDate);
                dod.EIDEndDate = getDate(EIDEndnDate);
                dod.CertificateID = CertificateID;
                dod.ActiveDutyBeginDate = getDate(ActiveDutyBeginDate);
                dod.ActiveDutyEndDate = getDate(ActiveDutyEndDate);
                dod.Error = Error;

                AddPlacementRow(dod);
                AddPlacementRow(note);


                if (!statusesToIgnore.Contains(AccountStatus.Trim()))
                {
                    var upd = new StatusCodeUpdate_ST();
                    upd.AccountId = aracid;
                    upd.StatusCode = "MILDEPLY";

                    AddPlacementRow(upd);

                }

                if (!string.IsNullOrWhiteSpace(CancelCode))
                {
                    var c = new CloseAccount_C();
                    c.AccountId = aracid;
                    c.CloseCode = CancelCode;

                    AddPlacementRow(c);
                }

            }
            else
            {

                var note = new Note_NOTE();

                note.AccountId = aracid;
                note.Note = "SCRA SCRUB RETURNED - NO HIT";

                AddPlacementRow(note);

            }






        }


    } catch(Exception e){

            bool cancel = false;
            ComponentMetaData.FireError(10, "Process Values", e.Message + "@@" + e.StackTrace, "", 0, out cancel);
        }
    }

    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(d, "yyyyMMdd", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output0Buffer.AddRow();
        Output0Buffer.Data = recordString.ToUpper();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f299f0909e1b4360a234edea523d275b.Properties.Settings.get_Default():SC_f299f0909e1b4360a234edea523d275b.Properties.Sett" +
    "ings")]

namespace SC_f299f0909e1b4360a234edea523d275b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ARTIVA
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ARTIVA").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullInboundDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullInboundDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_f299f0909e1b4360a234edea523d275b</msb:CodeName>
		<msb:DisplayName>SC_f299f0909e1b4360a234edea523d275b</msb:DisplayName>
		<msb:ProjectId>{462F39DF-E3DA-4B9F-86FC-0D6C2037AE9E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_f299f0909e1b4360a234edea523d275b.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f299f0909e1b4360a234edea523d275b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f299f0909e1b4360a234edea523d275b")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f299f0909e1b4360a234edea523d275b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f299f0909e1b4360a234edea523d275b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f299f0909e1b4360a234edea523d275b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f299f0909e1b4360a234edea523d275b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f299f0909e1b4360a234edea523d275b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_f299f0909e1b4360a234edea523d275b.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHWYV18AAAAAAAAAAOAAIiALATAAADIAAAAIAAAAAAAAnlAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAExQAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApDAAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
UAAAAAAAAEgAAAACAAUADCwAAIgjAAABAAAAAAAAAJRPAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQADAwAAAAAAAAIoEAAACgICewQAAARvEwAABm8RAAAK
cxIAAAp9AQAABAJ7AQAABG8TAAAKAnMUAAAKJXIBAABwcgcAAHBvFQAACiVyLwAAcHI1AABwbxUA
AAolclcAAHByXQAAcG8VAAAKJXJ7AABwcoEAAHBvFQAACiVymwAAcHKhAABwbxUAAAolcrsAAHBy
wQAAcG8VAAAKJXLxAABwcvcAAHBvFQAACiVyHwEAcHIlAQBwbxUAAAolcksBAHByUQEAcG8VAAAK
JXJ9AQBwcoMBAHBvFQAACiVyqwEAcHKxAQBwbxUAAAolctUBAHBy2wEAcG8VAAAKJXIJAgBwcg8C
AHBvFQAACiVyQwIAcHJJAgBwbxUAAAolcncCAHByfQIAcG8VAAAKJXKnAgBwcq0CAHBvFQAACiVy
1wIAcHLdAgBwbxUAAAolcv8CAHByBQMAcG8VAAAKJXIjAwBwcikDAHBvFQAACiVyQwMAcHJJAwBw
bxUAAAolcmMDAHByaQMAcG8VAAAKJXK/AwBwcsUDAHBvFQAACn0CAAAEAnMUAAAKJXIBAABwcgcA
AHBvFQAACiVyLwAAcHI1AABwbxUAAAolclcAAHByXQAAcG8VAAAKJXJ7AABwcoEAAHBvFQAACiVy
mwAAcHKhAABwbxUAAAolcrsAAHBywQAAcG8VAAAKJXLxAABwcvcAAHBvFQAACiVyHwEAcHIlAQBw
bxUAAAolcksBAHByUQEAcG8VAAAKJXJ9AQBwcoMBAHBvFQAACiVyqwEAcHKxAQBwbxUAAAolctUB
AHBy2wEAcG8VAAAKJXIJAgBwcg8CAHBvFQAACiVyQwIAcHJJAgBwbxUAAAolcncCAHByfQIAcG8V
AAAKJXKnAgBwcq0CAHBvFQAACiVy1wIAcHLdAgBwbxUAAAolcv8CAHByBQMAcG8VAAAKJXIjAwBw
cikDAHBvFQAACiVyQwMAcHJJAwBwbxUAAAolcmMDAHByaQMAcG8VAAAKJXK/AwBwcusDAHBvFQAA
Cn0DAAAEKpYCKBYAAAoCewEAAAQsFgJ7AQAABG8XAAAKAnsBAAAEbxgAAAoqAAAAGzAHAE0FAAAB
AAARAnsFAAAEbxYAAAYCewUAAARvFQAABigZAAAKKBoAAAoKcg8EAHALcg8EAHAMcg8EAHANcg8E
AHATBHIPBABwEwVyDwQAcBMGcg8EAHATB3IPBABwEwhyDwQAcBMJcg8EAHATCnIPBABwEwtyDwQA
cBMMcg8EAHATDXIPBABwEw5yDwQAcBMPcg8EAHATEHIPBABwExFyDwQAcBMScg8EAHATEx8LjSsA
AAElFnIRBABwoiUXciMEAHCiJRhyLwQAcKIlGXJDBABwoiUaclMEAHCiJRtyXwQAcKIlHHJ3BABw
oiUdcn8EAHCiJR5yjwQAcKIlHwlyoQQAcKIlHwpyqQQAcKITFAZvGwAAChMVOOQDAAARFW8cAAAK
JR8/HxxvHQAACm8eAAAKCyUfWx5vHQAACm8eAAAKDCUfZBdvHQAACm8eAAAKDSUfZRdvHQAACm8e
AAAKEwQlH2YXbx0AAApvHgAAChMFJR9nHm8dAAAKbx4AAAoTBiUfbxdvHQAACm8eAAAKEwclH3AX
bx0AAApvHgAAChMIJR9xHm8dAAAKbx4AAAoTCSUfeR5vHQAACm8eAAAKEwolIIEAAAAebx0AAApv
HgAAChMLJSCJAAAAHm8dAAAKbx4AAAoTDCUgkQAAABhvHQAACm8eAAAKEw0lIJMAAAAYbx0AAApv
HgAAChMOIKkAAAAfD28dAAAKbx4AAAoTDwlytQQAcCgfAAAKOa0CAAByuQQAcAcoIAAACgJ7AQAA
BHMhAAAKExgCewEAAARvIgAAChcuCwJ7AQAABG8TAAAKERggwMYtAG8jAAAKERhvJAAAChMZOLAA
AAARGXLUBgBwbyUAAAp+JgAACi4+ERly1AYAcG8lAAAKLDARGXLUBgBwbyUAAApvJwAACnIPBABw
KB8AAAotExEZctQGAHBvJQAACm8nAAAKKwVyDwQAcBMQERly8AYAcG8lAAAKfiYAAAouPhEZcvAG
AHBvJQAACiwwERly8AYAcG8lAAAKbycAAApyDwQAcCgfAAAKLRMRGXLwBgBwbyUAAApvJwAACisF
cg8EAHATEREZbygAAAo6RP///94MERksBxEZbykAAArc3gwRGCwHERhvKQAACtwCewIAAAQRDW8q
AAAKLA8CewIAAAQRDW8rAAAKExICewMAAAQRDm8qAAAKLA8CewMAAAQRDm8rAAAKExNzLAAAChMW
cy0AAAoTFxEWB30uAAAKERZyBgcAcH0vAAAKERcHfTAAAAoRFwIRCSgEAAAGfTEAAAoRFwIIKAQA
AAZ9MgAAChEXEQd9MwAAChEXcrUEAHB9NAAAChEXEQR9NQAAChEXEQV9NgAAChEXERJ9NwAAChEX
ERN9OAAAChEXEQ59OQAAChEXEQ19OgAAChEXAhELKAQAAAZ9OwAAChEXAhEMKAQAAAZ9PAAAChEX
EQ99PQAAChEXAhEKKAQAAAZ9PgAAChEXAhEGKAQAAAZ9PwAAChEXEQh9QAAACgIRFygBAAArAhEW
KAIAACsRFBEQbx4AAAooAwAAKy0jc0IAAAoTGhEaB31DAAAKERpyTAcAcH1EAAAKAhEaKAQAACsR
EShFAAAKLUVzRgAAChMbERsHfUcAAAoRGxERfUgAAAoCERsoBQAAKysjcywAAAoTHBEcB30uAAAK
ERxyXgcAcH0vAAAKAhEcKAIAACsRFW9JAAAKOhD8///eDBEVLAcRFW8pAAAK3N45Ex0WEx4CKEoA
AAofCnKYBwBwER1vSwAACnK2BwBwER1vTAAACihNAAAKcg8EAHAWEh5vTgAACt4AKgAAAEFkAAAC
AAAAbQIAAMMAAAAwAwAADAAAAAAAAAACAAAAPwIAAP8AAAA+AwAADAAAAAAAAAACAAAADgEAAPcD
AAAFBQAADAAAAAAAAAAAAAAAAAAAABMFAAATBQAAOQAAABgAAAETMAUALQAAAAIAABFyvAcAcHNP
AAAKCgNyyAcAcAYWEgEoUAAACiwHB3NRAAAKKhIC/hUEAAAbCCoAAAATMAUArwAAAAMAABFzUgAA
CiUDb1MAAAooBgAAKwoGF405AAABJRYfLJ1vVQAAChaaBnIPBABwb1YAAApy2gcAcHIPBABwb1YA
AApy5gcAcHIPBABwb1YAAApy6gcAcHIPBABwb1YAAApy7gcAcHIPBABwb1YAAApy8gcAcHIPBABw
b1YAAApy9gcAcHIPBABwb1YAAAooRQAACiwBKgJ7BgAABG8KAAAGAnsGAAAEBm9XAAAKbwgAAAYq
HgIoDQAABioqAgMEBShYAAAKKiYCFgMoWQAACipaAywIAhYoWgAACipy+gcAcHNbAAAKeh4CKFwA
AAoqHgIoXQAACioeAiheAAAKKn4CKF8AAAoCAnMSAAAGfQQAAAQCAnMUAAAGfQUAAAQqBipuAnsG
AAAELBICewYAAARvCwAABgIUfQYAAAQqAAAAEzAFAEkAAAAEAAARFgorLgQGlA4EcpcIAHAoYAAA
CjMZAgUGmgIEBpQoYQAACg4EcwcAAAZ9BgAABAYXWAoGAzLOAm8RAAAGAm8OAAAGAigPAAAGKjoC
KGIAAAoCA30HAAAEKoICewcAAARvSgAACm9jAAAKcqkIAHBvZAAACm9lAAAKKjoCKGIAAAoCA30I
AAAEKpYCewgAAARvZgAACnK3CABwb2cAAAooaAAACm9pAAAKdCsAAAEqlgJ7CAAABG9mAAAKcs8I
AHBvZwAACihoAAAKb2kAAAp0KwAAASoeAihiAAAKKq5+CQAABC0ecvkIAHDQBwAAAihqAAAKb2sA
AApzbAAACoAJAAAEfgkAAAQqGn4KAAAEKh4CgAoAAAQqGn4LAAAEKh4CKG0AAAoqLnMcAAAGgAsA
AAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAoCQAAI34AAJQJAAA0DQAA
I1N0cmluZ3MAAAAAyBYAAGwJAAAjVVMANCAAABAAAAAjR1VJRAAAAEQgAABEAwAAI0Jsb2IAAAAA
AAAAAgAAAVcVogkJHQAAAPoBMwAWAAABAAAAQwAAAAgAAAALAAAAHQAAAA4AAABtAAAAEAAAAAQA
AAAFAAAACAAAAAkAAAAFAAAAAQAAAAoAAAABAAAAAQAAAAYAAAABAAAAAAASBwEAAAAAAAYAxgUz
CgYAWgYzCgYAEgX6CQ8ApwoAAAYAPwXCBwYAqQXCBwYAigXCBwYAQQbCBwYA5gXCBwYA/wXCBwYA
VgXCBwYAcQWuBgoAGgYRAw4AAQi6AQYA1gDLAQYAswDLAQYAwQDLARIAOgENChIA4wANCg4AFwK6
AQ4A5Qi6ARIATgENChIACgENCgYAIAhrBwYAqABrBwYA+wJrBwYAXAitBxIAawMNCgoALwkRAxYA
IAkRAwoAaAgRAwoAFgwRAwYAvAtrBxoAZgBuCQYA9QT6CQYAQAlTCh4AsAT8Bh4AJgX8Bh4AhAOY
BwYA2gQzCg4A9AdJCB4AHAz8BgYA6wZrBwYA2wJEAQ4AxQRiAQ4ADQJJCA4A2AhJCAYAOgdrBwYA
oAJrByIAlQLHCAYAyQlLCyYAAQCWCQYAAglrBwYA+wqtBwYAzwDLASoABANyCwYA0whrBwYAEAhr
ByYAKgCWCSYATQCWCRoAfwBuCRoAGgBuCYMArAwAABoAkABuCQYAMgNrBwYArAJrBwYAAw3CBwAA
AAD2AAAAAAABAAEAAQAQAIgHAAAQAAEAAQABABAAEgkAAHUABAAHAAEAEAD4CwAAgQAEAA0AAQAQ
AF4LAACFAAcAEgABABAA8QoAAIUACAAUAAAAEABaCrYKhQAJABcAAAEQADkLtgqdAAsAGwABAJMH
8gEBAOcL9gEBAOQL9gEGAF4L/gEGAPEKAgIGABIJBgIBAAYMCgIBAAYMCgIRAHcHDwIRAFsDFAIR
AFQCGAJQIAAAAADGAHgGBgABAF8jAAAAAMYAgwYGAAEAiCMAAAAAxgCMCwYAAQBIKQAAAACBAIoE
HAIBAIQpAAAAAIEA4wwmAgIAPyoAAAAAhhjjCQYAAwBHKgAAAACGGOMJaQEDAFIqAAAAAIYIbgEQ
AAYAXCoAAAAAhghBBy0CBwBzKgAAAACGANwMBgAIAHsqAAAAAIYAwwsGAAgAgyoAAAAAhgDGC7kA
CACLKgAAAACGGOMJBgAIAKsqAAAAAMYBfgsGAAgArSoAAAAAgQD5AQYACADMKgAAAADGAIMMMgII
AKsqAAAAAMYBjAsGAAwAISsAAAAAhhjjCT4CDAAwKwAAAACGCP8AlwENAFErAAAAAIYY4wk+Ag0A
YCsAAAAAhgjQAhwADgCGKwAAAACGCAwNHAAOAKwrAAAAAIMY4wkGAA4AtCsAAAAAkwg8CUUCDgDg
KwAAAACTCEMDSwIOAOcrAAAAAJMITwNQAg4A7ysAAAAAlgjYC1YCDwD2KwAAAACGGOMJBgAPAP4r
AAAAAJEY6QlbAg8AAAABACgCAAABACMCAAABADUJAAACABQLAAADAHYIAAABAKgGAAABAKgGAAAB
AIQLAAACAPAJAAADAGoLAAAEAHYIAAABABwMAAABABwMAAABAKgGCQDjCQEAEQDjCQYAGQDjCQoA
KQDjCRAAMQDjCRAAOQDjCRAAQQDjCRAASQDjCRAAUQDjCRAAWQDjCRAAYQDjCRAAaQDjCQYAGQHj
CQYAMQHjCRUAQQHjCQYAAQF4BgYAEQHUBhwAcQDjCRAASQGDBwYADADjCQYADAD1AScAAQGDBgYA
SQGcAwYAUQG7AwYAWQGgC2IAYQEKC2gAFADVCXcAHAAmDIYAWQHyBosAWQFyBxwAWQElDZEAWQGn
C5cAoQDjCZ0ASQGmBKQAcQFwDAEAoQD0CKoAeQFZB68AgQGiBrQACQHpBhwAeQHwAbkAiQG7AwYA
DADzDL0ADABZB8MAkQDjCQYAmQDjCQYAkQDmAcoAkQDVBMoAmQAZAcoAmQCSBM0AmQB1BM0AmQB5
AsoAmQA1BMoAmQABBMoAmQBZBMoAmQAtCMoAmQAqCMoAmQCPBsoAmQCSBsoAmQDgA80AmQDDA80A
mQAgAcoAmQDtA80AmQDOA80AmQDDCcoAkQFCC98AsQDjCQYAsQDmAcoAsQBuAsoAWQEyAvUAuQDj
CQYAuQDmAcoAuQBkAsoAmQGPDLkAAQF3Af8AwQCJAhwAwQBFAhwAWQGgCwUBoQG/CQwB2QDjCRAA
0QCuCyQBJADjCToBLADjCQYALAD1AToBwQHIBkwBWQHSC1wBWQEqAmMBWQFmCRwA6QDjCWkB6QBi
B3MB6QBRBwEA0QHjCRAA6QDcDAYA6QDDCwYA6QDGC7kAAQHjCQYAAQEuAX0BAQEoC4QBCQHjCQYA
oQHUB4oB2QHgApAB4QFQCZcBAQHlCp0B6QFZB6MBAQHHDKoB8QGYDLABCQK+ArcBCQL/DMABIQHj
CcYBOQHjCQYALgALAH0CLgATAIYCLgAbAKUCLgAjAK4CLgArANcCLgAzANcCLgA7ANcCLgBDAK4C
LgBLAN0CLgBTANcCLgBbAPQCQwBjADwDyQBzAKUC4wBrADwD6QBzAKUCYQF7ADwDLwAXAUABeQED
AAEABQADAAYABAAHAAYACAAIAAAAiAFfAgAARQdjAgAAAwFnAgAA1AJfAgAAEA1fAgAAQAltAgAA
YwNzAgAA3At4AgEACAADAAEACQAFAAIAEwAHAAIAFQAJAAIAFgALAAIAGAANAAIAGQAPAAEAGgAP
AAIAGwARACAAcQCAADMBRAEEgAAAAQAAAIQdUkQAAAAAAACNAQAABAAAAAAAAAAAAAAAzgGxAQAA
AAALAAAAAAAAAAAAAADXATIMAAAAAAQAAAAAAAAAAAAAAM4BYgEAAAAAAQABAAAAAAAAAAAA4AGi
AwAAAAALAAAAAAAAAAAAAADXAU8MAAAAAAsAAAAAAAAAAAAAANcBgAgAAAAABAAAAAAAAAAAAAAA
zgFrBwAAAAAEAAAAAAAAAAAAAADOATcDAAAAAAsAAAAAAAAAAAAAANcBowgAAAAAAwACAAcAAAAA
AAAA6QFyCwAAAAAAAAAAAQAAAGQKAAAAAAAACwBgAQoA1QAKANoAgwDsAAoA8AAKAPoAqQBXAQEA
cQAAAAAAAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRp
bWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nv
bm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQx
MDAATnVsbGFibGVgMQBJRW51bWVyYWJsZWAxAElFbnVtZXJhdG9yYDEATGlzdGAxAERpY3Rpb25h
cnlgMgBET0RMSVRTY3J1YkhpdF8xMTcAPE1vZHVsZT4AZ2V0X0FSVElWQQBDbG9zZUFjY291bnRf
QwBBQ0NUSUQAQ2VydGlmaWNhdGVJRABHZXRPdXRwdXRJRABOb3RlX05PVEUAU3lzdGVtLklPAFN0
YXR1c0NvZGVVcGRhdGVfU1QAU3lzdGVtLkRhdGEAc2V0X0RhdGEAZ2V0X0NvbXBvbmVudE1ldGFE
YXRhAFNDX2YyOTlmMDkwOWUxYjQzNjBhMjM0ZWRlYTUyM2QyNzViAG1zY29ybGliAFN5c3RlbS5E
YXRhLk9kYmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWNjb3VudElkAFJlYWQAQWRkAE1h
cmtPdXRwdXRzRmluaXNoZWQARGJDb21tYW5kAE9kYmNDb21tYW5kAHJlY29yZABSZXBsYWNlAElz
TnVsbE9yV2hpdGVTcGFjZQBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAQ2xvc2VDb2Rl
AFN0YXR1c0NvZGUATWF0Y2hSZXN1bHRDb2RlAGdldF9NZXNzYWdlAEVudW1lcmFibGUASURpc3Bv
c2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0N1cnJlbnRGaWxl
AEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAERhdGVUaW1lAENvbW1vbkVuZ2luZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBHZW5lcmFsUHVycG9zZVJlY29yZEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlAERpc3Bvc2UA
RUlERW5kRGF0ZQBBY3RpdmVEdXR5RW5kRGF0ZQBFSURCZWdpbkRhdGUAQWN0aXZlRHV0eUJlZ2lu
RGF0ZQBMZWZ0QWN0aXZlRHV0eUxURTM2N0RheXNmcm9tdGhlQWN0aXZlRHV0eVN0YXR1c0RhdGUA
T25BY3Rpdml0eW9udGhlQWN0aXZlRHV0eVN0YXR1c0RhdGUATm90aWZpZWRvZkFjdGl2ZUR1dHlS
ZWNhbGxvbkFjdGl2ZUR1dHlTdGF0dXNEYXRlAGdldERhdGUAU0NSQURPRFNjcnViSGl0RGF0ZQBn
ZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlAE5vdGUAQ29tcGls
ZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dh
YmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmli
dXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBB
c3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBFSURTZXJ2aWNlQ29tcG9uZW50VmFsdWUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBXcml0ZVN0cmluZwBnZXRfQ29ubmVjdGlv
blN0cmluZwBUb1N0cmluZwBTdWJzdHJpbmcAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2YyOTlm
MDkwOWUxYjQzNjBhMjM0ZWRlYTUyM2QyNzViLmRsbABEQk51bGwAc2V0X0RhdGFfSXNOdWxsAFNl
dE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0AcmVzb3VyY2VNYW4AT3BlbgBTY3Jp
cHRNYWluAGNvbm4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBEYkNvbm5lY3Rp
b24AT2RiY0Nvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBFSURTZXJ2aWNlQ29t
cG9uZW50RGVzY3JpcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9uAEN1bHR1cmVJbmZvAE91dHB1dE5h
bWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAU3lzdGVtLkxpbnEAQ2hhcgBEYkRhdGFSZWFk
ZXIAT2RiY0RhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBJRm9ybWF0UHJvdmlkZXIAT3V0cHV0MEJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
LldyYXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBGaXJlRXJy
b3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3Rl
bS5EaWFnbm9zdGljcwBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19mMjk5ZjA5MDll
MWI0MzYwYTIzNGVkZWE1MjNkMjc1Yi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfZjI5OWYwOTA5ZTFiNDM2MGEyMzRlZGVhNTIzZDI3NWIuUHJvcGVydGll
cwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMARGF0ZVRpbWVTdHlsZXMAUmVhZExpbmVzAEJ1ZmZlckNv
bHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDb250YWlucwBTeXN0ZW0uQ29s
bGVjdGlvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaWxlSGVscGVycwBGaW5pc2hPdXRwdXRzAENy
ZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABUcnlQYXJzZUV4YWN0AE9iamVjdABTZXRF
bmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABFSURTZXJ2aWNlQ29tcG9uZW50AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNl
dF9Db21tYW5kVGltZW91dABQcmltZU91dHB1dABNb3ZlTmV4dABHZXRWYWx1ZVdpdGhDb250ZXh0
AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBB
ZGRQbGFjZW1lbnRSb3cAQ29udGFpbnNLZXkAZ2V0X0Fzc2VtYmx5AGdldF9GdWxsSW5ib3VuZERp
cmVjdG9yeQBvcF9FcXVhbGl0eQAAAAAABUEARwAAJ0EAcgBtAHkAIABOAGEAdABpAG8AbgBhAGwA
IABHAHUAYQByAGQAAAVBAFIAACFBAHIAbQB5ACAAQQBjAHQAaQB2AGUAIABEAHUAdAB5AAAFQQBU
AAAdQQByAG0AeQAgAFQAZQBtAHAAbwByAGEAcgB5AAAFQQBWAAAZQQByAG0AeQAgAFIAZQBzAGUA
cgB2AGUAAAVBAFoAABlBAHIAbQB5ACAAVQBuAGsAbgBvAHcAbgAABUMAUgAAL0MAbwBhAHMAdAAg
AEcAdQBhAHIAZAAgAEEAYwB0AGkAdgBlACAARAB1AHQAeQAABUMAVgAAJ0MAbwBhAHMAdAAgAEcA
dQBhAHIAZAAgAFIAZQBzAGUAcgB2AGUAAAVGAEcAACVBAGkAcgAgAE4AYQB0AGkAbwBuAGEAbAAg
AEcAdQBhAHIAZAAABUYAUgAAK0EAaQByACAARgBvAHIAYwBlACAAQQBjAHQAaQB2AGUAIABEAHUA
dAB5AAAFRgBUAAAnQQBpAHIAIABGAG8AcgBjAGUAIABUAGUAbQBwAG8AcgBhAHIAeQAABUYAVgAA
I0EAaQByACAARgBvAHIAYwBlACAAUgBlAHMAZQByAHYAZQAABUgAUgAALVAAdQBiAGwAaQBjACAA
SABlAGEAbAB0AGgAIABTAGUAcgB2AGkAYwBlAHMAAAVNAFIAADNNAGEAcgBpAG4AZQBzACAAQwBv
AHIAcABzACAAQQBjAHQAaQB2AGUAIABEAHUAdAB5AAAFTQBUAAAtTQBhAHIAaQBuAGUAIABDAG8A
cgBwAHMAIABUAGUAbQBwAG8AcgBhAHIAeQAABU0AVgAAKU0AYQByAGkAbgBlACAAQwBvAHIAcABz
ACAAUgBlAHMAZQByAHYAZQAABU0AWgAAKU0AYQByAGkAbgBlACAAQwBvAHIAcABzACAAVQBuAGsA
bgBvAHcAbgAABU4AUgAAIU4AYQB2AHkAIABBAGMAdABpAHYAZQAgAEQAdQB0AHkAAAVOAFQAAB1O
AGEAdgB5ACAAVABlAG0AcABvAHIAYQByAHkAAAVOAFYAABlOAGEAdgB5ACAAUgBlAHMAZQByAHYA
ZQAABU4AWgAAGU4AYQB2AHkAIABVAG4AawBuAG8AdwBuAAAFTwBSAABVTgBhAHQAJwBsACAATwBj
AGUAYQBuAGkAYwAgACYAIABBAHQAbQBvAHMAcABoAGUAcgBpAGMAIABBAGQAbQBpAG4AaQBzAHQA
cgBhAHQAaQBvAG4AAQVaAFoAACVOAC8AQQAgACgAVQBuAGEAZgBmAGkAbABpAGEAdABlAGQAKQAA
I04ALwBBACAAKABVAG4AYQBmAGYAaQBsAGkAYQB0AGUAZAAAAQARQgBBAE4ASwBSAFUAUABUAAAL
QwBFAEEAUwBFAAATQwBPAE0AUABMAEEASQBOAFQAAA9EAEkAUwBQAFUAVABFAAALRgBSAEEAVQBE
AAAXSQBOAEEAQwBUAEMAQQBOAEMARQBMAAAHTABJAFQAAA9TAEgAUgBBAEQATABTAAARUwBIAFIA
TABFAEcAQQBMAAAHUwBPAEwAAAtWAEMATwBNAFAAAANYAACCGVMARQBMAEUAQwBUACAAYQBjAGMA
bwB1AG4AdAAuAEEAUgBBAEMASQBEACAAQQBjAGMAbwB1AG4AdABJAEQALABhAHIAcgBlAGwAYQAu
AEEAUgBSAEUATABTAFQAQQBUAFUAUwBJAEQAIABBAGMAYwBvAHUAbgB0AFMAdABhAHQAdQBzACwA
YwBsAHQALgBaAFoAUwBDAFIAQQBEAE8ARABDAEEATgBDAEQARQAgAEMAYQBuAGMAZQBsAEMAbwBk
AGUAIABGAFIATwBNACAAQQBSAEEAQwBDAE8AVQBOAFQAIABhAGMAYwBvAHUAbgB0ACAASgBPAEkA
TgAgAEEAUgBSAEUATABBAFQASQBPAE4AUwBIAEkAUAAgAGEAcgByAGUAbABhACAATwBOACAAYQBj
AGMAbwB1AG4AdAAuAEEAUgBBAEMAUgBQAFIARQBMAEkARAAgAD0AIABhAHIAcgBlAGwAYQAuAEEA
UgBSAEUATABJAEQAIABKAE8ASQBOACAAQQBSAEMATABJAEUATgBUACAAYwBsAHQAIABPAE4AIABh
AGMAYwBvAHUAbgB0AC4AQQBSAEEAQwBDAEwAVABJAEQAIAA9ACAAYwBsAHQALgBBAFIAQwBMAEkA
RAAgAFcASABFAFIARQAgAGEAYwBjAG8AdQBuAHQALgBBAFIAQQBDAEkARAAgAD0AIAAnAHsAMAB9
ACcAARtBAGMAYwBvAHUAbgB0AFMAdABhAHQAdQBzAAAVQwBhAG4AYwBlAGwAQwBvAGQAZQAARVMA
QwBSAEEAIABTAEMAUgBVAEIAIABSAEUAVABVAFIATgBFAEQAIAAtACAASABJAFQAIABSAEUAQwBF
AEkAVgBFAEQAARFNAEkATABEAEUAUABMAFkAADlTAEMAUgBBACAAUwBDAFIAVQBCACAAUgBFAFQA
VQBSAE4ARQBEACAALQAgAE4ATwAgAEgASQBUAAEdUAByAG8AYwBlAHMAcwAgAFYAYQBsAHUAZQBz
AAAFQABAAAALZQBuAC0AVQBTAAEReQB5AHkAeQBNAE0AZABkAAALQwBPAE0AQQBLAAADLAAAAy4A
AAMwAAADLwAAA04AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAR
TwB1AHQAcAB1AHQAIAAwAAANQQBSAFQASQBWAEEAABdDAHUAcgByAGUAbgB0AEYAaQBsAGUAAClG
AHUAbABsAEkAbgBiAG8AdQBuAGQARABpAHIAZQBjAHQAbwByAHkAAHFTAEMAXwBmADIAOQA5AGYA
MAA5ADAAOQBlADEAYgA0ADMANgAwAGEAMgAzADQAZQBkAGUAYQA1ADIAMwBkADIANwA1AGIALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAB67SFw1KSqTJLQYeHvR+yz
AAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAlQMgAA4GFRI9Ag4OByACARMAEwEyBx8VEkEBDg4O
Dg4ODg4ODg4ODg4ODg4ODg4dDhUSRQEOEkkSTRJRElUSWRJdEkkSYQIFAAIODg4IAAEVEkEBDg4F
FRJBAQ4IIAAVEkUBEwAFFRJFAQ4EIAATAAUgAg4ICAUAAgIODgUAAg4OHAYgAgEOEjkFIAARgLUE
IAASVQQgARwOBAYSgMEDIAACBSABAhMABiABEwETAAIGDgcGFRFlARFpBAoBEk0ECgESSQwQAQIC
FRJBAR4AHgADCgEOBAoBElkEAAECDgQKARJdBSAAEoDRBgADDg4ODgogBgEIDg4OCBACDAcDEm0R
aRURZQERaQ4ABQIODhKA1RGA2RARaQYVEWUBEWkFIAEBEwADBwEOBxUSgN0BHgAKEAEBDhUSQQEe
AAQKAR4ABiABHQ4dAwUgAg4ODgkgAwESeR0IEn0FIAIBCBwDBwEIBgACCBJ9DgUgAR0ICAUgABKA
7QYgARKA8Q4FIAASgIkFIAASgPUGIAESgPkcBQAAEoD9BiABHBKBAQgAARKBBRGBCQUgABKBDQcg
AgEOEoENCLd6XFYZNOCJCImEXc2AgMyRCPoM7UpFUaeCCD4MCNWcw9ZXAwYSOQcGFRI9Ag4OAwYS
FAMGEhgDBhIMBAYSgIEEBhKAkQMGEm0DBhIgCSABFRFlARFpDgYwAQEBHgAEIAEBAgsgBAEIHQgd
EnkSfQYgAQESgIEFAAASgJEEAAASbQUAAQESbQQAABIgAwAAAQMoAA4DKAACBSgAEoCJBQgAEoCR
BAgAEm0ECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAA
AAAoAQAjU0NfZjI5OWYwOTA5ZTFiNDM2MGEyMzRlZGVhNTIzZDI3NWIAAAUBAAAAABYBABFDb3B5
cmlnaHQgQCAgMjAyMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdv
cmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAdFAAAAAA
AAAAAAAAjlAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBQAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAaBAAAAAAA
AAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
UkSEHQAAAQBSRIQdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEegMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgAB
AAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAA
AAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADIAOQA5
AGYAMAA5ADAAOQBlADEAYgA0ADMANgAwAGEAMgAzADQAZQBkAGUAYQA1ADIAMwBkADIANwA1AGIA
AAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA1ADUANgAuADEANwA0
ADkAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADIAOQA5AGYA
MAA5ADAAOQBlADEAYgA0ADMANgAwAGEAMgAzADQAZQBkAGUAYQA1ADIAMwBkADIANwA1AGIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
MgA5ADkAZgAwADkAMAA5AGUAMQBiADQAMwA2ADAAYQAyADMANABlAGQAZQBhADUAMgAzAGQAMgA3
ADUAYgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADIA
OQA5AGYAMAA5ADAAOQBlADEAYgA0ADMANgAwAGEAMgAzADQAZQBkAGUAYQA1ADIAMwBkADIANwA1
AGIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANQA1ADYA
LgAxADcANAA5ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANQA1ADYALgAxADcANAA5ADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAoDAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_f299f0909e1b4360a234edea523d275b</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::CurrentFile,User::FullInboundDirectory</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">e02be51046ffd37e00d805cdbf902f77</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">240a59e1755bb46c828ce07d8540b6ebd50e151f</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Connections[ARTIVA]"
                      connectionManagerID="Package.ConnectionManagers[Artiva]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva]"
                      name="ARTIVA" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="4000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Output 0]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{E8D8BE54-A64E-4C31-8A0F-BDA9D3F0CA4C}"
          DTS:ObjectName="{E8D8BE54-A64E-4C31-8A0F-BDA9D3F0CA4C}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="53,28" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="253,125"
          Size="253,168"
          Id="Package\Foreach Loop Container"
          TopLeft="178,105" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Script Component"
          TopLeft="218,36" />
        <NodeLayout
          Size="172,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
          TopLeft="228,188" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Output 0]"
          TopLeft="299.5,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.5,110"
              Start="0,0"
              End="14.5,102.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51"
                    Point2="0,55"
                    Point3="4,55" />
                  <mssgle:LineSegment
                    End="10.5,55" />
                  <mssgle:CubicBezierSegment
                    Point1="10.5,55"
                    Point2="14.5,55"
                    Point3="14.5,59" />
                  <mssgle:LineSegment
                    End="14.5,102.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>