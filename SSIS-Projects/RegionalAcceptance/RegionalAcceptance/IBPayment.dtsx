<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/17/2020 8:44:28 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{BAA3A141-4832-44C6-B9C6-98DEF4DE8F2D}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IBPayment"
  DTS:PackageType="5"
  DTS:VersionBuild="81"
  DTS:VersionGUID="{88B8F18F-C364-41DC-84C7-187343A073A5}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[artiva_import_file]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3BAC4D6D-20C3-4295-BCAE-B36337814684}"
      DTS:ObjectName="artiva_import_file">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PathArtiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\RegionalAcceptance\Outbound\ArtivaMT-THIRDPROD-Regional Acceptance Corp-IBPay-0-68202133558PM.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RowData"
              DTS:DTSID="{DCBD1454-6EF8-4BAD-83F7-1338503EC79A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\RegionalAcceptance\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Input Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C0374B93-6EF6-4B94-8189-D60E8B3B1E19}"
      DTS:ObjectName="Input Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory] +   @[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\RegionalAcceptance\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Account"
              DTS:DTSID="{8AAB6861-AA21-4F5D-B713-15F73C80D687}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DateofPayment"
              DTS:DTSID="{0A317724-A65D-49D1-B3A7-CDB0448848A9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Reference"
              DTS:DTSID="{6FAEAA57-C0C3-4C9C-B554-C255A12F05E1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Amount"
              DTS:DTSID="{25558C02-19F6-4E3A-8692-78BCDB1EA81A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="8000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Notes"
              DTS:DTSID="{A6CEA670-A090-43FC-AA26-201387C7E278}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4395FBE0-08FA-4AB6-B4BB-4998DA84A206}"
      DTS:ObjectName="ClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Regional Acceptance Corp</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{605CEF0F-AB6D-400B-97B9-67FB99DB898A}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{49F5879C-A729-4B5A-B918-3D7724915823}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*.txt</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FBF83F87-E851-4977-BAF7-F17FFF63D9B3}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4DB5F2F6-BD55-456D-9B67-2CE7C1CDA7BF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current1196">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CD9CE849-3CF0-407E-95A4-A37BCE6B632F}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Current1199">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07AEE5D4-4721-4E32-9132-6E1C2AC7087B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6E8A54F4-5854-4E77-A153-34CF84DBD270}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE(LEFT(  (DT_WSTR, 99) @[System::StartTime]  ,19)&#xA;,&quot;:&quot;,&quot;&quot;),&quot;/&quot;,&quot;&quot;),&quot; &quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DateStamp">
      <DTS:VariableValue
        DTS:DataType="8">68202133558PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CB79A104-2CAB-4124-969F-3A97B5B0C315}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullInboundDirectory] +  @[User::CurrentFile]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="delete">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Inbound\0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C1DD400C-D870-404F-A094-35D1B8716B6C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9DDDA979-CFF0-42AC-BDE9-3EFC94DACC11}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EBFECE2B-3D95-417E-950F-EFF22AFC5403}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5477BE4A-4E93-4F76-9F81-9C6E6631A40C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-IBPay-&quot; + @[User::CurrentFile]  + &quot;-&quot; + @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathArtiva">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Outbound\ArtivaMT-THIRDPROD-Regional Acceptance Corp-IBPay-0-68202133558PM.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Convert Excel file to tsv"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{452c8db2-5e44-4170-9b6f-f4adda976f8f}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Convert Excel file to tsv"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_f365e80cd58b4c33b88d88b2ef89eb33"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::CurrentFile,User::FullInboundDirectory">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_f365e80cd58b4c33b88d88b2ef89eb33.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{37B8C254-D99C-4987-B582-3B0859F56E9C}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1273b7f439464067889e1468a38222e2</RootNamespace><AssemblyName>ST_f365e80cd58b4c33b88d88b2ef89eb33</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.CSharp" /><Reference Include="Microsoft.Office.Interop.Excel, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL"><EmbedInteropTypes>True</EmbedInteropTypes></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugd2023cf3-f023-458f-a419-25349037fe7f/c89a9e96-39c8-4a01-ab32-96ab61cdc83d&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Settings.get_Default():ST_1273b7f439464067889e1468a38222e2.Properties.Sett" +
    "ings")]

namespace ST_1273b7f439464067889e1468a38222e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Microsoft.Office.Interop.Excel;
using System.Runtime.InteropServices;
using System.IO;
using System.Linq;
using System.Text;
#endregion

namespace ST_1273b7f439464067889e1468a38222e2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            string dirPath = (string)Dts.Variables["User::FullInboundDirectory"].Value;

            Microsoft.Office.Interop.Excel.Application myExcel;
            Microsoft.Office.Interop.Excel.Workbook myWorkbook;
            Microsoft.Office.Interop.Excel.Workbooks workbooks;
            Microsoft.Office.Interop.Excel.Worksheet worksheet;
            
            //int wsIndex = (int)Dts.Variables["$Package::WorksheetIndex"].Value;
            var files = Directory.GetFiles(dirPath, "*.xls");
            files=files.Concat(Directory.GetFiles(dirPath, "*.xlsx")).ToArray();

            try
            {
                for (int a = 0; a < files.Length; a++)
                {
                    string fullPath = files[a];
                    string currentFile = files[a];
                    int sind = currentFile.Contains("1199") ? 10 : 9;
                    if (currentFile.EndsWith(".xls") || currentFile.EndsWith(".xlsx"))
                    {


                        myExcel = new Microsoft.Office.Interop.Excel.Application();
                        myExcel.DisplayAlerts = false;
                        workbooks = myExcel.Workbooks;
                        workbooks.Open(fullPath);
                        myWorkbook = myExcel.ActiveWorkbook;
                        worksheet = (Microsoft.Office.Interop.Excel.Worksheet)myWorkbook.Worksheets[1];
                        //fullPath = fullPath.Replace("–", "-").Replace(".xlsx", ".txt").Replace(".xls", ".txt");
                        //myWorkbook.SaveAs(fullPath, Microsoft.Office.Interop.Excel.XlFileFormat.xlTextWindows, Type.Missing, Type.Missing, Type.Missing, false, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);

                        worksheet.Columns.ClearFormats();
                        worksheet.Rows.ClearFormats();

                        int lastRowIgnoreFormulas = worksheet.Cells.Find(
                "*",
                System.Reflection.Missing.Value,
                Microsoft.Office.Interop.Excel.XlFindLookIn.xlValues,
                Microsoft.Office.Interop.Excel.XlLookAt.xlWhole,
                Microsoft.Office.Interop.Excel.XlSearchOrder.xlByRows,
                Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious,
                false,
                System.Reflection.Missing.Value,
                System.Reflection.Missing.Value).Row;

                        int lastColIgnoreFormulas = worksheet.Cells.Find(
                "*",
                System.Reflection.Missing.Value,
                System.Reflection.Missing.Value,
                System.Reflection.Missing.Value,
                Microsoft.Office.Interop.Excel.XlSearchOrder.xlByColumns,
                Microsoft.Office.Interop.Excel.XlSearchDirection.xlPrevious,
                false,
                System.Reflection.Missing.Value,
                System.Reflection.Missing.Value).Column;

                        Microsoft.Office.Interop.Excel.Range xlRange = worksheet.UsedRange;


                        int rowCount = xlRange.Rows.Count;
                        int colCount = xlRange.Columns.Count;
                        fullPath = fullPath.Replace("–", "-").Replace(".xlsx", ".txt").Replace(".xls", ".txt");
                        var str = new StringBuilder();
                        str.AppendLine("Account\tDateofPayment\tReference\tAmount\tNotes");
                        string s = "";
                        for (int i = 1; i <= lastRowIgnoreFormulas; i++)
                        {

                            for (int j = 1; j <= lastColIgnoreFormulas; j++)
                            {


                                if (i >= sind && j >= 2)
                                {

                                    if (xlRange.Cells[i, j] != null && xlRange.Cells[i, j].Value2 != null)
                                    {
                                        
                                       s += xlRange.Cells[i, j].Value2.ToString().Trim() + "\t";





                                    }


                                }


                            }

                            if (i >= sind)
                            {
                                str.AppendLine(s);
                                s = "";
                            }

                        }

                        if (File.Exists(fullPath))
                            File.Delete(fullPath);

                        File.AppendAllText(fullPath, str.ToString());






                        GC.Collect();
                        GC.WaitForPendingFinalizers();
                        Marshal.ReleaseComObject(worksheet);                        
                        myWorkbook.Close(Type.Missing, Type.Missing, Type.Missing);
                        if(myWorkbook != null)
                            Marshal.ReleaseComObject(myWorkbook);

                        Marshal.ReleaseComObject(workbooks);
                        myExcel.Quit();
                        Marshal.ReleaseComObject(myExcel);


                    }
                }

            } catch(Exception e)
            {
                Dts.Events.FireError(18, "Process Values", e.StackTrace, "", 0);
                
            }
            


            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_1273b7f439464067889e1468a38222e2</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_1273b7f439464067889e1468a38222e2</msb:DisplayName>
		<msb:ProjectId>{8E34C634-8F59-4E1F-9E78-EC56F032CD42}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f365e80cd58b4c33b88d88b2ef89eb33.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1273b7f439464067889e1468a38222e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1273b7f439464067889e1468a38222e2")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1273b7f439464067889e1468a38222e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1273b7f439464067889e1468a38222e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_f365e80cd58b4c33b88d88b2ef89eb33.dll">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
YgAAAAAAAAACAAABVz+iCQkLAAAA+gEzABYAAAEAAAA/AAAAGQAAACAAAAA3AAAAMwAAAAkAAABV
AAAADAAAAH8AAAAwAAAAAQAAAAcAAAAUAAAAFwAAAA4AAAABAAAABgAAAAEAAAACAAAAAgAAAAAA
igcBAAAAAAAGALYFywkGAFYGywkGAKQEmQkPAD8KAAAGANEEYAgGAGoFYAgGAEsFYAgGAD0GYAgG
AOcFYAgGAAAGYAgGAP8EYAgGABoFjgYKABsGDAcKAMMDDAcGAOEIAw0GAFMMuwcGAIQIuwcGAMIH
uwcGAEMEywkOAHQAywkGAD0BuwcOACoEywkGAGQBuwcGAIcEmQkGAC8J6wkGAI4ISwgSAA4EdAcS
ALgEdAcSAN8DNggGAF4ErAkGAOgErAkGAJ4FrAkGAIIDuwcGAGwErAkGANYFrAkGAIcFYAgGAP4C
OQsGADMErAkGADMFrAkKAGIHDAcWAI0KTQMWAPUCTQMGAKoGuwcGAGgNEAIOAP8CvggGAGYATgIG
AI8CuwcGAHcJuwcGABMDuwcaABYJ7wgOAA4JywkaAMEK7wgGAJQAuwcGALEGYAgGAOAHuwcaAJoI
7wgaAKkK7wgOAHgDIQsGADcDEAIGAPwBuwcGADsHrAkKAD8JDAcGAFYNYAgAAAAA8wEAAAAAAQAB
AAEAEADtB60AOQABAAEAAAAQAPIJWgpBAAEAAwAAARAA0wpaCnUAAwAHAKEQAADVC0MHAAAEAAoA
oRAAANMMQwcAAAQACgChEAAACwhDBwAABAAKAKEQAAC8C0MHAAAEAAoAoRAAAK4MQwcAAAQACgCh
EAAA6AJDBwAABAAKAKEQAACCC0MHAAAEAB0AoRAAAOQGQwcAAAQAHwChEAAAxgtDBwAABAAfAKEQ
AAC+DEMHAAAEAB8AoRAAAOwKQwcAAAQAHwChEAAAYwxDBwAABAAhAAEBAADHB0MHSQAEACEAAQEA
ACcMQwdJAAgAIQABAQAAcghDB0kACwAhAAEBAAAdCUMHSQAOACEAoRAAAAoIQwcAABEAIQChEAAA
wgZDBwAAEQAsAKEQAABiDEMHAAARADAAAwEAAJgLAABJABEAOACDARAAIwAAAEEAFAA4ABEA1Adz
AhEAswN3AhEA0AJ7AgYGPQJ/AlaAjgmCAlaApguCAlaAoAqCAgYGPQJ/AlaA7QyGAlaAPAOGAgYG
PQJ/AlaA/AyKAlaACgyKAgYGPQJ/AlaAFQuOAlaAHgyOAgYGPQJ/AlaAZQuSAlaAkwOSAhYAKgCW
AhYAXwClAhYApgC0AhYANgGlAhYAXQGlAhYAkAHCAhYArwHCAhYAtgG0AhYA1wG0AhYA7AG0AhYA
AQDQAhYAPgDfAhYAjADuAlAgAAAAAIYA8wcGAAEA4CcAAAAAhhiBCQYAAQDoJwAAAACDGIEJBgAB
APAnAAAAAJMIKwn8AgEAHCgAAAAAkwibAwEDAQAjKAAAAACTCKcDBgMBACsoAAAAAJYIkwwMAwIA
MigAAAAAhhiBCQYAAgA6KAAAAACRGIcJDAICAAAAAAADAAYYRgAGAAIAAAAAAIMQxg32ChEDAgAA
AAAAAwAGGFEBBgADAAAAAACDEMYFdQtoAAMAAAAAAAMABhiaAAYABAAAAAAAgxDGDf8HFgMEAAAA
AAADAAYYUwAGAAQAAAAAAIMQxg0JCxEDBAAAAAAAAwAGGJcBBgAFAAAAAACDEMYN4wwWAwUAAAAA
AAMABhijAQYABQAAAAAAgxDGDXkMGgMFAAAAAACDEMYNhgwgAwgAAAAAAAMABhjfAAYACwAAAAAA
gxDGBZQCJwMLAAAAAAADAAYYygEGABUAAAAAAIMQxg0mDRYDFQAAAAAAAwAGGCoBBgAVAAAAAACD
EMYNFQwRAxUAAAAAAAMABhi9AQYAFgAAAAAAAxDGDXkMNgMWAAAAAAADAAYYfwAGABgAAAAAAAMQ
xgXoBzsDGAAAAAAAAwAGGDEABgAoAAAAAAADEMYN2gZPAygAAAAAAAMABhjsAAYAKQAAAAAAAxDG
DegKVAMpAAAAAAADAAYYFgAGACoAAAAAAAMQxg15DAICKgAAAAAAAwAGGIQBBgArAAAAAAADEMYN
3wtZAysAAAAAAAMQxg3xC10DKwAAAAAAAwAGGN4BBgAsAAAAAAADEMYFdAwGACwAAAAAAAMABhgJ
AAYALAAAAAAAAxDGBQEEIAMsAAAAAAADAAYY0QAGAC8AAAAAAAMQxg2JC2IDLwAAAAAAAwAGGGsB
BgAwAAAAAAADEMYN9goRAzAAAAAAAAMABhh4AQYAMQAAAAAAAxDGDQkLEQMxAAAAAAADAAYYHQEG
ADIAAAAAAAMQxg0VDBEDMgAAAAAAAwAGGEQBBgAzAAAAAAADEMYN4AIRAzMAAAABAIgGACAAAAAA
ACAAAAAAACAAAAAAACAAAAAAESABADoNESACAC4NESABADoNESACAC4NESADAAAAACAAAAAAASAB
ADcMESACAFMJESADAM0HESAEACkMESAFAB8JERAGAHQIESAHAPcDESAIAHQGESAJADwMACAAAAAA
ACAAAAAAASABAD0NACAAAAAAASABAEQDESACANwKESADAF8NESAEAEIMESAFAKECESAGAJkCESAH
AHUCESAIAPgHESAJAFkJESAKAAoDESALAEsNESAMAGMJESANAB0NESAOADUHESAPAGkCACAAAAAA
ACAAAAAAACAAAAAAAQABABoCESABAE4KESACAEQDESADAMwGACAAAAAAACAAAAAAACAAAAAAACAA
AAAAACAAAAAABwBUAAcAGAAKAJUACwCVAAwAWAAMADgADwCVABAAXAAQACQACQCBCQEAEQCBCQYA
GQCBCQoAKQCBCRAAMQCBCRAAOQCBCRAAQQCBCRAASQCBCRAAUQCBCRAAWQCBCRAAYQCBCRAAaQCB
CQYAmQCBCQYAwQCBCQYA4QCBCRUA8QCBCRAA+QCBCRsAAQGBCQYAEQGBCSAAAQGBCSoAGQGBCTAA
IQGBCRAAMQGBCQEAOQGBCQEAcQBtC1UAQQGJClsASQGyB2EAUQF+BmgAYQGXCmwAaQEwDHMAaQFD
DZAAWQEAC54AWQG5Bp4AeQGBCRAACQH/AaMAgQHBAqwACQGxBrMACQElA7YAkQH0DL8ADAAHBNwA
DABtDOgAFADuAvYAsQGCBv8AWQGqAgQBeQCBCQYAeQBtAwoBwQEHBBABkQEXCBoBHAAHBNwAHABt
DOgAkQEmCBoBJAAHBNwAJABtDOgALADuAlYBNADuAvYAkQHXCGoBPAAHBNwAPABtDOgARADuAvYA
TAAHBNwATABtDOgAVAAHBNwAVABtDOgAXAAHBNwAXABtDOgAkQHKCL4BZADuAlYBbADuAlYBdADu
AvYA2QEDDPgB2QEjBP0BgQCoBgIC2QEPDQYC4QFaDAwC4QFMCwwC6QFJDBACQQGxCxUCiQCyAgIC
8QFtCRsCQQGfDAEAcQCBCQYAgQCBCQYACQFSDSQCyQCBCSoC6QCBCQYACAAUAE0CCAAYAFICCAAc
AFcCCAAkAFwCCAAoAGECCAAwAGECCAA0AFwCCAA8AFwCCABAAGECCABFAGECCABIAGYCCABMAGEC
KQB7AMkDLgALAKEDLgATAKoDLgAbAMkDLgAjANIDLgArAPsDLgAzAPsDLgA7APsDLgBDANIDLgBL
AAEELgBTAPsDLgBbABgEQwBjAGECSQB7AMkDYQBrAGECYwBzAGECiQC7AGAEowBrAGECowCDAAsF
owCLADUFowCTAGECqQC7AHIEwwBrAGECwwCbADwFwwCjAJMFyQC7AHsE4wBrAGEC4wCDAOwF4wCr
ABYG4wCTAGEC6QC7AIQEAwFrAGECAwGDAHYGAwGLADUFAwGTAGECCQG7AI0EIwFrAGECIwGbAKAG
IwGjAPcGKQG7AJ8EQwFrAGECQwGLADUFQwGzAFAHQwGDAF4HQwGTAGECSQG7AKgEYAG7AGAEYwFr
AGECYwGDAIgHYwGzAFAHYwGTAGECaQG7AI0EgwFrAGECgwGDALIHgwGrABYGgwGTAGECiQG7AMME
oAG7AGkEowFrAGECowGDANwHowGLADUFowGTAGECqQG7AMwEwwFrAGECwwGbAAYIwwGjAGcIyQG7
AI0E4AG7AHIE4wFrAGEC4wGDAMUI4wGzAFAH4wGTAGEC6QG7ANUEAwJrAGECAwKrABYGAwKDAO8I
AwKTAGECCQK7APkEIAK7AHsEIwJrAGECIwKjABkJKQK7AGAEQwJrAGECQwKjAG8JSQK7AHsEYAK7
AIQEYwJrAGECYwKjAMEJaQK7AKgEgwJrAGECgwKjABwKiQK7AAIFoAK7AI0EowJrAGECowKzAFAH
owKDAOwFowKTAGECwAK7AI0EwwJrAGECwwKDALIHwwKTAGEC4wJrAGEC4wKDAO8I4wKTAGECAAO7
AJYEIwNrAGECQAO7AJ8EgAO7AKgEwAO7AI0EAATDALEEAAS7ALoEQAS7AMMEgAS7AMwEwAS7AI0E
AAXDAI0EAAW7ANUEIAXDAI0EIAW7ANUEYAW7AN4EoAXDAOcEoAW7APAE4AW7APkEIAa7AGAEYAa7
AHsEoAa7AKgE4Aa7AAIF4AbDAI0EBQBrAgcAbQIJAGsCCwBtAg0AbQIPAG0CEQBtAhMAbQIVAG0C
FwBrAhkAbQIbAG0CHQBtAh8AbQIhAG0CJQBtAicAbQIpAG0CKwBrAi0AbwIvAG0CMQBrAjMAcQI1
AG0CNwBtAjkAbQI7AG0CPQBtAj8AbQJBAG0CQwBtAkUAbQJHAG0CSQBtAksAbQJNAG0CTwBtAlEA
awJTAGsCVQBxAlkAbQJbAG0CXQBtAl8AawJhAGsCYwBrAmUAawJnAGsCNwADAAEABAADAAoABAAL
AAsAFQAMABYAEAAXABEAAAAvCWcDAAC7A2wDAACXDHEDAAD6CnYDAAADCHsDAAAZC3YDAADnDHsD
AACWDH8DAAAqDXsDAAAiDHYDAACWDIUDAADeBooDAADsCo8DAACWDJQDAAD1C5gDAACNC5wDAAD6
CnYDAAAZC3YDAAAiDHYDAADkAnYDAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcAAgALAAkAAgAPAAsA
AgARAA0AAgATAA8AAgAVABEAAQAWABEAAgAaABMAAgAcABUAAgAeABcAAgAiABkAAgAkABsAAgAm
AB0AAgAoAB8AAQApAB8AAgAvACEAAgAxACMAAgAzACUAAgA1ACcAAgA3ACkAzgDsADEBPgFMAWEB
fwGMAZUBogGwAdsB5QHvAQSAAAABAAAAlR4RcwAAAAAAAPkAAAAEAAAAAAAAAAAAAAAyAkUCAAAA
AAsAAAAAAAAAAAAAADsC7QYAAAAABAAAAAAAAAAAAAAAMgKHAwAAAAAEAAAAAAAAAAAAAAAyArsH
AAAAAAsAAAAAAAAAAAAAADsCHgIAAAAABAAAAAAAAAAAAAAARAKtCAAAAAAAAAAAAQAAAPwJAAAY
AAIAGQACAD0AjAA/AIwAAAAAAAA8PnBfXzEwAF9WdGJsR2FwMV8yMABfVnRibEdhcDNfNjAAPD5v
X18wADw+cF9fMABfVnRibEdhcDFfMTEAPD5wX18xMQBfVnRibEdhcDFfMjEAX1Z0YmxHYXA0XzEA
PD5wX18xAElFbnVtZXJhYmxlYDEAQ2FsbFNpdGVgMQBfVnRibEdhcDFfMTIAPD5wX18xMgBJbnQz
MgBfVnRibEdhcDNfMgA8PnBfXzIAU1RfMTI3M2I3ZjQzOTQ2NDA2Nzg4OWUxNDY4YTM4MjIyZTIA
X1Z0YmxHYXAyXzEwMwBfVnRibEdhcDdfMTMAX1Z0YmxHYXAyXzMzAFNUX2YzNjVlODBjZDU4YjRj
MzNiODhkODhiMmVmODllYjMzAF9WdGJsR2FwM180MwBfVnRibEdhcDlfMwA8PnBfXzMARnVuY2Az
AF9WdGJsR2FwNF8xNABfVnRibEdhcDJfNAA8PnBfXzQARnVuY2A0AF9WdGJsR2FwMV80NQBfVnRi
bEdhcDJfNQBfVnRibEdhcDRfNQA8PnBfXzUAX1Z0YmxHYXA1XzYAX1Z0YmxHYXA2XzYAPD5wX182
ADw+cF9fNwBfVnRibEdhcDFfMTgAX1Z0YmxHYXA4Xzc4ADw+cF9fOABfVnRibEdhcDVfMTA5ADw+
cF9fOQA8TW9kdWxlPgBHQwBHZXRUeXBlRnJvbUNMU0lEAFN5c3RlbS5JTwBSSFMATWljcm9zb2Z0
LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMAQ29ycnVwdExvYWQASWdub3JlUmVhZE9ubHlSZWNvbW1lbmRlZABHdWlkAEZpbmQA
V3JpdGVSZXNQYXNzd29yZABSZXBsYWNlAGdldF9TdGFja1RyYWNlAENyZWF0ZUluc3RhbmNlAGRl
ZmF1bHRJbnN0YW5jZQBnZXRfVXNlZFJhbmdlAEludm9rZQBWYXJpYWJsZQBJRW51bWVyYWJsZQBF
ZGl0YWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAHhsV2hvbGUA
RmlsZW5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBBcHBlbmRMaW5lAEV4cHJl
c3Npb25UeXBlAFN5c3RlbS5Db3JlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBNYXRjaENhc2UAQ2xvc2UAQ3JlYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0
ZQBDYWxsU2l0ZQBEaXNwSWRBdHRyaWJ1dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUAR3Vp
ZEF0dHJpYnV0ZQBDb21FdmVudEludGVyZmFjZUF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2Rl
QXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFz
c2VtYmx5VGl0bGVBdHRyaWJ1dGUASW50ZXJmYWNlVHlwZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRl
bWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUATENJRENvbnZlcnNpb25BdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUARGVmYXVsdE1lbWJlckF0dHJpYnV0ZQBUeXBlSWRlbnRpZmllckF0dHJpYnV0ZQBD
b21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAENvQ2xhc3NBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNr
RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUATWF0Y2hCeXRlAGdldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGlt
ZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pc3NpbmcARW5kc1dpdGgAX1dvcmtib29rAFJvdXRlV29y
a2Jvb2sAZ2V0X0FjdGl2ZVdvcmtib29rAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAExvY2FsAE1hcnNoYWwATWlj
cm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF9mMzY1ZTgwY2Q1OGI0YzMzYjg4ZDg4YjJlZjg5ZWIzMy5kbGwAZ2V0X0l0
ZW0AU3lzdGVtAEVudW0AWGxGaW5kTG9va0luAHJlc291cmNlTWFuAEJvb2xlYW4AT3BlbgBTY3Jp
cHRNYWluAE9yaWdpbgBnZXRfQ29sdW1uAF9BcHBsaWNhdGlvbgBVbmFyeU9wZXJhdGlvbgBCaW5h
cnlPcGVyYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AWGxTZWFyY2hEaXJlY3Rpb24ARXhjZXB0aW9uAEN1bHR1cmVJbmZvAENT
aGFycEFyZ3VtZW50SW5mbwBNaWNyb3NvZnQuQ1NoYXJwAFN5c3RlbS5MaW5xAEludm9rZU1lbWJl
cgBHZXRNZW1iZXIAU3RyaW5nQnVpbGRlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5kZXIA
Q2FsbFNpdGVCaW5kZXIAWGxTZWFyY2hPcmRlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09i
amVjdFdyYXBwZXIAQWZ0ZXIARGVsaW1pdGVyAENvbnZlcnRlcgBGaXJlRXJyb3IAQWN0aXZhdG9y
AC5jdG9yAC5jY3RvcgB4bEZvcm11bGFzAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5JbnRlcm9wU2VydmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNUXzEyNzNiN2Y0Mzk0NjQwNjc4ODllMTQ2OGEzODIyMmUyLlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTYXZlQ2hhbmdlcwBTVF8xMjczYjdm
NDM5NDY0MDY3ODg5ZTE0NjhhMzgyMjJlMi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0Rmls
ZXMAeGxWYWx1ZXMAQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAQ1NoYXJwQmluZGVyRmxhZ3MAU2V0
dGluZ3MAVXBkYXRlTGlua3MAZ2V0X1dvcmtib29rcwBnZXRfQ2VsbHMAQ29udGFpbnMAZ2V0X0Nv
bHVtbnMAeGxCeUNvbHVtbnMAU3lzdGVtLkxpbnEuRXhwcmVzc2lvbnMAU3lzdGVtLkNvbGxlY3Rp
b25zAFdhaXRGb3JQZW5kaW5nRmluYWxpemVycwBTdWNjZXNzAGdldF9EdHMAQ2xlYXJGb3JtYXRz
AFNoZWV0cwBnZXRfV29ya3NoZWV0cwBTY3JpcHRSZXN1bHRzAHhsQ29tbWVudHMAZ2V0X0V2ZW50
cwBEb2NFdmVudHMAV29ya2Jvb2tFdmVudHMAQXBwRXZlbnRzAGdldF9EaXNwbGF5QWxlcnRzAHNl
dF9EaXNwbGF5QWxlcnRzAEV4aXN0cwB4bFByZXZpb3VzAGdldF9Sb3dzAHhsQnlSb3dzAFhsTG9v
a0F0AENvbmNhdABXaGF0AFNlYXJjaEZvcm1hdABSZWxlYXNlQ29tT2JqZWN0AENvbGxlY3QAX1dv
cmtzaGVldABUYXJnZXQAUXVpdABnZXRfX0RlZmF1bHQAc2V0X19EZWZhdWx0AGdldF9EZWZhdWx0
AHNldF9UYXNrUmVzdWx0AERvY0V2ZW50c19FdmVudABXb3JrYm9va0V2ZW50c19FdmVudABBcHBF
dmVudHNfRXZlbnQAZ2V0X0NvdW50AHhsUGFydABDb252ZXJ0AHhsTmV4dABTeXN0ZW0uVGV4dABB
cHBlbmRBbGxUZXh0AEFkZFRvTXJ1AGdldF9Sb3cAQ29sdW1uSW5kZXgAUm93SW5kZXgAVG9BcnJh
eQBOb3RpZnkAZ2V0X0Fzc2VtYmx5AFJlYWRPbmx5AERpcmVjdG9yeQAAAAA1VQBzAGUAcgA6ADoA
RgB1AGwAbABJAG4AYgBvAHUAbgBkAEQAaQByAGUAYwB0AG8AcgB5AAALKgAuAHgAbABzAAANKgAu
AHgAbABzAHgAAAkxADEAOQA5AAAJLgB4AGwAcwAACy4AeABsAHMAeAAASTAAMAAwADIANAA1ADAA
MAAtADAAMAAwADAALQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAwADAAMAAwADAAMAAwADAANAA2
AAEDKgAAAxMgAQMtAAEJLgB0AHgAdAAAWUEAYwBjAG8AdQBuAHQACQBEAGEAdABlAG8AZgBQAGEA
eQBtAGUAbgB0AAkAUgBlAGYAZQByAGUAbgBjAGUACQBBAG0AbwB1AG4AdAAJAE4AbwB0AGUAcwAA
AQANVgBhAGwAdQBlADIAAAlUAHIAaQBtAAARVABvAFMAdAByAGkAbgBnAAADCQAAHVAAcgBvAGMA
ZQBzAHMAIABWAGEAbAB1AGUAcwAAcVMAVABfADEAMgA3ADMAYgA3AGYANAAzADkANAA2ADQAMAA2
ADcAOAA4ADkAZQAxADQANgA4AGEAMwA4ADIAMgAyAGUAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMA
LgBSAGUAcwBvAHUAcgBjAGUAcwAAAFjCS2VcTLRNm8auVorjqxIABCABAQgDIAABBSABARERBCAB
AQ4FIAEBEW0EIAEBBgkgAgESgIUSgIUFIAIBDg4GIAEBEoCFHQcTDhIcEjASPBJAHQ4IDg4ICAgS
KBI9DggIHBJFBSAAEoChBSAAEoClBiABEoCpHAMgABwGAAIdDg4OGBABAhUSgLkBHgAVEoC5AR4A
FRKAuQEeAAMKAQ4NEAEBHR4AFRKAuQEeAAQgAQIOCAABEoCFEYC9BgABHBKAhQIGHAgAARKAhRGA
xQ4AAxKAzRGA0RKAhRKAhQ0VElEBFRJVAxJZHBJACwABFRJRARMAEoDNAwYTAAkVElUDElkcEkAI
IAITAhMAEwEEBhKA2QUgAg4ODgUgARI9DgkAAhKA4RGA5Q4WAAQSgM0RgNERgOkSgIUVEoC5ARKA
4QwVElEBFRJVAxJZHAINFRJRARUSXQQSWRwcHAkVEl0EElkcHBwKIAMTAxMAEwETAggVElUDElkc
AhQABBKAzRGA0Q4SgIUVEoC5ARKA4QwVElEBFRJVAxJZHBwIFRJVAxJZHBwMFRJRARUSVQMSWRwO
DRUSUQEVEl0EElkOHBwNFRJRARUSXQQSWRwOHBwABRKAzRGA0Q4VEoC5ARKAhRKAhRUSgLkBEoDh
CRUSXQQSWRwOHAkVEl0EElkOHBwIFRJVAxJZHA4EAAECDgQAAQEOAyAADgUAAgEODgMAAAEEAAEI
HAUgABKA+QggBQIIDg4OCAUgABKA/QcgAgEOEoD9CLd6XFYZNOCJCImEXc2AgMyRCLA/X38R1Qo6
BOXv//8E0O///wS97///BAIAAAAEAQAAAAQAAAAAARwBGwEaARMDBhJlAwYSaQMGEhACBggDBhFE
AwYRSAMGEUwDBhFQAwYRYA4GFRJRARUSVQMSWRwSQA4GFRJRARUSXQQSWRwcHA0GFRJRARUSVQMS
WRwcDQYVElEBFRJVAxJZHAIOBhUSUQEVEl0EElkcDhwOBhUSUQEVEl0EElkOHBwNBhUSUQEVElUD
ElkcDgQAABJlBAAAEmkFAAEBEmkEAAASEAQgABIoAyAACAUgAhwcHAYgAwEcHBwOIAkSKBwcHBwc
EUwcHBwEIAEcHBMgDxIwDhwcHBwcHBwcHBwcHBwcBCAAEjAEIAASPAMgAAIEIAEBAgQgABIsBAgA
EmUECAASaQQIABIQBAgAEigDCAAIBQgCHBwcBAgBHBwECAASMAQIABI8AwgADgMIAAIECAASLAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMTI3
M2I3ZjQzOTQ2NDA2Nzg4OWUxNDY4YTM4MjIyZTIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAx
OAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0CAEA7gAAAAAACAEAcAAAAAAACAEA8AAAAAAACAEA8QAAAAAACAEA
dgAAAAAACAEAAAAAAAAACAEAjgEAAAAACAEAAQEAAAAACAEAAgEAAAAACAEADwAAAAAACAEAgwcA
AAAACAEANAEAAAAACAEAPAIAAAAACAEAVwEAAAAACAEALgEAAAAACAEAAwAAAAAACAEAFQEAAAAA
CAEA7gEAAAAACAEAnAEAAAAAKQEAJDAwMDI0NDEzLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0
NgAABgEAAgAAAFYBAChNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzKE1p
Y3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHMAAFgBACQwMDAyMDgxMy0wMDAw
LTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYuTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkFw
cEV2ZW50c19FdmVudAAAKQEAJDAwMDIwOEQ1LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAA
XwEAWlN5c3RlbS5PYmplY3QsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQAAKQEAJDAwMDI0NDExLTAwMDAt
MDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAVgEAKE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNl
bC5Eb2NFdmVudHMoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cwAAWAEA
JDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQuT2ZmaWNlLklu
dGVyb3AuRXhjZWwuRG9jRXZlbnRzX0V2ZW50AAANAQAIX0RlZmF1bHQAACkBACQwMDAyMDg0Ni0w
MDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAACkBACQwMDAyMDhENy0wMDAwLTAwMDAtQzAwMC0w
MDAwMDAwMDAwNDYAACkBACQwMDAyMDhEQS0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAACkB
ACQwMDAyNDQxMi0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAGABAC1NaWNyb3NvZnQuT2Zm
aWNlLkludGVyb3AuRXhjZWwuV29ya2Jvb2tFdmVudHMtTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9w
LkV4Y2VsLldvcmtib29rRXZlbnRzAABdAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAw
MDAwMDQ2M01pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50c19FdmVu
dAAAKQEAJDAwMDIwOERCLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDIwOEQ4
LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAVQEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAw
LTAwMDAwMDAwMDA0NitNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuWGxGaW5kTG9va0lu
AABRAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2J01pY3Jvc29mdC5PZmZp
Y2UuSW50ZXJvcC5FeGNlbC5YbExvb2tBdAAAWgEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAw
MDAwMDAwMDA0NjBNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuWGxTZWFyY2hEaXJlY3Rp
b24AAFYBACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYsTWljcm9zb2Z0Lk9m
ZmljZS5JbnRlcm9wLkV4Y2VsLlhsU2VhcmNoT3JkZXIAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAyFMAAAAAAAAA
AAAA4lMAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAANRTAAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAA
AAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAR
c5UeAAABABFzlR4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAVABfADEAMgA3ADMA
YgA3AGYANAAzADkANAA2ADQAMAA2ADcAOAA4ADkAZQAxADQANgA4AGEAMwA4ADIAMgAyAGUAMgAA
AD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADgAMgA5AC4AMgA5ADQA
NQA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGYAMwA2ADUAZQA4
ADAAYwBkADUAOABiADQAYwAzADMAYgA4ADgAZAA4ADgAYgAyAGUAZgA4ADkAZQBiADMAMwAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMQA4AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8AZgAz
ADYANQBlADgAMABjAGQANQA4AGIANABjADMAMwBiADgAOABkADgAOABiADIAZQBmADgAOQBlAGIA
MwAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAVABfADEAMgA3
ADMAYgA3AGYANAAzADkANAA2ADQAMAA2ADcAOAA4ADkAZQAxADQANgA4AGEAMwA4ADIAMgAyAGUA
MgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA4ADIAOQAu
ADIAOQA0ADUANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA4ADIAOQAuADIAOQA0ADUANwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAAD0MwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{4280AAAA-39FB-49E0-9B19-51AFB7E2011A}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{4C71CA4E-4F92-48E6-B7A6-2D382C54ABF9}"
        DTS:ObjectName="{4C71CA4E-4F92-48E6-B7A6-2D382C54ABF9}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\RegionalAcceptance\Inbound\" />
            <FEFEProperty
              FileSpec="*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{7C90B74F-AF83-4C27-9910-C6DCC8847C74}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="ArtivaMT">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[artiva_import_file]"
                      connectionManagerRefId="Package.ConnectionManagers[artiva_import_file]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          name="RowData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Exceptions"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exceptions">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Input Source]"
                      connectionManagerRefId="Package.ConnectionManagers[Input Source]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Account]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Account]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Account]"
                          name="Account"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DateofPayment]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DateofPayment]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DateofPayment]"
                          name="DateofPayment"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Reference]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Reference]"
                          name="Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Amount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Amount]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Amount]"
                          name="Amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Notes]"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]"
                          name="Notes"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Account]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Account" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DateofPayment]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DateofPayment" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Reference]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Reference" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Amount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Notes]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Notes" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Script Component"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ExceptionsBuffer ExceptionsBuffer;

    public Output1Buffer Output1Buffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

        if (null != Output1Buffer)
        {
            Output1Buffer.SetEndOfRowset();
            Output1Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 1"))
            {
                Output1Buffer = new Output1Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ARTIVA
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ARTIVA").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Data.Odbc;
using FileHelpers;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Collections.Generic;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
    OdbcConnection conn;
    bool _exceptionReportCreated = false;
    Dictionary<string, string> trancode;

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();

        conn = new OdbcConnection(Connections.ARTIVA.ConnectionString);
        conn.Open();

        trancode = new Dictionary<string, string>()
        {

            {"TRANSACT IN INSCK","Insurance Claim Check,CRJ"},
{"TRANSACT PA CCARD","Credit / Debit Card Transaction,CRJ"},
{"TRANSACT PA EBOX","Electronic Box Transaction,CRJ"},
{"TRANSACT PA LBOX1","Lock Mail (Mail in payments),CRJ"},
{"TRANSACT PA LBOX2","Lock Mail (Mail in payments),CRJ"},
{"TRANSACT PE 03RFD","Warranty Refund,CRJ"},
{"TRANSACT PE ALLDS","Insurance Claim Check,CRJ"},
{"TRANSACT PE LBOX1","Lock Mail (Mail in payments),CRJ"},
{"TRANSACT PE OPRBT","Other Product Rebates,CRJ"},
{"TRANSACT PE PPRFD","GAP Insurance Refund,CRJ"},
{"TRANSACT PE PRPFD","GAP Insurance Refund,CRJ"},
{"TRANSACT PO IAACK","Insurance Claim Check,CRJ"},
{"TRANSACT PY BKCK","Bankrupcty Payment,CRJ"},
{"TRANSACT RE ME","Repossession Expense added to account,DBJ"},
{"TRANSACT PA AUTID","Product refund,CRJ"},
{"TRANSACT PE LBOX2","warranty refund,CRJ"},
{"TRANSACT IN GAP","gap refund,CRJ"},
{"TRANSACT PE AID","Insurance Claim Check,CRJ"}

        };
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }

        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);

    }
    int InputRecordCount;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    bool ishead = true;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if (!string.IsNullOrEmpty(Row.Account))
        {

            if (ishead)
            {

                ExceptionsBuffer.AddRow();
                ExceptionsBuffer.Data = "Account,Date of Payment,Reference,Amount,Notes,Exception Reason";
                ishead = false;
            }

            InputRecordCount++;
            bool isentry = true;
            string INTBAL = "", PRNBAL = "", OTHERBAL = "";

            string clid = Row.Account.Trim();

            if (clid.Substring(0, 3) != "000")
                clid = "000" + clid;

            string ed = clid + "," + Row.DateofPayment + "," + Row.Reference + "," + Row.Amount + ",\"" + Row.Notes + "\",";
            string Aracid = string.Empty;
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARACID,IntTable.AFACBCURBAL AS INTBAL,OtherTable.AFACBCURBAL AS OTHERBAL,PrincipalTable.AFACBCURBAL AS PRNBAL FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN ('RAC100','RAC505') " +
                "LEFT JOIN AFACCOUNT ON AFACACCTID = ARACCOUNT.ARACFINACCTID " +
                "LEFT JOIN AFACCTBAL AS PrincipalTable ON PrincipalTable.AFACBACCTID = AFACACCTID AND PrincipalTable.AFACBBALID = 'PRN' " +
                "LEFT JOIN AFACCTBAL AS OtherTable ON OtherTable.AFACBACCTID = AFACACCTID AND OtherTable.AFACBBALID = 'OTHER' " +
                "LEFT JOIN AFACCTBAL AS IntTable ON IntTable.AFACBACCTID = AFACACCTID AND IntTable.AFACBBALID = 'INT' " +                
                "WHERE ARACCLACCT = '{0}'", clid), conn, null))
            {


                if (conn.State != ConnectionState.Open)
                    conn.Open();

                cmd.CommandTimeout = 300;

                OdbcDataReader dr = cmd.ExecuteReader();

                while (dr.Read())
                {

                    Aracid = dr["ARACID"] == DBNull.Value || dr["ARACID"] == null || dr["ARACID"].ToString() == "" ? "" : dr["ARACID"].ToString();
                    PRNBAL = dr["PRNBAL"] == DBNull.Value || dr["PRNBAL"] == null || dr["PRNBAL"].ToString() == "" ? "" : dr["PRNBAL"].ToString();
                    OTHERBAL = dr["OTHERBAL"] == DBNull.Value || dr["OTHERBAL"] == null || dr["OTHERBAL"].ToString() == "" ? "" : dr["OTHERBAL"].ToString();
                    INTBAL = dr["INTBAL"] == DBNull.Value || dr["INTBAL"] == null || dr["INTBAL"].ToString() == "" ? "" : dr["INTBAL"].ToString();

                }
                

                if (string.IsNullOrEmpty(Aracid))
                {
                    isentry = false;
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = ed + "Account not found";
                    return;
                }

            }

            decimal amt = Convert.ToDecimal(Row.Amount);
            decimal PRN = string.IsNullOrEmpty(PRNBAL) ? 0.0m : Convert.ToDecimal(PRNBAL);
            decimal INT = string.IsNullOrEmpty(INTBAL) ? 0.0m : Convert.ToDecimal(INTBAL);
            decimal OTHER = string.IsNullOrEmpty(OTHERBAL) ? 0.0m : Convert.ToDecimal(OTHERBAL);
            decimal prnleftover = 0.0m;
            decimal intleftover = 0.0m;


            var adj = new Adjustment_ADJ();

          if (trancode.ContainsKey(Row.Reference.Trim()))
            {
                string[] s = trancode[Row.Reference.Trim()].Split(',');
                
                adj.TransactionReference = s[0];
                adj.TransactionType = s[1];

            }
                
            else
            {
                if (isentry)
                {
                    isentry = false;
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = ed + "Transaction code not found";
                    return;
                }


            }

            adj.AccountId = Aracid;                               
            adj.TenderDate = getDate(Row.DateofPayment);



                if (amt > PRN)
                {
                    prnleftover = amt - PRN;
                if (!string.IsNullOrEmpty(PRNBAL))
                    adj.PrincipalAdjustmentAmount = PRN;

                    if(prnleftover > INT)
                    {

                        intleftover = prnleftover - INT;

                    if (!string.IsNullOrEmpty(INTBAL))
                        adj.InterestAdjustmentAmount = INT;
                    if(!string.IsNullOrEmpty(OTHERBAL))
                        adj.OtherAdjustmentAmount = intleftover;

                    } else
                    {

                    if (!string.IsNullOrEmpty(INTBAL))
                        adj.InterestAdjustmentAmount = prnleftover;

                    }
                } else
                {

                if (!string.IsNullOrEmpty(PRNBAL))
                    adj.PrincipalAdjustmentAmount = amt;
                }
            



            AddPlacementRow(adj);
        }



    }

    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(d, "MM/dd/yyyy", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output1Buffer.AddRow();
        Output1Buffer.Data = recordString.ToUpper();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7ed2c54ff29f412fbe7dc26424bf8594.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{78308656-139A-4AD7-A48E-C043CA3CA0DC}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_7ed2c54ff29f412fbe7dc26424bf8594</RootNamespace>
    <AssemblyName>SC_7ed2c54ff29f412fbe7dc26424bf8594</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Settings.get_Default():SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Sett" +
    "ings")]

namespace SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Account
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Account_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DateofPayment
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool DateofPayment_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String Reference
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool Reference_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Amount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Amount_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Notes
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Notes_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String Data
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output1Buffer: ScriptBuffer

{
    public Output1Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_7ed2c54ff29f412fbe7dc26424bf8594</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_7ed2c54ff29f412fbe7dc26424bf8594</msb:DisplayName>
		<msb:ProjectId>{9CE41759-7674-4B6A-8C4C-812C4225CB9E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_7ed2c54ff29f412fbe7dc26424bf8594.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_7ed2c54ff29f412fbe7dc26424bf8594")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_7ed2c54ff29f412fbe7dc26424bf8594")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_7ed2c54ff29f412fbe7dc26424bf8594.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_7ed2c54ff29f412fbe7dc26424bf8594.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
KwwGAhMARykAAAAAxgGkCgYAFwBJKQAAAACBAIwBBgAXAIApAAAAAMYAOAwQAhcARykAAAAAxgGy
CgYAGwDzKQAAAADGASQM6gEbAEcpAAAAAMYBWwzqARwABioAAAAAhhgqCRwCHQAVKgAAAACGCF8H
eAEeADYqAAAAAIYIyQB4AR4AVyoAAAAAhhgqCRwCHgBmKgAAAACDGCoJBgAfAG4qAAAAAJMIpwgi
Ah8AmioAAAAAkwjNAicCHwChKgAAAACTCNkCLAIfAKkqAAAAAJYIDgsyAiAAsCoAAAAAhhgqCQYA
IAC4KgAAAACRGDAJNwIgAAAAAQB2DAAAAQDTAQAAAQDOAQAAAQCgCAAAAgBPCgAAAwDPBwAAAQBR
BQAAAQBRBQAAAQCgCAAAAgBPCgAAAwDPBwAAAQBRBQAAAQBRBQAAAQCgCAAAAgBPCgAAAwDPBwAA
AQBRBQAAAQBRBQAAAQDUAAAAAgBhAgAAAwCgCAAABADPBwAAAQCqCgAAAgA3CQAAAwCQCgAABADP
BwAAAQCgCAAAAQB2DAAAAQBQCwAAAQBQCwAAAQBRBQkAKgkBABEAKgkGABkAKgkKACkAKgkQADEA
KgkQADkAKgkQAEEAKgkQAEkAKgkQAFEAKgkQAFkAKgkQAGEAKgkQAGkAKgkGAPEAKgkGAAkBKgkV
ABkBKgkGANkANAUGAOkAfQUcAHEAKgkQACEBswYGAAwAKgkGAAwAeQEnANkAPwUGACEBJgMGACkB
RQMGADEBjwMvADkBrQxQADkBkwYcADkBpQVVADkBnwxbADkBxgphADkBxgpnADkBtQxtADkBzQpw
AJEAKgl2ACEBYAOAAFEBEQwBAJEAQQiGAFkBegaLAGEBSwWQAOEAkgUcADkBkwxbAFkBbQGVAGkB
RQMGAHEBrwWZAIEAKgmfAIkAKgkGAAwAegyoAAwAegauADkBCAu1AIkADgJtAIkAvQJtAIkAYwFt
AIkATQO8AIEApAbEAIEA8gbMAIkAggvVAIkAsgvVAIkAnAvVALEAKgkQAKkA1ArrABQAKgkBARwA
KgkGABwAeQEBAZkBcQUTATkB1QEkATkB3QFQADkB0QgcAMEAKgkqAcEAoAg0AcEATwo4AckAmwU8
AcEAawZBAcEAgwZGAcEAcgYBAKkBKgkQAMEAcgyVAMEA/AqVAMEARAwGAMEA+QoGANkAKgkGADkB
fQpMAdkAYwpUAckA6QqVANkA3ABeAeEAKgkGANkAGAFlAbkBIwdrAcEBawJxAckBuwh4AdEBSgJ9
AdEBhgyGAfkAKgmMAREBKgkGAC4ACwBXAi4AEwBgAi4AGwB/Ai4AIwCIAi4AKwCxAi4AMwCxAi4A
OwCxAi4AQwCIAi4ASwC3Ai4AUwCxAi4AWwDOAkMAYwAWAyMBawAWA+EBewAWA2kCcwB/AokCcwB/
AjQA3gAHAVoBAwABAAQADQAFAA8ABwARAAkAEwAKABUAAABvCzsCAABRBj8CAAAeCzsCAAA4Bj8C
AAAZAjsCAAASBj8CAADECzsCAABkBj8CAABJCjsCAAAnBj8CAAApATsCAAACBj8CAAApATsCAAAC
Bj8CAAApATsCAAACBj8CAABjB0MCAADNAEMCAACrCEgCAADtAk0CAAASC1ICAgAIAAMAAgAJAAUA
AgAKAAcAAgALAAkAAgAMAAsAAgANAA0AAgAOAA8AAgAPABEAAgAQABMAAgARABUAAQASABcAAQAT
ABkAAQAXABsAAQAYAB0AAQAdAB8AAQAeACEAAgArACMAAgAsACUAAgAvACcAAgAwACkAAQAxACkA
AgAyACsAIAD6AAsBBIAAAAEAAAA6Ht42AAAAAAAAnAAAAAQAAAAAAAAAAAAAAJQBLgEAAAAACwAA
AAAAAAAAAAAAnQHLCwAAAAAEAAAAAAAAAAAAAACUAQMBAAAAAAEAAQAAAAAAAAAAAKYBLAMAAAAA
CwAAAAAAAAAAAAAAnQHwCwAAAAALAAAAAAAAAAAAAACdAdkHAAAAAAQAAAAAAAAAAAAAAJQBjAYA
AAAAAwACAAcAAAAAAAAArwGYCgAAAAALAAAAAAAAAAAAAACdAfwHAAAAAAAAAAABAAAAqwkAAAAA
AAALAAEBCgDZAIEAHwEBAF0AAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNSdW50aW1l
Q29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25u
ZWN0aW9uTWFuYWdlcjEwMABOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEATGlzdGAxAERpY3Rpb25h
cnlgMgBTQ183ZWQyYzU0ZmYyOWY0MTJmYmU3ZGMyNjQyNGJmODU5NAA8TW9kdWxlPgBnZXRfQVJU
SVZBAElucHV0SUQAR2V0T3V0cHV0SUQAQWRqdXN0bWVudF9BREoAU3lzdGVtLklPAFQAU3lzdGVt
LkRhdGEAc2V0X0RhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAG1zY29ybGliAFN5c3RlbS5EYXRh
Lk9kYmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWNjb3VudElkAFJlYWQAaXNoZWFkAEFk
ZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVkAF9leGNlcHRpb25SZXBvcnRDcmVh
dGVkAERiQ29tbWFuZABPZGJjQ29tbWFuZAByZWNvcmQAUmVwbGFjZQBJc051bGxPcldoaXRlU3Bh
Y2UAZGVmYXVsdEluc3RhbmNlAGdldF9SZWZlcmVuY2UAVHJhbnNhY3Rpb25SZWZlcmVuY2UAdHJh
bmNvZGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmls
ZQBJbnB1dE5hbWUAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUARGF0ZVRpbWUAQ29tbW9uRW5n
aW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFRyYW5zYWN0aW9uVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAR2VuZXJhbFB1cnBvc2VSZWNvcmRC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAFJHUy5BcnRpdmFHZW5lcmFsUHVycG9z
ZQBEaXNwb3NlAFRlbmRlckRhdGUAZ2V0RGF0ZQBnZXRfU3RhdGUARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29ubmVjdGlvblN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1
Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3Nh
YmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRy
aWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJp
YnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNB
dHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmli
dXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFu
eUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RF
eGVjdXRlAFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAV3JpdGVTdHJpbmcA
Z2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1YnN0cmluZwBUb0RlY2lt
YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzdlZDJjNTRmZjI5ZjQxMmZiZTdkYzI2NDI0YmY4
NTk0LmRsbABEQk51bGwAc2V0X0RhdGFfSXNOdWxsAGdldF9SZWZlcmVuY2VfSXNOdWxsAGdldF9O
b3Rlc19Jc051bGwAZ2V0X0RhdGVvZlBheW1lbnRfSXNOdWxsAGdldF9BY2NvdW50X0lzTnVsbABn
ZXRfQW1vdW50X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAHJl
c291cmNlTWFuAG9wX0dyZWF0ZXJUaGFuAE9wZW4AU2NyaXB0TWFpbgBjb25uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAE9kYmNUcmFuc2Fj
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAERi
Q29ubmVjdGlvbgBPZGJjQ29ubmVjdGlvbgBnZXRfRXhjZXB0aW9uQ29ubmVjdGlvbgBJbnZhbGlk
T3BlcmF0aW9uRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdDb21wYXJpc29uAEN1
bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRT
UnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgBEYkRh
dGFSZWFkZXIAT2RiY0RhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBJRm9ybWF0UHJvdmlkZXIASW5w
dXQwQnVmZmVyAE91dHB1dDFCdWZmZXIAUGlwZWxpbmVCdWZmZXIARXhjZXB0aW9uc0J1ZmZlcgBT
Y3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlvbk1hbmFnZXIAVG9V
cHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3Rl
bS5EaWFnbm9zdGljcwBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ183ZWQyYzU0ZmYy
OWY0MTJmYmU3ZGMyNjQyNGJmODU5NC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfN2VkMmM1NGZmMjlmNDEyZmJlN2RjMjY0MjRiZjg1OTQuUHJvcGVydGll
cwBWYXJpYWJsZXMARGF0ZVRpbWVTdHlsZXMAZ2V0X05vdGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
R2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaWxl
SGVscGVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1hdABU
cnlQYXJzZUV4YWN0AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQAU3BsaXQA
Z2V0X0RlZmF1bHQAZ2V0X0RhdGVvZlBheW1lbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25l
bnQAU2NyaXB0Q29tcG9uZW50AElucHV0UmVjb3JkQ291bnQAZ2V0X0FjY291bnQAZ2V0X0Ftb3Vu
dABQcmluY2lwYWxBZGp1c3RtZW50QW1vdW50AE90aGVyQWRqdXN0bWVudEFtb3VudABJbnRlcmVz
dEFkanVzdG1lbnRBbW91bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABDb252ZXJ0AE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AHNldF9Db21tYW5kVGltZW91dABJbnB1dDBf
UHJvY2Vzc0lucHV0AFByaW1lT3V0cHV0AEFkZFJvdwBBZGRQbGFjZW1lbnRSb3cASW5wdXQwX1By
b2Nlc3NJbnB1dFJvdwBOZXh0Um93AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0
eQBvcF9JbmVxdWFsaXR5AElzTnVsbE9yRW1wdHkAAAAjVABSAEEATgBTAEEAQwBUACAASQBOACAA
SQBOAFMAQwBLAAAzSQBuAHMAdQByAGEAbgBjAGUAIABDAGwAYQBpAG0AIABDAGgAZQBjAGsALABD
AFIASgAAI1QAUgBBAE4AUwBBAEMAVAAgAFAAQQAgAEMAQwBBAFIARAAAR0MAcgBlAGQAaQB0ACAA
LwAgAEQAZQBiAGkAdAAgAEMAYQByAGQAIABUAHIAYQBuAHMAYQBjAHQAaQBvAG4ALABDAFIASgAA
IVQAUgBBAE4AUwBBAEMAVAAgAFAAQQAgAEUAQgBPAFgAAD1FAGwAZQBjAHQAcgBvAG4AaQBjACAA
QgBvAHgAIABUAHIAYQBuAHMAYQBjAHQAaQBvAG4ALABDAFIASgAAI1QAUgBBAE4AUwBBAEMAVAAg
AFAAQQAgAEwAQgBPAFgAMQAAQUwAbwBjAGsAIABNAGEAaQBsACAAKABNAGEAaQBsACAAaQBuACAA
cABhAHkAbQBlAG4AdABzACkALABDAFIASgAAI1QAUgBBAE4AUwBBAEMAVAAgAFAAQQAgAEwAQgBP
AFgAMgAAI1QAUgBBAE4AUwBBAEMAVAAgAFAARQAgADAAMwBSAEYARAAAJ1cAYQByAHIAYQBuAHQA
eQAgAFIAZQBmAHUAbgBkACwAQwBSAEoAACNUAFIAQQBOAFMAQQBDAFQAIABQAEUAIABBAEwATABE
AFMAACNUAFIAQQBOAFMAQQBDAFQAIABQAEUAIABMAEIATwBYADEAACNUAFIAQQBOAFMAQQBDAFQA
IABQAEUAIABPAFAAUgBCAFQAADNPAHQAaABlAHIAIABQAHIAbwBkAHUAYwB0ACAAUgBlAGIAYQB0
AGUAcwAsAEMAUgBKAAAjVABSAEEATgBTAEEAQwBUACAAUABFACAAUABQAFIARgBEAAAxRwBBAFAA
IABJAG4AcwB1AHIAYQBuAGMAZQAgAFIAZQBmAHUAbgBkACwAQwBSAEoAACNUAFIAQQBOAFMAQQBD
AFQAIABQAEUAIABQAFIAUABGAEQAACNUAFIAQQBOAFMAQQBDAFQAIABQAE8AIABJAEEAQQBDAEsA
ACFUAFIAQQBOAFMAQQBDAFQAIABQAFkAIABCAEsAQwBLAAAtQgBhAG4AawByAHUAcABjAHQAeQAg
AFAAYQB5AG0AZQBuAHQALABDAFIASgAAHVQAUgBBAE4AUwBBAEMAVAAgAFIARQAgAE0ARQAAU1IA
ZQBwAG8AcwBzAGUAcwBzAGkAbwBuACAARQB4AHAAZQBuAHMAZQAgAGEAZABkAGUAZAAgAHQAbwAg
AGEAYwBjAG8AdQBuAHQALABEAEIASgAAI1QAUgBBAE4AUwBBAEMAVAAgAFAAQQAgAEEAVQBUAEkA
RAAAJVAAcgBvAGQAdQBjAHQAIAByAGUAZgB1AG4AZAAsAEMAUgBKAAAjVABSAEEATgBTAEEAQwBU
ACAAUABFACAATABCAE8AWAAyAAAndwBhAHIAcgBhAG4AdAB5ACAAcgBlAGYAdQBuAGQALABDAFIA
SgAAH1QAUgBBAE4AUwBBAEMAVAAgAEkATgAgAEcAQQBQAAAdZwBhAHAAIAByAGUAZgB1AG4AZAAs
AEMAUgBKAAAfVABSAEEATgBTAEEAQwBUACAAUABFACAAQQBJAEQAAH9BAGMAYwBvAHUAbgB0ACwA
RABhAHQAZQAgAG8AZgAgAFAAYQB5AG0AZQBuAHQALABSAGUAZgBlAHIAZQBuAGMAZQAsAEEAbQBv
AHUAbgB0ACwATgBvAHQAZQBzACwARQB4AGMAZQBwAHQAaQBvAG4AIABSAGUAYQBzAG8AbgAAAQAH
MAAwADAAAAMsAAAFLAAiAAAFIgAsAACE81MARQBMAEUAQwBUACAAQQBSAEEAQwBJAEQALABJAG4A
dABUAGEAYgBsAGUALgBBAEYAQQBDAEIAQwBVAFIAQgBBAEwAIABBAFMAIABJAE4AVABCAEEATAAs
AE8AdABoAGUAcgBUAGEAYgBsAGUALgBBAEYAQQBDAEIAQwBVAFIAQgBBAEwAIABBAFMAIABPAFQA
SABFAFIAQgBBAEwALABQAHIAaQBuAGMAaQBwAGEAbABUAGEAYgBsAGUALgBBAEYAQQBDAEIAQwBV
AFIAQgBBAEwAIABBAFMAIABQAFIATgBCAEEATAAgAEYAUgBPAE0AIAAlAFMAVABBAFIAVABUAEEA
QgBMAEUAIABBAFIAQwBMAEkARQBOAFQAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAQQBSAEEAQwBD
AE8AVQBOAFQAIABPAE4AIABBAFIAQwBMAEkARAAgAD0AIABBAFIAQQBDAEMATABUAEkARAAgAEEA
TgBEACAAQQBSAEMATABJAEQAIABJAE4AIAAoACcAUgBBAEMAMQAwADAAJwAsACcAUgBBAEMANQAw
ADUAJwApACAATABFAEYAVAAgAEoATwBJAE4AIABBAEYAQQBDAEMATwBVAE4AVAAgAE8ATgAgAEEA
RgBBAEMAQQBDAEMAVABJAEQAIAA9ACAAQQBSAEEAQwBDAE8AVQBOAFQALgBBAFIAQQBDAEYASQBO
AEEAQwBDAFQASQBEACAATABFAEYAVAAgAEoATwBJAE4AIABBAEYAQQBDAEMAVABCAEEATAAgAEEA
UwAgAFAAcgBpAG4AYwBpAHAAYQBsAFQAYQBiAGwAZQAgAE8ATgAgAFAAcgBpAG4AYwBpAHAAYQBs
AFQAYQBiAGwAZQAuAEEARgBBAEMAQgBBAEMAQwBUAEkARAAgAD0AIABBAEYAQQBDAEEAQwBDAFQA
SQBEACAAQQBOAEQAIABQAHIAaQBuAGMAaQBwAGEAbABUAGEAYgBsAGUALgBBAEYAQQBDAEIAQgBB
AEwASQBEACAAPQAgACcAUABSAE4AJwAgAEwARQBGAFQAIABKAE8ASQBOACAAQQBGAEEAQwBDAFQA
QgBBAEwAIABBAFMAIABPAHQAaABlAHIAVABhAGIAbABlACAATwBOACAATwB0AGgAZQByAFQAYQBi
AGwAZQAuAEEARgBBAEMAQgBBAEMAQwBUAEkARAAgAD0AIABBAEYAQQBDAEEAQwBDAFQASQBEACAA
QQBOAEQAIABPAHQAaABlAHIAVABhAGIAbABlAC4AQQBGAEEAQwBCAEIAQQBMAEkARAAgAD0AIAAn
AE8AVABIAEUAUgAnACAATABFAEYAVAAgAEoATwBJAE4AIABBAEYAQQBDAEMAVABCAEEATAAgAEEA
UwAgAEkAbgB0AFQAYQBiAGwAZQAgAE8ATgAgAEkAbgB0AFQAYQBiAGwAZQAuAEEARgBBAEMAQgBB
AEMAQwBUAEkARAAgAD0AIABBAEYAQQBDAEEAQwBDAFQASQBEACAAQQBOAEQAIABJAG4AdABUAGEA
YgBsAGUALgBBAEYAQQBDAEIAQgBBAEwASQBEACAAPQAgACcASQBOAFQAJwAgAFcASABFAFIARQAg
AEEAUgBBAEMAQwBMAEEAQwBDAFQAIAA9ACAAJwB7ADAAfQAnAAENQQBSAEEAQwBJAEQAAA1QAFIA
TgBCAEEATAAAEU8AVABIAEUAUgBCAEEATAAADUkATgBUAEIAQQBMAAAjQQBjAGMAbwB1AG4AdAAg
AG4AbwB0ACAAZgBvAHUAbgBkAAA1VAByAGEAbgBzAGEAYwB0AGkAbwBuACAAYwBvAGQAZQAgAG4A
bwB0ACAAZgBvAHUAbgBkAAALZQBuAC0AVQBTAAEVTQBNAC8AZABkAC8AeQB5AHkAeQAAC0MATwBN
AEEASwAAAy4AAAMwAAADLwAAA04AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABj
AGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcA
bgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABl
AGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAFUUAeABjAGUAcAB0AGkAbwBuAHMAABFPAHUAdABwAHUA
dAAgADEAACdFAHgAYwBlAHAAdABpAG8AbgBDAG8AbgBuAGUAYwB0AGkAbwBuAAANQQBSAFQASQBW
AEEAAHFTAEMAXwA3AGUAZAAyAGMANQA0AGYAZgAyADkAZgA0ADEAMgBmAGIAZQA3AGQAYwAyADYA
NAAyADQAYgBmADgANQA5ADQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAACnV8tiyfKtQoe2/EkOm8/zAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAgQMgAA4GFRI9
Ag4OByACARMAEwEEAAEBDhsHEAIODg4ODg4RQRFBEUERQRFBEkUSSRJNHQ4EAAECDgUgAg4ICAUA
AgIODgUAAg4ODgUAAQ4dDgIGDgUAAg4OHAkgAwEOEjkSgKEFIAARgKUEIAASTQQgARwOBAYSgLED
IAACBQABEUEOCCAFAQgICAIFBSABAhMABiABEwETAAYgAR0OHQMHBhURUQERVQcAAgIRQRFBCAAC
EUERQRFBAwYRQQQKARJFDAcDElkRVRURUQERVQ4ABQIODhKAwRGAxRARVQYVEVEBEVUFIAEBEwAD
BwEOBxUSgMkBHgALEAEBDhUSgNEBHgAECgEeAAUgAg4ODgkgAwESZR0IEmkDBhJlAwYdCAQgAQ4I
BCABAggFIAIBCBwHIAICDhGA2QUgAR0ICAMHAQgGAAIIEmkOBSAAEoDdBSAAEoDhBiABEoDlDgQg
ABJ1CAABEoDpEYDtBSAAEoDxByACAQ4SgPEIt3pcVhk04IkIiYRdzYCAzJEI+gztSkVRp4IIPgwI
1ZzD1lcDBhI5AgYCBwYVEj0CDg4CBggDBhIcAwYSIAMGEhADBhIUAwYSbQMGEn0DBhJZAwYSKAUg
AQESDAkgARURUQERVQ4GMAEBAR4ABCABAQIJIAQBCA4SZRJpCyAEAQgdCB0SZRJpBSABARJtBAAA
En0EAAASWQUAAQESWQQAABIoAwAAAQMoAA4DKAACBCgAEnUECAASfQQIABJZBAgAEigIAQAIAAAA
AAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzdlZDJjNTRm
ZjI5ZjQxMmZiZTdkYzI2NDI0YmY4NTk0AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEcB
ABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5F
VCBGcmFtZXdvcmsgNAQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAC4UwAAAAAAAAAAAADSUwAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAxFMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAA
AAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAABoEAAAAAAAA
AAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQDe
NjoeAAABAN42Oh4/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwA
ZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAR6AwAAAQBT
AHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEA
AQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAA
AAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADcAZQBkADIA
YwA1ADQAZgBmADIAOQBmADQAMQAyAGYAYgBlADcAZABjADIANgA0ADIANABiAGYAOAA1ADkANAAA
AD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADcAMwA4AC4AMQA0ADAA
NAA2AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADcAZQBkADIAYwA1
ADQAZgBmADIAOQBmADQAMQAyAGYAYgBlADcAZABjADIANgA0ADIANABiAGYAOAA1ADkANAAuAGQA
bABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANwBl
AGQAMgBjADUANABmAGYAMgA5AGYANAAxADIAZgBiAGUANwBkAGMAMgA2ADQAMgA0AGIAZgA4ADUA
OQA0AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADcAZQBk
ADIAYwA1ADQAZgBmADIAOQBmADQAMQAyAGYAYgBlADcAZABjADIANgA0ADIANABiAGYAOAA1ADkA
NAAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA3ADMAOAAu
ADEANAAwADQANgAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA3ADMAOAAuADEANAAwADQANgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAwAAADkMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_7ed2c54ff29f412fbe7dc26424bf8594</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">4e50caeefb574574b813d0d23df6a4c2</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">ed41bed3df03258be39e78c695f11541ee8de243</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Connections[ARTIVA]"
                      connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                      connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                      name="ARTIVA" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Account]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Account"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Account]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[DateofPayment]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DateofPayment"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DateofPayment]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Reference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Reference"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Reference]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Amount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Amount"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Amount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Notes]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Notes"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Notes]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 1]"
                      hasSideEffects="true"
                      name="Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 1].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Exceptions]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Exceptions.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Output 1]"
                  endId="Package\Foreach Loop Container\Data Flow Task\ArtivaMT.Inputs[Flat File Destination Input]"
                  name="Output 1"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\File System Task"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{EDA38B8F-CB08-48F7-A66E-BA128E40CFBC}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="File System Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::delete"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{CF9F9DE7-EA0C-4EEB-830E-BE2496996F2C}"
          DTS:From="Package\Foreach Loop Container\Data Flow Task"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\File System Task" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{397DD17A-1AAD-4C4E-BEA1-28A128654D80}"
          DTS:ObjectName="{397DD17A-1AAD-4C4E-BEA1-28A128654D80}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A8A894BC-6AAD-491F-BF6F-816189F2DB69}"
      DTS:From="Package\Convert Excel file to tsv"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="190,42"
          Id="Package\Convert Excel file to tsv"
          TopLeft="212,66" />
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="45,22" />
        <NodeLayout
          Size="158,42"
          Id="Package\Foreach Loop Container\File System Task"
          TopLeft="64,120" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="120.5,64">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.5,56"
              Start="0,0"
              End="22.5,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="4,28" />
                  <mssgle:LineSegment
                    End="18.5,28" />
                  <mssgle:CubicBezierSegment
                    Point1="18.5,28"
                    Point2="22.5,28"
                    Point3="22.5,32" />
                  <mssgle:LineSegment
                    End="22.5,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="297,228"
          Size="297,271"
          Id="Package\Foreach Loop Container"
          TopLeft="201,156" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="307,108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.5,48"
              Start="0,0"
              End="42.5,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20"
                    Point2="0,24"
                    Point3="4,24" />
                  <mssgle:LineSegment
                    End="38.5,24" />
                  <mssgle:CubicBezierSegment
                    Point1="38.5,24"
                    Point2="42.5,24"
                    Point3="42.5,28" />
                  <mssgle:LineSegment
                    End="42.5,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="151,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Source"
          TopLeft="234,68" />
        <NodeLayout
          Size="163,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Script Component"
          TopLeft="237,166" />
        <NodeLayout
          Size="129,42"
          Id="Package\Foreach Loop Container\Data Flow Task\Exceptions"
          TopLeft="469,255" />
        <NodeLayout
          Size="121,42"
          Id="Package\Foreach Loop Container\Data Flow Task\ArtivaMT"
          TopLeft="229,248" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Output 1]"
          TopLeft="291.083333333333,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40"
              Start="0,0"
              End="0,32.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.9530859375,10.533203125,39.906171875,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="309.5,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="9,56"
              Start="0,0"
              End="9,48.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24"
                    Point2="0,28"
                    Point3="4,28" />
                  <mssgle:LineSegment
                    End="5,28" />
                  <mssgle:CubicBezierSegment
                    Point1="5,28"
                    Point2="9,28"
                    Point3="9,32" />
                  <mssgle:LineSegment
                    End="9,48.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Exceptions]"
          TopLeft="344.333333333333,208">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="189.166666666667,47"
              Start="0,0"
              End="189.166666666667,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.0741190765492" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.0741190765492"
                    Point2="0,19.0741190765492"
                    Point3="4,19.0741190765492" />
                  <mssgle:LineSegment
                    End="185.166666666667,19.0741190765492" />
                  <mssgle:CubicBezierSegment
                    Point1="185.166666666667,19.0741190765492"
                    Point2="189.166666666667,19.0741190765492"
                    Point3="189.166666666667,23.0741190765492" />
                  <mssgle:LineSegment
                    End="189.166666666667,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="70.5157552083335,24.0741190765492,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>