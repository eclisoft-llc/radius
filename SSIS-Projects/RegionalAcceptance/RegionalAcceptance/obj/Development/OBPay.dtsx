<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/13/2020 6:54:38 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{DD37C879-5F26-4979-908B-0EB12EEE67A5}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="OBPay"
  DTS:PackageType="5"
  DTS:VersionBuild="12"
  DTS:VersionGUID="{5870F207-B20C-47A4-9121-173E7E826670}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{21D8544B-2FEB-4906-9D74-E15C1E2A224F}"
      DTS:ObjectName="ArchiveDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Archive\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D206E3EC-B52D-4DEC-8894-0716174D827B}"
      DTS:ObjectName="FileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">REGRMT.</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C1B58FB2-5CBE-4982-9689-3421EECB1B92}"
      DTS:ObjectName="LogDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Logs\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{CB2D5F7D-5751-42B8-9AD3-56E7B8FE4557}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5822249E-E234-4A28-A9D2-B88BB8BB64D7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::ArchiveDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullArchiveDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4714DE35-CE4E-407E-81BE-F0B2775B9A92}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\RegionalAcceptance\Outbound\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send_Empty_File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{daa7804e-248b-4918-93d7-8f9bbc3e920d}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Empty_File"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_aded969e528c4a84b7c7ecb2153fc08f"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FullArchiveDirectory,User::FullOutboundDirectory,$Package::FileName,$Package::LogDirectory,$Package::OutboundDirectory,$Project::LocalPath,$Project::EmailBody,$Project::EmailCC,$Project::EmailSubject,$Project::EmailTo">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_aded969e528c4a84b7c7ecb2153fc08f.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{C2B3E828-3C78-4A43-98BB-E9EF78AE65F8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</RootNamespace><AssemblyName>ST_aded969e528c4a84b7c7ecb2153fc08f</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="WinSCPnet, Version=1.1.4.3970, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL"><SpecificVersion>False</SpecificVersion><HintPath>R:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath></Reference></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Data.Odbc;
using System.Linq;
using System.Windows.Forms;
using CommonClasses;
using WinSCP;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {

                DateTime fileDate = DateTime.Today;
                string filenamepat = (string)Dts.Variables["$Package::FileName"].Value;
                string exportDirectory = (string)Dts.Variables["User::FullOutboundDirectory"].Value;
                string fileName = filenamepat + fileDate.ToString("MMdd");
                string fullFilePath = exportDirectory + fileName;
                string _clientPath = (string)Dts.Variables["$Project::LocalPath"].Value;
                string _fileLocation = exportDirectory;
                string _archivePath = (string)Dts.Variables["User::FullArchiveDirectory"].Value;
                string _logPath = _clientPath + (string)Dts.Variables["$Package::LogDirectory"].Value; ;
                //string _appDirectory = @"R:\Program Files (x86)\WinSCP\";

                string emailto = (string)Dts.Variables["$Project::EmailTo"].Value;
                string emailsubject = (string)Dts.Variables["$Project::EmailSubject"].Value;
                string emailbody = (string)Dts.Variables["$Project::EmailBody"].Value;
                string emailcc = (string)Dts.Variables["$Project::EmailCC"].Value;

                if (!File.Exists(_archivePath+fileName))
                {

                    var regrmt = new StringBuilder();
                    var currdate = DateTime.Today.ToString("yyyyMMdd");

                    regrmt.AppendLine((currdate.PadRight(32) + "HD" + "000000000{" + "000000000{" + "00000" + "C100" + "5030").PadRight(100));
                    regrmt.AppendLine((currdate.PadRight(32) + "HD" + "000000000{" + "000000000{" + "00000" + "C505" + "5030").PadRight(100));

                    if (!File.Exists(fullFilePath))
                        File.AppendAllText(fullFilePath, regrmt.ToString());

                    DirectoryInfo di = new DirectoryInfo(_fileLocation);
                    FileInfo[] fi = di.GetFiles(filenamepat + fileDate.ToString("MMdd"));

                    File.Move(fi[0].FullName, _archivePath + fi[0].Name);

                    new CommonClasses.EmailSender().SendMail(emailto, emailcc, null, emailsubject, emailbody);

                }



                /*    string ftpURL = "";
                    string ftpUser = "";
                    string ftpPass = "";
                    int ftpPort = 0;
                    string ftpDir = "/Home/eft_RegionalAcceptance/From Agency/";
                    string ftpKey = "";

                    using (var connection = new SqlConnection("Server=dfw2-etl-001;Database=ArtivaJobEngine;User Id=WAREHOUSEMAN;Password=p3RV@$1V3;"))
                    {
                        using (var command = new SqlCommand("SELECT [Host],[Username],[Password],[Port],[HostKey]  FROM [ArtivaJobEngine].[dbo].[FTPInformation] WHERE ID = 14", connection))
                        {
                            connection.Open();
                            using (var reader = command.ExecuteReader())
                            {
                                reader.Read();
                                ftpURL = reader.GetString(0);
                                ftpUser = reader.GetString(1);
                                ftpPass = reader.GetString(2);
                                ftpPort = reader.GetInt32(3);
                                ftpKey = reader.GetString(4);
                            }
                        }
                    }

                    Session session = new Session();
                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;
                    transferOptions.ResumeSupport.State = TransferResumeSupportState.Off;
                    transferOptions.FilePermissions = null;
                    transferOptions.PreserveTimestamp = false;

                    SessionOptions sessionOptions = new SessionOptions();
                    sessionOptions.Protocol = Protocol.Sftp;
                    sessionOptions.HostName = ftpURL;
                    sessionOptions.UserName = ftpUser;
                    sessionOptions.Password = ftpPass;
                    sessionOptions.PortNumber = ftpPort;
                    sessionOptions.SshHostKeyFingerprint = ftpKey;

                    session.ExecutablePath = _appDirectory + "winscp.exe";
                    session.SessionLogPath = _logPath + "PutOBPaymentFiles.log";
                    session.Open(sessionOptions);
                    if (!session.FileExists(ftpDir + fileName))
                    {

                    var regrmt = new StringBuilder();
                    var currdate = DateTime.Today.ToString("yyyyMMdd");
                    
                    regrmt.AppendLine((currdate.PadRight(32) + "HD" + "000000000{" + "000000000{" + "00000" + "C100" + "0000").PadRight(100));
                    regrmt.AppendLine((currdate.PadRight(32) + "HD" + "000000000{" + "000000000{" + "00000" + "C505" + "0000").PadRight(100));                    

                    if (!File.Exists(fullFilePath))
                        File.AppendAllText(fullFilePath, regrmt.ToString());

                    DirectoryInfo di = new DirectoryInfo(_fileLocation);
                    FileInfo[] fi = di.GetFiles(filenamepat + fileDate.ToString("MMdd"));

                    File.Move(fi[0].FullName, _archivePath + fi[0].Name);
                        TransferOperationResult transResult = session.PutFiles(_archivePath + fi[0].Name, ftpDir, false, transferOptions);
                        transResult.Check();
                    }

    */



            } catch (Exception e)
            {
                Dts.Events.FireError(18, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0);

            }


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</msb:DisplayName>
		<msb:ProjectId>{06812F55-4A0C-4AAC-9FD7-DBCAABE5A32C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_aded969e528c4a84b7c7ecb2153fc08f.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Settings.get_Default():ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Sett" +
    "ings")]

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d9bbed3ac71e42d19ced13eb1f7a99c1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d9bbed3ac71e42d19ced13eb1f7a99c1")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_aded969e528c4a84b7c7ecb2153fc08f.dll">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
AQAQAGYECAA5AAEAAQAAABAAfAXYBVUAAQADAAABEAAsBtgFaQADAAcAAwEAAEUGAABNAAQACgAR
AFoE2QARAFYB3QARAJkA4QAGBl4A5QBWgDUG6ABWgDYB6ABQIAAAAACGAGwEBgABAOgiAAAAAIYY
NQUGAAEA8CIAAAAAgxg1BQYAAQD4IgAAAACTCAMF7AABACQjAAAAAJMIPgHxAAEAKyMAAAAAkwhK
AfYAAQAzIwAAAACWCHwG/AACADojAAAAAIYYNQUGAAIAQiMAAAAAkRg7BQEBAgAAAAEAUgMJADUF
AQARADUFBgAZADUFCgApADUFEAAxADUFEAA5ADUFEABBADUFEABJADUFEABRADUFEABZADUFEABh
ADUFEABpADUFBgChADUFBgDJADUFFQDZADUFBgB5ALEGNABxAD0GOQDhAAcGPgDpAEUEQwDxAEgD
SQB5AJsDTQD5AGUGUgABAV4GWACBADUFBgD5AHMGXQCBACYBYgCpAJsDaAABAaMGbAAJATUFEAAJ
ARUGcgARAfAAaAARAecAaAABAVgDbAAZATUFBgAZARQEeQDhAFMGhwCRAKkAaACRAIoAaAD5AGUG
jQApASsFlADhAIgGAQBxADUFBgCpADUFBgAxAdAAnQAxAbsGpgCxADUFrADRADUFBgAIABQAzwAI
ABgA1AApAHMAPAEuAAsAFAEuABMAHQEuABsAPAEuACMARQEuACsAbgEuADMAbgEuADsAbgEuAEMA
RQEuAEsAdAEuAFMAbgEuAFsAiwFDAGMA1ABJAHMAPAFhAHsA1ABjAGsA1AAbAAMAAQAEAAMAAAAH
BQUBAABeAQoBAACABg8BAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEAAABjHQVNAAAAAAAA
XQMAAAQAAAAAAAAAAAAAALQAZgAAAAAACwAAAAAAAAAAAAAAvQCkAwAAAAAEAAAAAAAAAAAAAAC0
AE4EAAAAAAsAAAAAAAAAAAAAAL0APwAAAAAAAQABAAAAAAAAAAAAxgAeBgAAAAAAAAAAAQAAAIYF
AAAFAAIAAAAAAABMaXN0YDEAU1RfZDliYmVkM2FjNzFlNDJkMTljZWQxM2ViMWY3YTk5YzEAPE1v
ZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1z
Y29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJpYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBGaWxlAGdldF9OYW1lAGdldF9GdWxsTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAEFwcGVuZExpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0
ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmli
dXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxh
dGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9W
YWx1ZQB2YWx1ZQBNb3ZlAFNUX2FkZWQ5NjllNTI4YzRhODRiN2M3ZWNiMjE1M2ZjMDhmAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0
TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNlbmRNYWlsAFNUX2FkZWQ5NjllNTI4YzRhODRi
N2M3ZWNiMjE1M2ZjMDhmLmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEV4Y2VwdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lzdGVtSW5mbwBE
aXJlY3RvcnlJbmZvAFN0cmluZ0J1aWxkZXIARW1haWxTZW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdl
cgBFdmVudHNPYmplY3RXcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF9kOWJiZWQzYWM3MWU0MmQxOWNlZDEzZWIxZjdhOTljMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfZDliYmVkM2FjNzFlNDJkMTljZWQxM2ViMWY3YTk5
YzEuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAEdldEZpbGVzAENvbW1vbkNsYXNzZXMAU2V0dGlu
Z3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0
AE9iamVjdABQYWRSaWdodABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABTeXN0ZW0uVGV4dABB
cHBlbmRBbGxUZXh0AGdldF9Ub2RheQBnZXRfQXNzZW1ibHkAACUkAFAAYQBjAGsAYQBnAGUAOgA6
AEYAaQBsAGUATgBhAG0AZQAAN1UAcwBlAHIAOgA6AEYAdQBsAGwATwB1AHQAYgBvAHUAbgBkAEQA
aQByAGUAYwB0AG8AcgB5AAAJTQBNAGQAZAAAJyQAUAByAG8AagBlAGMAdAA6ADoATABvAGMAYQBs
AFAAYQB0AGgAADVVAHMAZQByADoAOgBGAHUAbABsAEEAcgBjAGgAaQB2AGUARABpAHIAZQBjAHQA
bwByAHkAAC0kAFAAYQBjAGsAYQBnAGUAOgA6AEwAbwBnAEQAaQByAGUAYwB0AG8AcgB5AAAjJABQ
AHIAbwBqAGUAYwB0ADoAOgBFAG0AYQBpAGwAVABvAAAtJABQAHIAbwBqAGUAYwB0ADoAOgBFAG0A
YQBpAGwAUwB1AGIAagBlAGMAdAAAJyQAUAByAG8AagBlAGMAdAA6ADoARQBtAGEAaQBsAEIAbwBk
AHkAACMkAFAAcgBvAGoAZQBjAHQAOgA6AEUAbQBhAGkAbABDAEMAABF5AHkAeQB5AE0ATQBkAGQA
AEdIAEQAMAAwADAAMAAwADAAMAAwADAAewAwADAAMAAwADAAMAAwADAAMAB7ADAAMAAwADAAMABD
ADEAMAAwADUAMAAzADAAAEdIAEQAMAAwADAAMAAwADAAMAAwADAAewAwADAAMAAwADAAMAAwADAA
MAB7ADAAMAAwADAAMABDADUAMAA1ADUAMAAzADAAAB1QAHIAbwBjAGUAcwBzACAAVgBhAGwAdQBl
AHMAAAUKAAoAAAEAcVMAVABfAGQAOQBiAGIAZQBkADMAYQBjADcAMQBlADQAMgBkADEAOQBjAGUA
ZAAxADMAZQBiADEAZgA3AGEAOQA5AGMAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBv
AHUAcgBjAGUAcwAAAAAAcvSC5T9oLEijPZOTPEzKSAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQER
YRgHEBE9Dg4ODg4ODg4ODhJBDh0SRRE9EkkEAAARPQQgABJxBCAAEnUFIAESeRwDIAAcBCABDg4F
AAIODg4EAAECDgQgAQ4IBSABEkEOAyAADgUAAgEODgYgAR0SRQ4NIAUBDg4VEoCRAQ4ODgUgABKA
lQYAAw4ODg4IIAUCCA4ODggIAAESgJkRgJ0FIAASgKEHIAIBDhKAoQi3elxWGTTgiQiJhF3NgIDM
kQgfcYGz1Z2MQAQAAAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQESXQQA
ABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU1RfZDliYmVkM2FjNzFlNDJkMTljZWQxM2ViMWY3YTk5YzEAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4w
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0ALQAAADOyu++AQAAAJEA
AABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4w
LjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5
c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAACk
NAAAAAAAAAAAAAC+NAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsDQAAAAAAAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAFTWMdAAABAAVNYx0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGQAOQBiAGIAZQBkADMAYQBjADcAMQBlADQAMgBkADEAOQBjAGUAZAAxADMAZQBiADEA
ZgA3AGEAOQA5AGMAMQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADUAMgAzAC4AMQA5ADcAMQA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfAGEAZABlAGQAOQA2ADkAZQA1ADIAOABjADQAYQA4ADQAYgA3AGMANwBlAGMAYgAyADEANQAz
AGYAYwAwADgAZgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AYQBkAGUAZAA5ADYAOQBlADUAMgA4AGMANABhADgANABiADcAYwA3AGUAYwBi
ADIAMQA1ADMAZgBjADAAOABmAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfAGQAOQBiAGIAZQBkADMAYQBjADcAMQBlADQAMgBkADEAOQBjAGUAZAAxADMAZQBi
ADEAZgA3AGEAOQA5AGMAMQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA1ADIAMwAuADEAOQA3ADEANwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA1ADIAMwAuADEAOQA3ADEANwAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADQNAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Send_Empty_File"
          TopLeft="142,83" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>