<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/16/2021 9:22:21 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DESKTOP-581SQF6"
  DTS:CreatorName="DESKTOP-581SQF6\nnaem"
  DTS:DTSID="{ABBBAE3C-CEA9-4A8F-BB54-8BB04198E51C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="27"
  DTS:VersionGUID="{435019B4-6F59-4CE2-9A70-36CE423AC010}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2974c94a-b3b5-4d4d-997f-9d707eb8a68f}"
      DTS:ObjectName="Artiva">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Artiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Outbound\Artiva-NB-Out.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="8000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{D3289A98-CDB4-47D6-9426-FDBF84D4539E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exception]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{1a72e822-bf9c-4255-b6ff-92ff2615a012}"
      DTS:ObjectName="Exception">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Exception]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Outbound\EXC.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="8000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{3EC5E65A-2CC2-47BC-942D-7331FCE5CC93}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{F6A56999-714B-4AE0-B087-4A492F4D1D17}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Inbound\AS Collections Test File.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{F44A0B19-8A8A-4D27-9FFB-2265195E8B58}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ADM"
              DTS:DTSID="{1A236CD9-F905-4ADB-9838-F5C00130EA28}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Agent Number"
              DTS:DTSID="{184283F5-DB5F-467C-B7BF-E30CC9B0B939}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Agent Name"
              DTS:DTSID="{9227EFC0-FAF0-4315-AC35-35218086F793}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="1000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Address"
              DTS:DTSID="{59D70AFB-D866-49CC-8BA0-5FED1EE59C03}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Memo Type"
              DTS:DTSID="{32F747BC-AA5D-47EA-81C1-6369CE2C4CEE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Memo Code"
              DTS:DTSID="{6DD0A3E5-981C-4557-B542-64359E1027C7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Offset Amount"
              DTS:DTSID="{5218D8CB-2EA3-4BBF-A0AB-A3E9F4F9912F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Offset Reason"
              DTS:DTSID="{BCE7DB78-E99C-40B1-A9D4-9BC9757E63AF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Memo Date"
              DTS:DTSID="{8E9364D6-8664-4306-A120-5F9D236F7D88}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Debit Reason"
              DTS:DTSID="{64EE0660-8564-469D-B55F-9D9DFBF2CAEF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DOI"
              DTS:DTSID="{9B301FD6-CACB-4BF8-A7BC-ACD9AC26E04D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x0009_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="TDNR"
              DTS:DTSID="{7D792A7D-95AF-46FE-8D5A-0D00583A0208}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Passenger Name"
              DTS:DTSID="{F5BDD50F-6442-45B9-862C-D5EA9F37F94B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{A6EE5C35-1CDB-4A68-9872-44064C36C598}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{33D0C31B-8EF6-4E3F-A8C4-96AC2F400C2B}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*Collections*</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B75E68C1-4958-447B-8C34-A2A8AF2DC195}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{6835D90B-50D2-4A89-929D-DA1F41BD90D5}"
      DTS:ObjectName="WorksheetIndex">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D1F9A10A-8FD2-41DE-A1FB-4C94B9432E7D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory] + &quot;Artiva-NB-Out.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Artiva">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Outbound\Artiva-NB-Out.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5AE05073-AD6F-4327-900F-8668C07ECE3C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A2E8DC18-DED3-422D-BD5C-CDCC56DAAF21}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory] + &quot;EXC.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Exception">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Outbound\EXC.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD6AE190-A251-4B24-A6C4-2C6B65E887EE}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{253DC580-1BD9-44E0-8087-0A69FB4E3604}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Outbound\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Convert Excel file to tsv"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{be5f9b5e-37e7-41fb-ac0f-7a5177075a08}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Convert Excel file to tsv"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d46cfc885aa64ee393104056701d14a3"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::CurrentFile,User::FullInboundDirectory,$Package::WorksheetIndex">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Settings.get_Default():ST_1273b7f439464067889e1468a38222e2.Properties.Sett" +
    "ings")]

namespace ST_1273b7f439464067889e1468a38222e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_d46cfc885aa64ee393104056701d14a3.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{37B8C254-D99C-4987-B582-3B0859F56E9C}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_1273b7f439464067889e1468a38222e2</RootNamespace><AssemblyName>ST_d46cfc885aa64ee393104056701d14a3</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="Microsoft.CSharp" /><Reference Include="Microsoft.Office.Interop.Excel, Version=14.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL"><EmbedInteropTypes>True</EmbedInteropTypes></Reference><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebugd2023cf3-f023-458f-a419-25349037fe7f/c89a9e96-39c8-4a01-ab32-96ab61cdc83d&quot;" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using Microsoft.Office.Interop.Excel;
using System.Runtime.InteropServices;
using System.IO;
using System.Linq;
using System.Text;
#endregion

namespace ST_1273b7f439464067889e1468a38222e2
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public void Main()
        {
            string dirPath = (string)Dts.Variables["User::FullInboundDirectory"].Value;

            Microsoft.Office.Interop.Excel.Application myExcel;
            Microsoft.Office.Interop.Excel.Workbook myWorkbook;
            Microsoft.Office.Interop.Excel.Workbooks workbooks;
            Microsoft.Office.Interop.Excel.Worksheet worksheet;

            int wsIndex = (int)Dts.Variables["$Package::WorksheetIndex"].Value;
            var files = Directory.GetFiles(dirPath, "*.xls");
            files = files.Concat(Directory.GetFiles(dirPath, "*.xlsx")).ToArray();

            try
            {
                for (int i = 0; i < files.Length; i++)
                {
                    string fullPath = files[i];
                    string currentFile = files[i];
                    if (currentFile.EndsWith(".xls") || currentFile.EndsWith(".xlsx"))
                    {


                        myExcel = new Microsoft.Office.Interop.Excel.Application();
                        myExcel.DisplayAlerts = false;
                        workbooks = myExcel.Workbooks;
                        workbooks.Open(fullPath, 0, true, 5, "", "", true, Microsoft.Office.Interop.Excel.XlPlatform.xlWindows, "\t", false, false, 0, true, 1, 0);
                        myWorkbook = myExcel.ActiveWorkbook;
                        worksheet = (Microsoft.Office.Interop.Excel.Worksheet)myWorkbook.Worksheets[wsIndex];
                        worksheet.Rows["1:1"].Delete();

                        fullPath = fullPath.Replace("–", "-").Replace(".xlsx", ".txt").Replace(".xls", ".txt");
                        myWorkbook.SaveAs(fullPath, Microsoft.Office.Interop.Excel.XlFileFormat.xlTextWindows, Type.Missing, Type.Missing, Type.Missing, false, Microsoft.Office.Interop.Excel.XlSaveAsAccessMode.xlNoChange, Type.Missing, Type.Missing, Type.Missing, Type.Missing, Type.Missing);


                        GC.Collect();
                        GC.WaitForPendingFinalizers();
                        Marshal.ReleaseComObject(worksheet);
                        myWorkbook.Close(Type.Missing, Type.Missing, Type.Missing);
                        if (myWorkbook != null)
                            Marshal.ReleaseComObject(myWorkbook);

                        Marshal.ReleaseComObject(workbooks);
                        myExcel.Quit();
                        Marshal.ReleaseComObject(myExcel);


                    }
                }

            }
            catch (Exception e)
            {
                Dts.Events.FireError(18, "Process Values", e.Message + "-@@-" + e.StackTrace, "", 0);

            }



            Dts.TaskResult = (int)ScriptResults.Success;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_1273b7f439464067889e1468a38222e2</msb:CodeName>
		<msb:DisplayName>ST_1273b7f439464067889e1468a38222e2</msb:DisplayName>
		<msb:ProjectId>{8E34C634-8F59-4E1F-9E78-EC56F032CD42}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d46cfc885aa64ee393104056701d14a3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1273b7f439464067889e1468a38222e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1273b7f439464067889e1468a38222e2")]
[assembly: AssemblyCopyright("Copyright @  2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1273b7f439464067889e1468a38222e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1273b7f439464067889e1468a38222e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1273b7f439464067889e1468a38222e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d46cfc885aa64ee393104056701d14a3.dll">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
BgASAasIDgDGBKoKBgCcAKsIBgAjBXgKBgAKCsoKBgB2CTIJEgCxBF0IEgBUBV0IEgBvBB0JBgD6
BIsKBgCEBYsKBgA6BosKBgASBKsIBgAIBYsKBgByBosKBgAjBkcJBgCwA8wLBgDPBIsKBgDPBYsK
CgBLCOQHFgBsC/IDFgCnA/IDBgBTB6sIBgCPAKsIBgA3DgwCDgCxA78JBgBfAJECBgAXA6sIBgBa
CqsIBgDxCKsIBgDFA6sIGgD/CdgJDgD3CaoKGgCXC9gJGgCCCdgJGgB/C9gJBgDiAasIBgATCIsK
CgAaCuQHBgAlDkcJAAAAANkBAAAAAAEAAQABABAA/gilADkAAQABAAAAEADRCjkLSQABAAMAAAEQ
AKkLOQtxAAMABwChEAAAUAwsCAAABAAKAKEQAACHDSwIAAAEAAoAoRAAABEJLAgAAAQACgChEAAA
NwwsCAAABAAKAKEQAABiDSwIAAAEAAoAoRAAAI8DLAgAAAQACgChEAAACAwsCAAABAANAKEQAAC8
BywIAAAEAA8AoRAAAEEMLAgAAAQADwChEAAAcg0sCAAABAAPAKEQAADCCywIAAAEAA8AoRAAAAUN
LAgAAAQAEQABAQAAswwsCEEABAARAAEBAACyCCwIQQA7ABEAAQEAAGMDLAhBAD8AEQChEAAAEAks
CAAAQwARAKEQAACaBywIAABDABwAoRAAAAQNLAgAAEMAIgADAQAAHgwAAEEAQwAkAIMBEAAoAAAA
SQBGACQAEQDlCJsCEQBDBJ8CEQBTA6MCBgZtAqcCVoDdCKoCVoBnAqoCVoB+AqoCVoAgAqoCVoCH
DKoCVoCVAKoCVoDtAKoCVoBGAaoCVoD2AaoCVoDJAKoCVoCfDaoCVoA9AaoCVoBTAaoCVoCOAaoC
VoCXAaoCVoBpAaoCVoB3B6oCVoDRCKoCVoCVCaoCVoAbCKoCVoD8AaoCVoCmBKoCVoDeDaoCVoCH
AqoCVoAzAqoCVoA4CqoCVoCeDKoCVoBDAKoCVoBMAKoCVoADAqoCVoBeAqoCVoADAaoCVoBNAaoC
VoAJAaoCVoAaAqoCVoCvDaoCVoBSAKoCVoD9AKoCVoD0AKoCVoDQDaoCVoCbCKoCVoAgB6oCVoDZ
DKoCVoCFAKoCVoCIB6oCVoDwAqoCVoDSAqoCVoCtAaoCVoCUBKoCVoDCAaoCVoDCCKoCVoC5AaoC
VoDqDKoCVoBBDaoCBgZtAqcCVoBiB64CVoArAq4CVoCUDK4CBgZtAqcCVoAtB7ICVoCVA7ICVoAO
A7ICBgZtAqcCVoD4C7YCVoAjBLYCFgAvALoCFgBYAMkCUCAAAAAAhgAECQYAAQBkIwAAAACGGGQK
BgABAGwjAAAAAIMYZAoGAAEAdCMAAAAAkwgGCtYCAQCgIwAAAACTCCsE2wIBAKcjAAAAAJMINwTg
AgEAryMAAAAAlgg1DeYCAgC2IwAAAACGGGQKBgACAL4jAAAAAJEYago+AQIAAAAAAAMABhhcAQYA
AgAAAAAAgxDGDRsN6wICAAAAAACDEMYNKA3xAgUAAAAAAAMABhigAQYACAAAAAAAAxDGDRsN+AII
AAAAAAADAAYYeAAGAAoAAAAAAAMQxgX5CP0CCgAAAAAAAwAGGDYABgAaAAAAAAADEMYNsgcRAxoA
AAAAAAMABhjgAAYAGwAAAAAAAxDGDb4LFgMbAAAAAAADAAYYGwAGABwAAAAAAAMQxg0bDU0BHAAA
AAAAAwAGGIIBBgAdAAAAAAADEMYNWgwbAx0AAAAAAAMQxg1sDB8DHQAAAAAAAwAGGMsBBgAeAAAA
AAADEMYFFg0GAB4AAAAAAAMABhgBAAYAHgAAAAAAAxDGBYcE8QIeAAAAAAADAAYY0gAGACEAAAAA
AAMQxg0PDCQDIQAAAAAAAwAGGA4ABgAiAAAAAAADEMYFcQopAyIAAAAAAAMABhh1AQYALgAAAAAA
AxDGDX4MOgMuAAAAAQAaBwAgAAAAABEgAQAJDhEgAgD9DREgAQAJDhEgAgD9DREgAwAAAAAgAAAA
AAEgAQAMDgAgAAAAAAEgAQDpAxEgAgCyCxEgAwAuDhEgBAC5DBEgBQAkAxEgBgAcAxEgBwC4AhEg
CAAJCREgCQAuChEgCgC8AxEgCwAaDhEgDABGChEgDQD0DREgDgANCBEgDwCsAgAgAAAAAAAgAAAA
AAAgAAAAAAEAAQAWAhEgAQAtCxEgAgDpAxEgAwCkBwAgAAAAABEgAQDpAxEgAgC1DBEgAwAkAxEg
BAAcAxEgBQC+AhEgBgCyCREQBwBrAxEgCABjCREgCQD0DREgCgB2AxEgCwC/DREgDAANCAAgAAAA
AAcAUAAHABgACgCRAAsAkQAMAFQADAA4AA8AkQAQAFgAEAAkAAkAZAoBABEAZAoGABkAZAoKACkA
ZAoQADEAZAoQADkAZAoQAEEAZAoQAEkAZAoQAFEAZAoQAFkAZAoQAGEAZAoQAGkAZAoGAIkAZAoG
ALkAZAoGANkAZAoVAOkAZAoQAPEAZAobAPkAZAoGAAkBZAogAPkAZAoqABEBZAowABkBZAoQACkB
ZAoBADEBZAoBAHEAAAxLADkBaAtRAEEBoghXAEkBEAdeAGEBdgtiAGkBrAxpAGkBEg6GAFEBbgeU
AHkBZAoQAAEB5QGZAIEBRAOiAAEB1wOpAJkBlw2yAAwAjQTPAAwADw3bABQAoAPpALEBjQTyAJkB
ywn8ABwAjQTPABwADw3bAAEBWgclASQAoAMwAVEBLQM4AcEB0Qw+AcEB3ws+AckBwAxCATkBLAxH
AXkAgwNNAXkANQNNAVEBrAxRAdEBUApYATkBUw0BAHEAZAoGAJEAZAoGAAEBIQ5hAcEAZApnAeEA
ZAoGAAgAFACKAQgAGACPAQgAHACUAQgAIACZAQgAJACeAQgAKACjAQgALACoAQgAMACtAQgANACy
AQgAOAC3AQgAPAC8AQgAQADBAQgARADGAQgASADLAQgATADLAQgAUADQAQgAVADVAQgAWADaAQgA
XADfAQgAYADkAQgAZADpAQgAaADuAQgAbADzAQgAcAD4AQgAdAD9AQgAeAACAggAfAAHAggAgAAM
AggAhAARAggAiAAWAggAjAAbAggAkAAgAggAlAAlAggAmAAqAggAnAAvAggAoAA0AggAoQCEAggA
pAA5AggAqAA+AggArABDAggAsABIAggAtABNAggAuABSAggAvABXAggAwABcAggAxABhAggAyABm
AggAzABrAggA0ADuAQgA1ABwAggA2ACKAQgA3AB1AggA4AB6AggA5AB/AggA6ABhAggA8ACEAggA
9ACJAggA+ADpAQgAAAGJAggABAGEAggACAHpAQgAEAGOAggAFAGEAikAewCdAy4ACwB1Ay4AEwB+
Ay4AGwCdAy4AIwCmAy4AKwDPAy4AMwDPAy4AOwDPAy4AQwCmAy4ASwDVAy4AUwDPAy4AWwDsA0MA
YwCEAkkAewCdA2EAawCEAmMAcwCEAokAuwA0BKMAawCEAqMAgwCpBKMAiwDTBKMAkwCEAqkAuwA0
BMMAawCEAsMAmwDaBMMAowAxBckAuwBPBOMAawCEAuMAgwCKBeMAqwC0BeMAkwCEAukAuwBYBAMB
awCEAgMBgwAUBgMBiwDTBAMBkwCEAgkBuwA0BCMBawCEAiMBmwA+BiMBowCVBikBuwBhBEMBawCE
AkMBiwDTBEMBswDuBkMBgwD8BkMBkwCEAkkBuwCFBGABuwA0BGMBawCEAmMBgwAmB2MBswDuBmMB
kwCEAmkBuwCgBIABuwA0BIMBawCEAoMBgwBQB4MBqwC0BYMBkwCEAqMBawCEAqMBgwB6B6MBiwDT
BKMBkwCEAsABuwA0BMMBawCEAsMBmwCkB8MBowAFCOMBawCEAuMBgwBjCOMBswDuBuMBkwCEAgAC
wwA9BAACuwBGBAMCawCEAgMCqwC0BQMCgwCNCAMCkwCEAiMCawCEAiMCowC3CEACuwBPBEMCawCE
AkMCowANCWMCawCEAmMCowBhCYACuwBYBIMCawCEAoMCswDuBoMCgwCKBYMCkwCEAqMCawCEAqMC
gwBQB6MCkwCEAsACuwA0BMMCawCEAsMCgwCNCMMCkwCEAgADwwA0BAADuwBhBAMDawCEAiADwwA0
BCADuwBhBGADuwBqBKADwwBzBKADuwB8BOADuwCFBCAEwwCOBCAEuwCXBGAEuwCgBAUAkwIHAJMC
CQCTAgsAkwINAJMCDwCTAhEAlQITAJMCFQCXAhcAmQIZAJMCGwCTAh0AkwIfAJMCIQCTAiMAkwIl
AJMCJwCTAikAkwIrAJMCLQCTAi8AkwIxAJMCMwCTAjUAlwI3AJcCOQCZAj0AkwI/AJMCQQCTAkMA
lwJFAJMCRwCTAkkAkwJLAJMCTQCTAk8AkwJTAJMCVQCTAlcAkwJZAJMCWwCTAl0AlwI3AAMAAQAE
AAMACgAEAAsABQAUAAYAFQAKABYACwAAAAoKPwMAAEsERAMAAEsNSQMAADgNTgMAADgNVAMAALYH
WQMAAMILXgMAADgNYwMAAHAMZwMAABMMawMAAIIMcAMCAAQAAwACAAUABQABAAYABQACAAcABwAC
AAsACQABAAwACQACAA4ACwACABIADQACABQADwACABYAEQACABgAEwABABkAEwACAB8AFQACACMA
FwDBAN8AGQEoAQSAAAABAAAA2h7VRwAAAAAAABkBAAAEAAAAAAAAAAAAAABvAXUCAAAAAAsAAAAA
AAAAAAAAAHgBxQcAAAAABAAAAAAAAAAAAAAAbwEXBAAAAAAEAAAAAAAAAAAAAABvAasIAAAAAAsA
AAAAAAAAAAAAAHgBPwIAAAAABAAAAAAAAAAAAAAAgQGhCQAAAAAAAAAAAQAAANsKAAAXAAIAGAAC
AD0AggA/AIIAAAAAX1Z0YmxHYXAxXzIwAF9WdGJsR2FwM180MABfVnRibEdhcDNfNjAAPD5vX18w
ADw+cF9fMABfVnRibEdhcDFfMTEAeGxXSjJXRDEAeGxXSzEAeGxXUTEAPD5wX18xAElFbnVtZXJh
YmxlYDEAQ2FsbFNpdGVgMQBfVnRibEdhcDFfMTIAeGxFeGNlbDEyAEludDMyAHhsREJGMgBBY3Rp
b25gMgBTVF8xMjczYjdmNDM5NDY0MDY3ODg5ZTE0NjhhMzgyMjJlMgB4bEV4Y2VsMgBfVnRibEdh
cDJfMTAzAF9WdGJsR2FwMl8zMwB4bERCRjMAeGxXSjNGSjMAeGxXSjMAeGxXSzMAeGxXSzNGTTMA
RnVuY2AzAFNUX2Q0NmNmYzg4NWFhNjRlZTM5MzEwNDA1NjcwMWQxNGEzAHhsRXhjZWwzAHhsREJG
NAB4bFdLNAB4bEV4Y2VsNABfVnRibEdhcDFfNDUAeGxFeGNlbDk3OTUAX1Z0YmxHYXAxXzk1AF9W
dGJsR2FwNF81AHhsRXhjZWw1AHhsRXhjZWw3AF9WdGJsR2FwMV8xOAB4bFRlbXBsYXRlOAB4bEV4
Y2VsOAB4bEFkZEluOABfVnRibEdhcDVfMTA5ADxNb2R1bGU+AEdDAEdldFR5cGVGcm9tQ0xTSUQA
eGxESUYAeGxTWUxLAHhsV0sxQUxMAFN5c3RlbS5JTwBSSFMAeGxXS1MAeGxDU1ZNU0RPUwB4bE1T
RE9TAHhsVGV4dE1TRE9TAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB4bFdLMUZNVAB4
bENTVgB2YWx1ZV9fAG1zY29ybGliAHhsQ1NWTWFjAHhsVGV4dE1hYwBTeXN0ZW0uQ29sbGVjdGlv
bnMuR2VuZXJpYwBDb3JydXB0TG9hZABJZ25vcmVSZWFkT25seVJlY29tbWVuZGVkAHhsT3BlblhN
TFRlbXBsYXRlTWFjcm9FbmFibGVkAHhsT3BlblhNTFdvcmtib29rTWFjcm9FbmFibGVkAHhsU2hh
cmVkAEd1aWQAV3JpdGVSZXNQYXNzd29yZABSZXBsYWNlAGdldF9TdGFja1RyYWNlAENyZWF0ZUlu
c3RhbmNlAGRlZmF1bHRJbnN0YW5jZQBYbFNhdmVBc0FjY2Vzc01vZGUAVGV4dENvZGVwYWdlAGdl
dF9NZXNzYWdlAFJhbmdlAHhsTm9DaGFuZ2UASW52b2tlAFZhcmlhYmxlAElFbnVtZXJhYmxlAEVk
aXRhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGVuYW1lAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBTeXN0ZW0uQ29yZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UAQ3JlYXRlAHhsT3BlblhNTFRlbXBs
YXRlAHhsVGVtcGxhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ2FsbFNpdGUARGlzcElkQXR0cmli
dXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAEd1aWRBdHRyaWJ1dGUAQ29tRXZlbnRJbnRl
cmZhY2VBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAElu
dGVyZmFjZVR5cGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJh
bWV3b3JrQXR0cmlidXRlAExDSURDb252ZXJzaW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJh
dGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAERlZmF1bHRNZW1iZXJB
dHRyaWJ1dGUAVHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0
dHJpYnV0ZQBDb0NsYXNzQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJs
eUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9W
YWx1ZQB2YWx1ZQB4bFdlYkFyY2hpdmUAeGxFeGNsdXNpdmUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lv
bmluZwBTdHJpbmcATWlzc2luZwB4bE1hY2ludG9zaABFbmRzV2l0aAB4bEV4Y2VsNFdvcmtib29r
AHhsT3BlblhNTFdvcmtib29rAF9Xb3JrYm9vawBSb3V0ZVdvcmtib29rAGdldF9BY3RpdmVXb3Jr
Ym9vawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuVGFza3MuU2NyaXB0VGFzawBMb2NhbABNYXJzaGFsAHhsV29ya2Jvb2tOb3JtYWwATWljcm9z
b2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25l
bnRNb2RlbABTVF9kNDZjZmM4ODVhYTY0ZWUzOTMxMDQwNTY3MDFkMTRhMy5kbGwAeGxIdG1sAGdl
dF9JdGVtAFN5c3RlbQBYbFBsYXRmb3JtAEVudW0AeGxPcGVuWE1MQWRkSW4AeGxJbnRsQWRkSW4A
eGxBZGRJbgByZXNvdXJjZU1hbgBCb29sZWFuAE9wZW4AU2NyaXB0TWFpbgBPcmlnaW4AX0FwcGxp
Y2F0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEV4Y2VwdGlvbgBDb25mbGljdFJlc29sdXRpb24AQ3VsdHVyZUluZm8AQ1NoYXJw
QXJndW1lbnRJbmZvAHhsSW50bE1hY3JvAE1pY3Jvc29mdC5DU2hhcnAAQ3JlYXRlQmFja3VwAFN5
c3RlbS5MaW5xAEludm9rZU1lbWJlcgBNaWNyb3NvZnQuQ1NoYXJwLlJ1bnRpbWVCaW5kZXIAQ2Fs
bFNpdGVCaW5kZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBFdmVudHNPYmplY3RXcmFwcGVyAERlbGlt
aXRlcgB4bFRleHRQcmludGVyAENvbnZlcnRlcgBGaXJlRXJyb3IAQWN0aXZhdG9yAC5jdG9yAC5j
Y3RvcgBTYXZlQXMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkludGVyb3BTZXJ2
aWNlcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
MTI3M2I3ZjQzOTQ2NDA2Nzg4OWUxNDY4YTM4MjIyZTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNhdmVDaGFuZ2VzAFNUXzEyNzNiN2Y0Mzk0NjQwNjc4ODll
MTQ2OGEzODIyMmUyLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBHZXRGaWxlcwBDU2hhcnBBcmd1
bWVudEluZm9GbGFncwBDU2hhcnBCaW5kZXJGbGFncwBTZXR0aW5ncwBVcGRhdGVMaW5rcwBnZXRf
V29ya2Jvb2tzAFN5c3RlbS5Db2xsZWN0aW9ucwBXYWl0Rm9yUGVuZGluZ0ZpbmFsaXplcnMAU3Vj
Y2VzcwBnZXRfRHRzAFNoZWV0cwBnZXRfV29ya3NoZWV0cwBTY3JpcHRSZXN1bHRzAGdldF9FdmVu
dHMARG9jRXZlbnRzAFdvcmtib29rRXZlbnRzAEFwcEV2ZW50cwBnZXRfRGlzcGxheUFsZXJ0cwBz
ZXRfRGlzcGxheUFsZXJ0cwBnZXRfUm93cwB4bENTVldpbmRvd3MAeGxXaW5kb3dzAHhsVGV4dFdp
bmRvd3MAQ29uY2F0AFhsRmlsZUZvcm1hdABSZWxlYXNlQ29tT2JqZWN0AENvbGxlY3QAeGxYTUxT
cHJlYWRzaGVldAB4bE9wZW5Eb2N1bWVudFNwcmVhZHNoZWV0AF9Xb3Jrc2hlZXQAVGFyZ2V0AFF1
aXQAZ2V0X19EZWZhdWx0AHNldF9fRGVmYXVsdABnZXRfRGVmYXVsdAB4bFdvcmtib29rRGVmYXVs
dABzZXRfVGFza1Jlc3VsdABEb2NFdmVudHNfRXZlbnQAV29ya2Jvb2tFdmVudHNfRXZlbnQAQXBw
RXZlbnRzX0V2ZW50AENvbnZlcnQAeGxFeGNlbDJGYXJFYXN0AHhsV29ya3MyRmFyRWFzdABUZXh0
VmlzdWFsTGF5b3V0AHhsVW5pY29kZVRleHQAeGxDdXJyZW50UGxhdGZvcm1UZXh0AEFkZFRvTXJ1
AENvbHVtbkluZGV4AFJvd0luZGV4AFRvQXJyYXkATm90aWZ5AGdldF9Bc3NlbWJseQBSZWFkT25s
eQBEaXJlY3RvcnkAAAAAADVVAHMAZQByADoAOgBGAHUAbABsAEkAbgBiAG8AdQBuAGQARABpAHIA
ZQBjAHQAbwByAHkAADEkAFAAYQBjAGsAYQBnAGUAOgA6AFcAbwByAGsAcwBoAGUAZQB0AEkAbgBk
AGUAeAAACyoALgB4AGwAcwAADSoALgB4AGwAcwB4AAAJLgB4AGwAcwAACy4AeABsAHMAeAAASTAA
MAAwADIANAA1ADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAwADAAMAAw
ADAAMAAwADAANAA2AAEBAAMJAAANRABlAGwAZQB0AGUAAAcxADoAMQAAAxMgAQMtAAEJLgB0AHgA
dAAAHVAAcgBvAGMAZQBzAHMAIABWAGEAbAB1AGUAcwAACS0AQABAAC0AAXFTAFQAXwAxADIANwAz
AGIANwBmADQAMwA5ADQANgA0ADAANgA3ADgAOAA5AGUAMQA0ADYAOABhADMAOAAyADIAMgBlADIA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAmFIfOPIuDR7qV1hYg
etUlAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFpBCABAQYJIAIBEoCBEoCBBSACAQ4OBiABARKA
gRMHCw4SHBIwEjwSQAgdDggODhI9BSAAEoCdBSAAEoChBiABEoClHAMgABwGAAIdDg4OGBABAhUS
gLkBHgAVEoC5AR4AFRKAuQEeAAMKAQ4NEAEBHR4AFRKAuQEeAAQgAQIOCAABEoCBEYC9BgABHBKA
gQgAARKAgRGAyQ4AAxKA0RGA1RKAgRKAgQ0VEk0BFRJRAxJVHBJACwABFRJNARMAEoDRAwYTAAkV
ElEDElUcEkAIIAITAhMAEwEJAAISgNkRgN0OHAAFEoDREYDVDhUSgLkBEoCBEoCBFRKAuQESgNkL
FRJNARUSWQISVRwCBhwHFRJZAhJVHAcgAgETABMBBSACDg4OAwAAAQQAAQgcBSAAEoDpAyAADgYA
Aw4ODg4IIAUCCA4ODggFIAASgO0HIAIBDhKA7Qi3elxWGTTgiQiJhF3NgIDMkQiwP19/EdUKOgQS
AAAABAYAAAAEFgAAAAQYAAAABBcAAAAEBwAAAAQIAAAABAsAAAAECQAAAAQQAAAABBsAAAAEHQAA
AAQhAAAABCcAAAAEKwAAAAQjAAAABBoAAAAEGQAAAATR7///BAIAAAAEEQAAAATC7///BBMAAAAE
FQAAAAQkAAAABBQAAAAEDgAAAAQFAAAABB8AAAAEHgAAAAQPAAAABCYAAAAEIAAAAAQEAAAABBwA
AAAEIgAAAAQoAAAABCkAAAAEKgAAAAQsAAAABC0AAAAELgAAAAQyAAAABDMAAAAENAAAAAQ1AAAA
BDYAAAAENwAAAAQ4AAAABDwAAAAEAQAAAAQDAAAABAAAAAABGwEaARwBEwMGEmEDBhJlAwYSEAIG
CAMGEUQDBhFIAwYRTAMGEVwOBhUSTQEVElEDElUcEkAMBhUSTQEVElkCElUcBAAAEmEEAAASZQUA
AQESZQQAABIQBSACHBwcBiADARwcHAQgARwcEyAPEjAOHBwcHBwcHBwcHBwcHBwEIAASMAQgABI8
AyAAAgQgAQECBCAAEiwQIAwBHBwcHBwcEUwcHBwcHAQgABIoBAgAEmEECAASZQQIABIQBQgCHBwc
BAgBHBwECAASMAQIABI8AwgADgMIAAIECAASLAQIABIoCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF8xMjczYjdmNDM5NDY0MDY3ODg5ZTE0Njhh
MzgyMjJlMgAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE4AABHAQAaLk5FVEZyYW1ld29yayxW
ZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQIAQAA
AAAAAAAIAQAPAAAAAAAIAQCDBwAAAAAIAQA0AQAAAAAIAQA8AgAAAAAIAQBXAQAAAAAIAQAuAQAA
AAAIAQADAAAAAAAIAQAVAQAAAAAIAQDuAQAAAAAIAQAMAAAAAAAIAQCFBwAAAAAIAQACAQAAAAAp
AQAkMDAwMjQ0MTMtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAGAQACAAAAVgEAKE1pY3Jv
c29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHMoTWljcm9zb2Z0Lk9mZmljZS5JbnRl
cm9wLkV4Y2VsLkFwcEV2ZW50cwAAWAEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAw
MDA0Ni5NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzX0V2ZW50AAApAQAk
MDAwMjA4RDUtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AABfAQBaU3lzdGVtLk9iamVjdCwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5AAApAQAkMDAwMjQ0MTEtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAw
MDQ2AABWAQAoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cyhNaWNyb3Nv
ZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuRG9jRXZlbnRzAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAw
LWMwMDAtMDAwMDAwMDAwMDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Eb2NFdmVu
dHNfRXZlbnQAAA0BAAhfRGVmYXVsdAAAKQEAJDAwMDIwODQ2LTAwMDAtMDAwMC1DMDAwLTAwMDAw
MDAwMDA0NgAAKQEAJDAwMDIwOEQ3LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAw
MDIwOERBLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDI0NDEyLTAwMDAtMDAw
MC1DMDAwLTAwMDAwMDAwMDA0NgAAYAEALU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5X
b3JrYm9va0V2ZW50cy1NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuV29ya2Jvb2tFdmVu
dHMAAF0BACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYzTWljcm9zb2Z0Lk9m
ZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRzX0V2ZW50AAApAQAkMDAwMjA4REItMDAw
MC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjA4RDgtMDAwMC0wMDAwLUMwMDAtMDAw
MDAwMDAwMDQ2AABVAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2K01pY3Jv
c29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5YbEZpbGVGb3JtYXQAAFMBACQwMDAyMDgxMy0wMDAw
LTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYpTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLlhs
UGxhdGZvcm0AAFsBACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYxTWljcm9z
b2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLlhsU2F2ZUFzQWNjZXNzTW9kZQAAAAAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAEROAAAAAAAAAAAAAF5OAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQTgAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
ANVH2h4AAAEA1UfaHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBUAF8AMQAyADcA
MwBiADcAZgA0ADMAOQA0ADYANAAwADYANwA4ADgAOQBlADEANAA2ADgAYQAzADgAMgAyADIAZQAy
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAOAA5ADgALgAxADgA
MwA4ADkAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8AZAA0ADYAYwBm
AGMAOAA4ADUAYQBhADYANABlAGUAMwA5ADMAMQAwADQAMAA1ADYANwAwADEAZAAxADQAYQAzAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADgAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBk
ADQANgBjAGYAYwA4ADgANQBhAGEANgA0AGUAZQAzADkAMwAxADAANAAwADUANgA3ADAAMQBkADEA
NABhADMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AMQAy
ADcAMwBiADcAZgA0ADMAOQA0ADYANAAwADYANwA4ADgAOQBlADEANAA2ADgAYQAzADgAMgAyADIA
ZQAyAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADgAOQA4
AC4AMQA4ADMAOAA5AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADgAOQA4AC4AMQA4ADMAOAA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHA+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{DD790EAA-56E2-419F-BAE4-C0084CEF6FD1}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{D9FC2203-028C-4BAB-B9CD-EEB87131539A}"
        DTS:ObjectName="{D9FC2203-028C-4BAB-B9CD-EEB87131539A}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\regional\Inbound\" />
            <FEFEProperty
              FileSpec="*Collections*" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Data Flow Task"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{D3534FB3-EFE3-4FAC-ABE8-D4D1AFA4EF17}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Artiva]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[out].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination 1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[exc].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Flat File Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Flat File Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ADM]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ADM]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ADM]"
                          name="ADM"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Agent Number]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Number]"
                          name="Agent Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Agent Name]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Name]"
                          name="Agent Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Address]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Address]"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Address]"
                          name="Address"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Type]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Type]"
                          name="Memo Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Code]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Code]"
                          name="Memo Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Amount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Offset Amount]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Amount]"
                          name="Offset Amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Offset Reason]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Reason]"
                          name="Offset Reason"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Date]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Date]"
                          name="Memo Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Debit Reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Debit Reason]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Debit Reason]"
                          name="Debit Reason"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DOI]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DOI]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DOI]"
                          name="DOI"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[TDNR]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TDNR]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[TDNR]"
                          name="TDNR"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Passenger Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Passenger Name]"
                          length="500"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Passenger Name]"
                          name="Passenger Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[ADM]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="ADM" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Agent Number]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Agent Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Agent Name]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Agent Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Address]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Type]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Memo Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Code]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Memo Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Offset Amount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Offset Amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Offset Reason]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Offset Reason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Memo Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Memo Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Debit Reason]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Debit Reason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[DOI]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DOI" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[TDNR]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="TDNR" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Passenger Name]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Passenger Name" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Data Flow Task\Script Component"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public excBuffer excBuffer;

    public outBuffer outBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != excBuffer)
        {
            excBuffer.SetEndOfRowset();
            excBuffer = null;
        }

        if (null != outBuffer)
        {
            outBuffer.SetEndOfRowset();
            outBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"exc"))
            {
                excBuffer = new excBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"out"))
            {
                outBuffer = new outBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using FileHelpers;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }
    private bool _exceptionReportCreated = false;
    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try { 
        var Record10 = new AccountInformation_10();
        var Record20 = new PartyInformation_20();
        var rec203s = new List<AccountFreeFormText_203>();
        var Record100 = new PlacementInformation_100();
        var Record810 = new DebitMemo_810();

        string cref = Row.AgentNumber + "-" + Row.ADM;
        string[] address = Row.Address.Split(',');
        string ARENADR = "", ARENCTY = "", ARENST = "", ARENZIP = "", ARENUNT = "", SOL = "";

        if (address.Length == 4)
        {
            ARENADR = address[0].Trim();
            ARENCTY = address[1].Trim();
            ARENST = address[2].Trim();
            ARENZIP = address[3].Trim();
        }
        else if (address.Length == 5)
        {
            ARENADR = address[0].Trim();
            ARENUNT = address[1].Trim();
            ARENCTY = address[2].Trim();
            ARENST = address[3].Trim();
            SOL = ARENST;
            ARENZIP = address[4].Trim();
        }




        Record10.ClientReferenceNumber = cref;
        Record10.SOLAgreementType = "WRITTEN";
        Record10.ListedDate = DateTime.Today;
        Record10.SOLState = SOL;
        Record10.PrincipalInitalBalance = Row.OffsetAmount_IsNull ? 0 : Convert.ToDecimal(Row.OffsetAmount.Replace("$", ""));

        Record20.LastName = Row.AgentName;
        Record20.BusinessName = Row.AgentName;

        Record20.AddressLine = ARENADR;
        Record20.AddressUnit_AptOrPOBox = ARENUNT;
        Record20.City = ARENCTY;
        Record20.State = ARENST;
        Record20.PostalCode = ARENZIP;
        Record20.IsBusiness = true;

        Record100.DateAccountAssigned = getDate(Row.Date);
        Record100.IncomingFileName = Variables.CurrentFile;
        Record100.DateLoaded = DateTime.Today;
        Record100.PlacementLevel = "1";

        add203("MEMO CODE: ", Row.MemoCode, rec203s);
        add203("OFFSET REASON: ", Row.OffsetReason, rec203s);

        Record810.AgencyNumber = cref;
        Record810.AgencyName = Row.AgentName;
        Record810.MemoType = Row.MemoType;

        if (Row.MemoDate_IsNull || string.IsNullOrEmpty(Row.MemoDate) || Row.MemoDate == "UNKNOWN")
        {
            _exceptionReportCreated = true;
            Record20.StatusCode = "HOLD";
            excBuffer.AddRow();
            excBuffer.Data = string.Format("MemoDate is null or UNKNOWN; clientRef: {0}", cref);

        }
        else
        {
            Record810.MemoIssueDate = getDate(Row.MemoDate);

        }

        if (Row.TDNR_IsNull || string.IsNullOrEmpty(Row.TDNR) || Row.TDNR == "UNKNOWN")
        {
            _exceptionReportCreated = true;
            Record20.StatusCode = "HOLD";
            excBuffer.AddRow();
            excBuffer.Data = string.Format("TDNR is null or UNKNOWN; clientRef: {0}", cref);

        }
        else
        {
            Record810.TicketFormSerialNumber = Row.TDNR;

        }

        if (Row.PassengerName_IsNull || string.IsNullOrEmpty(Row.PassengerName) || Row.PassengerName == "UNKNOWN")
        {
            _exceptionReportCreated = true;
            Record20.StatusCode = "HOLD";
            excBuffer.AddRow();
            excBuffer.Data = string.Format("PassengerName is null or UNKNOWN; clientRef: {0}", cref);

        }
        else
        {
            Record810.Passenger = Row.PassengerName;

        }

        if (Row.DOI_IsNull || string.IsNullOrEmpty(Row.DOI) || Row.DOI == "UNKNOWN")
        {
            DateTime doi = DateTime.Today.AddDays(-365);

            Record100.BKEffectiveDate = doi;
            Record10.SOLDate = doi;
            Record10.DelinquencyDate = doi;


        }
        else
        {
            DateTime? doi = getDate(Row.DOI);
            Record100.BKEffectiveDate = doi;
            Record10.SOLDate = doi;
            Record10.DelinquencyDate = doi;
            Record810.TicketIssueDate = doi;
            Record10.ServiceDate = doi;
        }

    } catch(Exception e){

            bool cancel = false;
            ComponentMetaData.FireError(10, "Process Values", e.Message + "-@@-" + e.StackTrace, "", 0, out cancel);
        }
    }

    private string getFormateddate(string str)
    {

        if (!string.IsNullOrEmpty(str))
        {
            str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
            str = str.Length < 8 ? str.Insert(2, "0") : str;

        }


        return str;
    }

    private void add203(string label, string data, List<AccountFreeFormText_203> rec203s)
    {
        if (string.IsNullOrEmpty(data) || data == "0")
            return;

        rec203s.Add(new AccountFreeFormText_203 { FreeFormText = label + data });
    }

    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(getFormateddate(d), "yyyyMMdd", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;


        outBuffer.AddRow();
        outBuffer.Data = recordString.ToUpper();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ADM
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ADM_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String AgentNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool AgentNumber_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String AgentName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool AgentName_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Address
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Address_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String MemoType
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool MemoType_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String MemoCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool MemoCode_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String OffsetAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool OffsetAmount_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String OffsetReason
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool OffsetReason_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String MemoDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool MemoDate_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String DebitReason
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool DebitReason_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String DOI
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool DOI_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String TDNR
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool TDNR_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String PassengerName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool PassengerName_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String Data
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class excBuffer: ScriptBuffer

{
    public excBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class outBuffer: ScriptBuffer

{
    public outBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c311deb46535435fa00a74d091de7058.Properties.Settings.get_Default():SC_c311deb46535435fa00a74d091de7058.Properties.Sett" +
    "ings")]

namespace SC_c311deb46535435fa00a74d091de7058.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c311deb46535435fa00a74d091de7058.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EE816294-EFB8-40E4-AB72-FCABBFB03000}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_c311deb46535435fa00a74d091de7058</RootNamespace>
    <AssemblyName>SC_c311deb46535435fa00a74d091de7058</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="FileHelpers, Version=3.2.7.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Software\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.1.0.0, Culture=neutral, PublicKeyToken=fa0ced4a4551a782, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Software\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_c311deb46535435fa00a74d091de7058</msb:CodeName>
		<msb:DisplayName>SC_c311deb46535435fa00a74d091de7058</msb:DisplayName>
		<msb:ProjectId>{DF3DCEE0-E78C-41E5-8537-596EC300857E}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_c311deb46535435fa00a74d091de7058.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_c311deb46535435fa00a74d091de7058")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_c311deb46535435fa00a74d091de7058")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c311deb46535435fa00a74d091de7058.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c311deb46535435fa00a74d091de7058.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_c311deb46535435fa00a74d091de7058.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_c311deb46535435fa00a74d091de7058.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_c311deb46535435fa00a74d091de7058.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_c311deb46535435fa00a74d091de7058.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGrXG2EAAAAAAAAAAOAAIiALATAAADAAAAAIAAAAAAAAkk4A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEBOAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAmC4AAAAgAAAAMAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAAyAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB0
TgAAAAAAAEgAAAACAAUAkCoAAPgiAAABAAAAAAAAAIhNAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqkgIoEQAACgJ7AQAABC0VAnsCAAAEbz8AAAZv
EgAACigTAAAKKgAAABswBwA2BAAAAQAAEXMUAAAKCnMVAAAKC3MWAAAKDHMXAAAKDXMYAAAKEwQD
bw4AAAZyAQAAcANvDAAABigZAAAKEwUDbxIAAAYXjScAAAElFh8snW8aAAAKEwZyBQAAcBMHcgUA
AHATCHIFAABwEwlyBQAAcBMKcgUAAHATC3IFAABwEwwRBo5pGjMuEQYWmm8bAAAKEwcRBheabxsA
AAoTCBEGGJpvGwAAChMJEQYZmm8bAAAKEworQhEGjmkbMzsRBhaabxsAAAoTBxEGF5pvGwAAChML
EQYYmm8bAAAKEwgRBhmabxsAAAoTCREJEwwRBhqabxsAAAoTCgYRBX0cAAAKBnIHAABwfR0AAAoG
KB4AAApzHwAACn0gAAAKBhEMfSEAAAoGA28ZAAAGLRwDbxgAAAZyFwAAcHIFAABwbyIAAAooIwAA
CisFfiQAAAp9JQAACgcDbxAAAAZ9JgAACgcDbxAAAAZ9JwAACgcRB30oAAAKBxELfSkAAAoHEQh9
KgAACgcRCX0rAAAKBxEKfSwAAAoHF30tAAAKCQIDbwoAAAYoBgAABn0uAAAKCQJ7AwAABG9BAAAG
fS8AAAoJKB4AAApzHwAACn0wAAAKCXIbAABwfTEAAAoCch8AAHADbxYAAAYIKAUAAAYCcjcAAHAD
bxoAAAYIKAUAAAYRBBEFfTIAAAoRBANvEAAABn0zAAAKEQQDbxQAAAZ9NAAACgNvHQAABi0fA28c
AAAGKDUAAAotEgNvHAAABnJXAABwKDYAAAosNgIXfQEAAAQHcmcAAHB9NwAACgJ7BAAABG8tAAAG
AnsEAAAEcnEAAHARBSg4AAAKbysAAAYrExEEAgNvHAAABigGAAAGfTkAAAoDbyMAAAYtHwNvIgAA
Big1AAAKLRIDbyIAAAZyVwAAcCg2AAAKLDYCF30BAAAEB3JnAABwfTcAAAoCewQAAARvLQAABgJ7
BAAABHLJAABwEQUoOAAACm8rAAAGKw0RBANvIgAABn06AAAKA28lAAAGLR8DbyQAAAYoNQAACi0S
A28kAAAGclcAAHAoNgAACiw2Ahd9AQAABAdyZwAAcH03AAAKAnsEAAAEby0AAAYCewQAAARyGQEA
cBEFKDgAAApvKwAABisNEQQDbyQAAAZ9OwAACgNvIQAABi0fA28gAAAGKDUAAAotEgNvIAAABnJX
AABwKDYAAAosQigeAAAKEw4SDiMAAAAAANB2wCg8AAAKEw0JEQ1zHwAACn09AAAKBhENcx8AAAp9
PgAACgYRDXMfAAAKfT8AAAorNwIDbyAAAAYoBgAABhMPCREPfT0AAAoGEQ99PgAACgYRD30/AAAK
EQQRD31AAAAKBhEPfUEAAAreORMQFhMRAihCAAAKHwpyewEAcBEQb0MAAApymQEAcBEQb0QAAAoo
GQAACnIFAABwFhIRb0UAAAreACoAAEEcAAAAAAAAAAAAAPwDAAD8AwAAOQAAABYAAAETMAMAUQAA
AAAAAAADKDUAAAotRwNvRgAACh4vFAMWF29HAAAKcqMBAHAoSAAACi0DAysLcqMBAHADKEkAAAoQ
AQNvRgAACh4yAwMrDAMYcqMBAHBvSgAAChABAyq+BCg1AAAKLQ0EcqMBAHAoNgAACiwBKgVzSwAA
CiUDBChJAAAKfUwAAApvTQAACioAAAATMAUAMwAAAAIAABFypwEAcHNOAAAKCgIDKAQAAAZyswEA
cAYWEgEoTwAACiwHB3MfAAAKKhIC/hUCAAAbCCoAEzAFAK8AAAADAAARc1AAAAolA29RAAAKKAEA
ACsKBheNJwAAASUWHyydbxoAAAoWmgZyBQAAcG8iAAAKcsUBAHByBQAAcG8iAAAKctEBAHByBQAA
cG8iAAAKctUBAHByBQAAcG8iAAAKcqMBAHByBQAAcG8iAAAKctkBAHByBQAAcG8iAAAKct0BAHBy
BQAAcG8iAAAKKFMAAAosASoCewUAAARvMwAABgJ7BQAABAZvVAAACm8xAAAGKh4CKDYAAAYqKgID
BAUoVQAACipSAntWAAAKAntXAAAKFpRvWAAACioiAhYoWQAACipSAntWAAAKAntXAAAKF5RvWAAA
CioiAhcoWQAACipSAntWAAAKAntXAAAKGJRvWAAACioiAhgoWQAACipSAntWAAAKAntXAAAKGZRv
WAAACioiAhkoWQAACipSAntWAAAKAntXAAAKGpRvWAAACioiAhooWQAACipSAntWAAAKAntXAAAK
G5RvWAAACioiAhsoWQAACipSAntWAAAKAntXAAAKHJRvWAAACioiAhwoWQAACipSAntWAAAKAntX
AAAKHZRvWAAACioiAh0oWQAACipSAntWAAAKAntXAAAKHpRvWAAACioiAh4oWQAACipWAntWAAAK
AntXAAAKHwmUb1gAAAoqJgIfCShZAAAKKlYCe1YAAAoCe1cAAAofCpRvWAAACiomAh8KKFkAAAoq
VgJ7VgAACgJ7VwAACh8LlG9YAAAKKiYCHwsoWQAACipWAntWAAAKAntXAAAKHwyUb1gAAAoqJgIf
DChZAAAKKlYCe1YAAAoCe1cAAAofDZRvWAAACiomAh8NKFkAAAoqKgIfDgMoWgAACipeAywJAh8O
KFsAAAoqcuEBAHBzXAAACnoeAihdAAAKKh4CKF4AAAoqJgIWAyhaAAAKKloDLAgCFihbAAAKKnLh
AQBwc1wAAAp6HgIoXwAACioeAihgAAAKKn4CKGEAAAoCAnM+AAAGfQIAAAQCAnNAAAAGfQMAAAQq
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
AACGGDQLCQENAF8oAAAAAIYIngEQABAAaSgAAAAAhgiZB/sBEQCAKAAAAACGAE4OBgASAIgoAAAA
AIYAMA0GABIAVygAAAAAhgAzDSsBEgBzJgAAAACGGDQLCQESAF8oAAAAAIYIngEQABUAaSgAAAAA
hgiZB/sBFgCAKAAAAACGAE4OBgAXAIgoAAAAAIYAMA0GABcAVygAAAAAhgAzDSsBFwCQKAAAAACG
GDQLBgAXALAoAAAAAMYA5A0AAhcACykAAAAAxgHTDAYAGwANKQAAAACBAAQCBgAbAEQpAAAAAMYA
8Q0KAhsACykAAAAAxgHhDAYAHwC3KQAAAADGAd0N0wEfAAspAAAAAMYBZQ7TASAAyikAAAAAhhg0
CxYCIQDZKQAAAACGCC0JVQEiAPopAAAAAIYYNAsWAiIACSoAAAAAhgjvAhwAIwAvKgAAAACDGDQL
BgAjADcqAAAAAJMInQocAiMAYyoAAAAAkwjXAyICIwBqKgAAAACTCOMDJwIjAHIqAAAAAJYIRQ0t
AiQAeSoAAAAAhhg0CwYAJACBKgAAAACRGDoLMgIkAAAAAQCADgAAAQBBCwAAAQAYBwAAAgC9AQAA
AwBFCwAAAQBJAgAAAQBEAgAAAQCWCgAAAgBnDAAAAwCwCQAAAQCuBgAAAQCuBgAAAQCWCgAAAgBn
DAAAAwCwCQAAAQCuBgAAAQCuBgAAAQCWCgAAAgBnDAAAAwCwCQAAAQCuBgAAAQCuBgAAAQBlAQAA
AgBGAwAAAwCWCgAABACwCQAAAQDZDAAAAgBNCwAAAwCoDAAABACwCQAAAQCWCgAAAQCADgAAAQB1
DQAAAQB1DQAAAQCuBgkANAsBABEANAsGABkANAsKACkANAsQADEANAsQADkANAsQAEEANAsQAEkA
NAsQAFEANAsQAFkANAsQAGEANAsQAGkANAsGAPkANAsGABEBNAsVACEBNAsGAOEAlwYGAOEAogYG
APEA2gYcACkB8gQgAHEANAsGAHkANAsGAAwANAsGAJEANAsGAJkANAsGADEB/QxTADEBPw1aADEB
tQgcAHEABgphAHEAxgNhAKEAmw5kABQANAtwAHEAWgR2AHEA1ARhADEBSwJ+AEEBDgeEAEkBnQmL
AHEAdQKLAHkAPQNhAHkAIgNhAHkAfwNhAHkAhA5hAHkAsg5hAHkA7ARhAHkAnAJhAHkAvAyQAJEA
GAJ2AJEA/wJhAJEA6gF2AJEANAdhAJkAQwphAJkAawNhAJkAvQNhADEB0Q6TADEBtw6YAHkAtAJh
ADEBBA2eAJkAcQR2AJkAHAphAJkAxwphAKEA9QykAJEAjwR2AHEASQR2AHEAtAR2AJkAfwR2AHEA
ZQR2AOEApwGqALEAvwIcALEAZgIcAFEBKguwADEBAwe7ADEB+Qa/ADEBww6YADEB/QzFADEBrQ3L
AIkANAsGAIkA/Q1hAAwA5gFwALkANAsQAKEACw3eABwANAsGABwA5gFwAGkBzgb4ADEBUwKTADEB
0QocAMkANAsJAckAlgoTAckAZwwXAdEA7wYbAckAjQggAckApQglAckAlAgBAHkBNAsQAMkAfA4r
AckAMw0rAckATg4GAMkAMA0GAOEANAsGADEBlQwvAeEAeww3AdEAIA0rAeEAbQFBAekANAsGAFEB
DQlIAYkBUANOAZEBsQpVAeEAQgxaAZkBnAhgAeEAOQ5nAaEBCg5tAbkB3QJ0AbkBpQ59AQEBNAuD
ARkBNAsGAC4ACwBTAi4AEwBcAi4AGwB7Ai4AIwCEAi4AKwCtAi4AMwCtAi4AOwCtAi4AQwCEAi4A
SwCzAi4AUwCtAi4AWwDKAkMAYwASAyMBawASA2EBewASA6kEcwB7AskEcwB7AiUA0QDtAD0BAwAB
AAQAHwAFACEABwAjAAgAJAAJACUACgAnAAAAvwQ2AgAAFwg6AgAAhQE2AgAAfgc6AgAANwo2AgAA
Vgg6AgAAMwM2AgAA2gc6AgAAyww2AgAAbQg6AgAAvQM2AgAA7wc6AgAAqwI2AgAArQc6AgAAgw02
AgAAgAg6AgAAYwk2AgAAJwg6AgAAowQ2AgAAEwg6AgAAdAk2AgAAPwg6AgAAfQE2AgAAbwc6AgAA
lwE2AgAAjQc6AgAAFAM2AgAAwQc6AgAAuAE2AgAAnQc6AgAAuAE2AgAAnQc6AgAAuAE2AgAAnQc6
AgAAMQk+AgAA8wI2AgAAoQpDAgAA9wNJAgAASQ1OAgIACgADAAIACwAFAAIADAAHAAIADQAJAAIA
DgALAAIADwANAAIAEAAPAAIAEQARAAIAEgATAAIAEwAVAAIAFAAXAAIAFQAZAAIAFgAbAAIAFwAd
AAIAGAAfAAIAGQAhAAIAGgAjAAIAGwAlAAIAHAAnAAIAHQApAAIAHgArAAIAHwAtAAIAIAAvAAIA
IQAxAAIAIgAzAAIAIwA1AAIAJAA3AAIAJQA5AAEAJgA7AAEAJwA9AAEAKwA/AAEALABBAAEAMQBD
AAEAMgBFAAIAPwBHAAIAQQBJAAIAQwBLAAIARABNAAEARQBNAAIARgBPAEwAaQDxAASAAAABAAAA
2x6VUQAAAAAAADgBAAAEAAAAAAAAAAAAAACLAcIBAAAAAAsAAAAAAAAAAAAAAJQBkA0AAAAAAQAB
AAAAAAAAAAAAnQEwBAAAAAALAAAAAAAAAAAAAACUAbwNAAAAAAsAAAAAAAAAAAAAAJQBugkAAAAA
BAAAAAAAAAAAAAAAiwGuCAAAAAALAAAAAAAAAAAAAACUAd0JAAAAAAMAAgAHAAAAAAAAAKYBsAwA
AAAAAAAAAAEAAADBCwAAAAAAAA8AnAGlAAQBAQBhAAAAAAAAUGxhY2VtZW50SW5mb3JtYXRpb25f
MTAwAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5l
Y3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAA
RGViaXRNZW1vXzgxMABBY2NvdW50SW5mb3JtYXRpb25fMTAAUGFydHlJbmZvcm1hdGlvbl8yMABO
dWxsYWJsZWAxAElFbnVtZXJhYmxlYDEATGlzdGAxAEFjY291bnRGcmVlRm9ybVRleHRfMjAzAGFk
ZDIwMwBTQ19jMzExZGViNDY1MzU0MzVmYTAwYTc0ZDA5MWRlNzA1OAA8TW9kdWxlPgBJbnB1dElE
AEdldE91dHB1dElEAGdldF9ET0kAZ2V0X0FETQBTeXN0ZW0uSU8AZ2V0X1RETlIAVABzZXRfRGF0
YQBnZXRfQ29tcG9uZW50TWV0YURhdGEAZGF0YQBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMu
R2VuZXJpYwBBZGQARGF0ZUxvYWRlZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0ZpbmlzaGVk
AERhdGVBY2NvdW50QXNzaWduZWQAX2V4Y2VwdGlvblJlcG9ydENyZWF0ZWQAcmVjb3JkAFJlcGxh
Y2UASXNOdWxsT3JXaGl0ZVNwYWNlAGdldF9TdGFja1RyYWNlAFByaW5jaXBhbEluaXRhbEJhbGFu
Y2UAZGVmYXVsdEluc3RhbmNlAFBvc3RhbENvZGUAZ2V0X01lbW9Db2RlAFN0YXR1c0NvZGUAZ2V0
X01lc3NhZ2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0N1cnJlbnRG
aWxlAEluY29taW5nRmlsZU5hbWUAZ2V0X1Bhc3Nlbmdlck5hbWUAQnVzaW5lc3NOYW1lAGdldF9B
Z2VudE5hbWUATGFzdE5hbWUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAEFn
ZW5jeU5hbWUARGF0ZVRpbWUAQWRkcmVzc0xpbmUAQ29tbW9uRW5naW5lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAGdldF9NZW1vVHlwZQBTT0xBZ3JlZW1lbnRUeXBlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBHZW5lcmFsUHVycG9zZVJlY29yZEJhc2UA
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlAFNPTERhdGUA
Z2V0X0RhdGUATGlzdGVkRGF0ZQBTZXJ2aWNlRGF0ZQBNZW1vSXNzdWVEYXRlAFRpY2tldElzc3Vl
RGF0ZQBCS0VmZmVjdGl2ZURhdGUAZ2V0X01lbW9EYXRlAGdldERhdGUARGVsaW5xdWVuY3lEYXRl
AGdldEZvcm1hdGVkZGF0ZQBTT0xTdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBEZWxldGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFdyaXRlU3RyaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAEdldFN0cmluZwBTdWJz
dHJpbmcAZ2V0X0xlbmd0aABUb0RlY2ltYWwAbGFiZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFBs
YWNlbWVudExldmVsAFNDX2MzMTFkZWI0NjUzNTQzNWZhMDBhNzRkMDkxZGU3MDU4LmRsbABnZXRf
RE9JX0lzTnVsbABnZXRfQURNX0lzTnVsbABnZXRfVEROUl9Jc051bGwAc2V0X0RhdGFfSXNOdWxs
AGdldF9NZW1vQ29kZV9Jc051bGwAZ2V0X1Bhc3Nlbmdlck5hbWVfSXNOdWxsAGdldF9BZ2VudE5h
bWVfSXNOdWxsAGdldF9NZW1vVHlwZV9Jc051bGwAZ2V0X0RhdGVfSXNOdWxsAGdldF9NZW1vRGF0
ZV9Jc051bGwAZ2V0X09mZnNldFJlYXNvbl9Jc051bGwAZ2V0X0RlYml0UmVhc29uX0lzTnVsbABn
ZXRfQWdlbnROdW1iZXJfSXNOdWxsAGdldF9BZGRyZXNzX0lzTnVsbABnZXRfT2Zmc2V0QW1vdW50
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAHJlc291cmNlTWFu
AFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lz
dGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBnZXRfRXhjZXB0
aW9uQ29ubmVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAGdldF9PZmZzZXRSZWFzb24A
Z2V0X0RlYml0UmVhc29uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AWmVybwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAENoYXIAQ2xpZW50UmVmZXJlbmNlTnVtYmVy
AFRpY2tldEZvcm1TZXJpYWxOdW1iZXIAZ2V0X0FnZW50TnVtYmVyAEFnZW5jeU51bWJlcgBJRm9y
bWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAGV4Y0J1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRC
dWZmZXIAb3V0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2Vy
AFBhc3NlbmdlcgBUb1VwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBl
cgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAEZpcmVFcnJvcgAuY3Rv
cgAuY2N0b3IAc3RyAHJlYzIwM3MAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBSR1MuQXJ0
aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19jMzExZGViNDY1MzU0MzVmYTAwYTc0ZDA5MWRlNzA1
OC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYzMxMWRl
YjQ2NTM1NDM1ZmEwMGE3NGQwOTFkZTcwNTguUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJs
ZXMARGF0ZVRpbWVTdHlsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNl
dHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBCdWZmZXJzAEZpbGVIZWxwZXJzAElzQnVzaW5lc3MA
Z2V0X0FkZHJlc3MARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAEFkZERheXMAQ29u
Y2F0AEZvcm1hdABUcnlQYXJzZUV4YWN0AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZS
b3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2Ny
aXB0Q29tcG9uZW50AGdldF9PZmZzZXRBbW91bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlw
dABJbnNlcnQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBf
UHJvY2Vzc0lucHV0AFByaW1lT3V0cHV0AEZyZWVGb3JtVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0
AFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBB
ZGRQbGFjZW1lbnRSb3cASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AEFkZHJlc3NVbml0
X0FwdE9yUE9Cb3gAZ2V0X1RvZGF5AGdldF9Bc3NlbWJseQBDaXR5AG9wX0VxdWFsaXR5AG9wX0lu
ZXF1YWxpdHkASXNOdWxsT3JFbXB0eQAAAAMtAAEBAA9XAFIASQBUAFQARQBOAAADJAAAAzEAABdN
AEUATQBPACAAQwBPAEQARQA6ACAAAB9PAEYARgBTAEUAVAAgAFIARQBBAFMATwBOADoAIAAAD1UA
TgBLAE4ATwBXAE4AAAlIAE8ATABEAABXTQBlAG0AbwBEAGEAdABlACAAaQBzACAAbgB1AGwAbAAg
AG8AcgAgAFUATgBLAE4ATwBXAE4AOwAgAGMAbABpAGUAbgB0AFIAZQBmADoAIAB7ADAAfQAAT1QA
RABOAFIAIABpAHMAIABuAHUAbABsACAAbwByACAAVQBOAEsATgBPAFcATgA7ACAAYwBsAGkAZQBu
AHQAUgBlAGYAOgAgAHsAMAB9AABhUABhAHMAcwBlAG4AZwBlAHIATgBhAG0AZQAgAGkAcwAgAG4A
dQBsAGwAIABvAHIAIABVAE4ASwBOAE8AVwBOADsAIABjAGwAaQBlAG4AdABSAGUAZgA6ACAAewAw
AH0AAB1QAHIAbwBjAGUAcwBzACAAVgBhAGwAdQBlAHMAAAktAEAAQAAtAAEDMAAAC2UAbgAtAFUA
UwABEXkAeQB5AHkATQBNAGQAZAAAC0MATwBNAEEASwAAAywAAAMuAAADLwAAA04AAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAB2UAeABj
AAAHbwB1AHQAACdFAHgAYwBlAHAAdABpAG8AbgBDAG8AbgBuAGUAYwB0AGkAbwBuAAAXQwB1AHIA
cgBlAG4AdABGAGkAbABlAABxUwBDAF8AYwAzADEAMQBkAGUAYgA0ADYANQAzADUANAAzADUAZgBh
ADAAMABhADcANABkADAAOQAxAGQAZQA3ADAANQA4AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAAC4RSmiTAVqSZXPtonQryZ4AAQgAQEIAyAAAQUgAQEREQQgAQEOBiAB
ARGAhQMgAA4EAAEBDiYHEhI5Ej0VEkEBEkUSSRJNDh0ODg4ODg4OEVERURURVQERURJZAgYVEkEB
EkUGAAMODg4OBiABHQ4dAwIGDgQAABFRBhURVQERUQUgAQETAAcGFRFVARFRBSACDg4OBgABEYCl
DgQGEYClAgYCBAABAg4FAAICDg4FAAIODhwFIAERUQ0FIAASgKkKIAYBCA4ODggQAgMgAAgFIAIO
CAgFAAIODg4FIAIOCA4MBwMSXRFRFRFVARFRDgAFAg4OEoCtEYCxEBFRAwcBDgYVEkEBHgALEAEB
DhUSgLkBHgAECgEeAAkgAwESaR0IEm0DBhJpAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACByACAg4R
gMEFIAEdCAgDBwEIBgACCBJtDgUgABKAxQYgARKAyQ4EIAASeQUgABKAzQYgARKA0RwFAAASgNUG
IAEcEoDZCAABEoDdEYDhBSAAEoDlByACAQ4SgOUIt3pcVhk04IkIiYRdzYCAzJEI+gztSkVRp4II
PgwI1ZzD1lcDBhIcAwYSIAMGEhADBhIUAgYIAwYScQQGEoCBAwYSXQMGEigFIAEBEgwEIAEODgsg
AwEODhUSQQESRQkgARURVQERUQ4GMAEBAR4ABCABAQIJIAQBCA4SaRJtCyAEAQgdCB0SaRJtBSAB
ARJxBQAAEoCBBAAAEl0FAAEBEl0EAAASKAMAAAEDKAAOAygAAgQoABJ5BQgAEoCBBAgAEl0ECAAS
KAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
YzMxMWRlYjQ2NTM1NDM1ZmEwMGE3NGQwOTFkZTcwNTgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAyMQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3Vy
Y2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5l
dXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5S
dW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGhOAAAAAAAAAAAAAIJOAAAA
IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB0TgAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUu
ZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
AJVR2x4AAAEAlVHbHj8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AYwAzADEA
MQBkAGUAYgA0ADYANQAzADUANAAzADUAZgBhADAAMABhADcANABkADAAOQAxAGQAZQA3ADAANQA4
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcAOAA5ADkALgAyADAA
OAA4ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AYwAzADEAMQBk
AGUAYgA0ADYANQAzADUANAAzADUAZgBhADAAMABhADcANABkADAAOQAxAGQAZQA3ADAANQA4AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAyADEAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBj
ADMAMQAxAGQAZQBiADQANgA1ADMANQA0ADMANQBmAGEAMAAwAGEANwA0AGQAMAA5ADEAZABlADcA
MAA1ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYwAz
ADEAMQBkAGUAYgA0ADYANQAzADUANAAzADUAZgBhADAAMABhADcANABkADAAOQAxAGQAZQA3ADAA
NQA4AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADgAOQA5
AC4AMgAwADgAOAA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADgAOQA5AC4AMgAwADgAOAA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAJQ+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c311deb46535435fa00a74d091de7058</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::CurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">e94c6d191d7a6debe0f6a5fd3c118591</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">4f0996af5629c2da362a93b79382d75e1fcfed4e</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception]"
                      name="ExceptionConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[ADM]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="ADM"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[ADM]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Agent Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Agent Number"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Number]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Agent Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Agent Name"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Agent Name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="Address"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Address]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Memo Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Memo Type"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Memo Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Memo Code"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Offset Amount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Offset Amount"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Amount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Offset Reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Offset Reason"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Offset Reason]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Memo Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Memo Date"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Memo Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Debit Reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Debit Reason"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Debit Reason]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[DOI]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DOI"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[DOI]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[TDNR]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="TDNR"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[TDNR]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0].Columns[Passenger Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Passenger Name"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output].Columns[Passenger Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[Output 0].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[exc]"
                      hasSideEffects="true"
                      name="exc">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[exc].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[exc].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[out]"
                      hasSideEffects="true"
                      name="out">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[out].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[out].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[exc]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1.Inputs[Flat File Destination Input]"
                  name="exc"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[exc]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Script Component.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Data Flow Task\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Data Flow Task.Paths[out]"
                  endId="Package\Foreach Loop Container\Data Flow Task\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="out"
                  startId="Package\Foreach Loop Container\Data Flow Task\Script Component.Outputs[out]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{A517DDDE-0D66-4ED0-9AE3-7BFD2EA2B1D9}"
          DTS:ObjectName="{A517DDDE-0D66-4ED0-9AE3-7BFD2EA2B1D9}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{AB3E30BA-8956-45B7-9B01-5AD3CEC5918B}"
      DTS:From="Package\Convert Excel file to tsv"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="190,42"
          Id="Package\Convert Excel file to tsv"
          TopLeft="174.999997392297,58.8421063707146" />
        <NodeLayout
          Size="153.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task"
          TopLeft="59.6666630158822,34.9210531853573" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="284,132.666666666667"
          Size="284,175.333333333334"
          Id="Package\Foreach Loop Container"
          TopLeft="185.624997233972,145.052634309203" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="269.999997392297,100.842106370715">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57.6249998416753,44.2105279384887"
              Start="0,0"
              End="57.6249998416753,36.7105279384887">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.1052639692444" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.1052639692444"
                    Point2="0,22.1052639692444"
                    Point3="4,22.1052639692444" />
                  <mssgle:LineSegment
                    End="53.6249998416753,22.1052639692444" />
                  <mssgle:CubicBezierSegment
                    Point1="53.6249998416753,22.1052639692444"
                    Point2="57.6249998416753,22.1052639692444"
                    Point3="57.6249998416753,26.1052639692444" />
                  <mssgle:LineSegment
                    End="57.6249998416753,36.7105279384887" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Script Component"
          TopLeft="220.624996712431,140.947371074037" />
        <NodeLayout
          Size="154.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Source"
          TopLeft="233.749996516854,39.6842112732726" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="307.187496614642,82.3508779399393">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.596493134098"
              Start="0,0"
              End="0,51.096493134098">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.096493134098" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="173.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Destination"
          TopLeft="206.249996926636,264.789478668216" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[out]"
          TopLeft="303.291663379098,183.614037740704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-10.3749997857954,81.175440927512"
              Start="0,0"
              End="-10.3749997857954,73.675440927512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.587720463756" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.587720463756"
                    Point2="0,40.587720463756"
                    Point3="-4,40.587720463756" />
                  <mssgle:LineSegment
                    End="-6.37499978579541,40.587720463756" />
                  <mssgle:CubicBezierSegment
                    Point1="-6.37499978579541,40.587720463756"
                    Point2="-10.3749997857954,40.587720463756"
                    Point3="-10.3749997857954,44.587720463756" />
                  <mssgle:LineSegment
                    End="-10.3749997857954,73.675440927512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.2183787991477,45.587720463756,16.0617578125,9.1728515625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="182.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Data Flow Task\Flat File Destination 1"
          TopLeft="445.62499335967,262.736847050633" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Data Flow Task.Paths[exc]"
          TopLeft="329.51388560132,183.614037740704">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="207.444441091684,79.1228093099289"
              Start="0,0"
              End="207.444441091684,71.6228093099289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.1041430746357" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28.1041430746357"
                    Point2="0,32.1041430746357"
                    Point3="4,32.1041430746357" />
                  <mssgle:LineSegment
                    End="203.444441091684,32.1041430746357" />
                  <mssgle:CubicBezierSegment
                    Point1="203.444441091684,32.1041430746357"
                    Point2="207.444441091684,32.1041430746357"
                    Point3="207.444441091684,36.1041430746357" />
                  <mssgle:LineSegment
                    End="207.444441091684,71.6228093099289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="95.5395838270918,37.1041430746357,16.3652734375,7.732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>