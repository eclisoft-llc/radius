<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/12/2018 7:23:44 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-002"
  DTS:CreatorName="CORP\aaishinsky"
  DTS:DTSID="{F936544A-1DBD-4A76-B978-9550B1B860FB}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.7462.6"
  DTS:LocaleID="1033"
  DTS:ObjectName="IB-Contact Append"
  DTS:PackageType="5"
  DTS:VersionBuild="82"
  DTS:VersionGUID="{90EB71BF-8B9F-40F7-BF69-A44BD22350A7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{5CF800DD-7B7E-49DB-A52C-9D1D5B21FDEB}"
      DTS:ObjectName="Artiva">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Dsn="+ @[$Project::Namespace] +";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Dsn=THIRDMIG2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exception Report]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9B0C6250-CD92-4C0D-B5AC-111CFBB9E5B7}"
      DTS:ObjectName="Exception Report">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::exceptionReportFilename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\Out\ExceptionReport-Philadelphia Gas Works-0.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{8DDE7D77-E39D-431B-ADFD-064A72F5B286}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[IBBktFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0D4E46C5-7095-48B3-B7B8-3D642828E8C5}"
      DTS:ObjectName="IBBktFile">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "In\\" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\In\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{0F6D11E0-0D81-4DC5-B61F-BB20C2B6FB30}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Maintenance File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{9798C347-77FA-4ED1-ACF2-991BF5DC3271}"
      DTS:ObjectName="Maintenance File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "Out\\ArtivaMT-" + @[$Project::Namespace] + "-" + @[$Project::ClientName] + "-" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\Out\ArtivaMT-THIRDMIG2-Philadelphia Gas Works-0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{8DDE7D77-E39D-431B-ADFD-064A72F5B286}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Like *Recall*.txt or whatever the inbound file is"
      DTS:DTSID="{4D7C03E8-4FAE-4548-B803-05D18121B0B8}"
      DTS:ObjectName="InboundFileMask"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">contact_*.txt</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B58F5064-0A7C-436E-AFA6-C0F79B153CB9}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DA01446D-4CB0-4880-98AE-4409F6A7FAF5}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + &quot;Out\\&quot; +  &quot;ExceptionReport-&quot; + @[$Project::ClientName] + &quot;-&quot; +  @[User::currentFile] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exceptionReportFilename">
      <DTS:VariableValue
        DTS:DataType="8">M:\PhiladelphiaGasWorks\Out\ExceptionReport-Philadelphia Gas Works-0.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{4A25F390-81DB-4ECC-BF37-8B803C3A31B1}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{AC520E6E-6513-41FC-9D26-39534C20AE03}"
        DTS:ObjectName="{7F315AC7-562B-4D2F-94CD-BE17D478728F}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::LocalPath] + "In\\"</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\PhiladelphiaGasWorks\In\" />
            <FEFEProperty
              FileSpec="contact_*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Files"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{3B8923B6-DE38-4D6F-85B7-1EAE797703AD}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Files"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Flat File Destination"
                  componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Flat File Source"
                  componentClassID="{D23FD76B-F51D-420F-BBCB-19CBF6AC1AB4}"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[IBBktFile]"
                      connectionManagerRefId="Package.ConnectionManagers[IBBktFile]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          name="Data"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Maintenance File"
                  componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Maintenance File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Maintenance File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Maintenance File]"
                      connectionManagerRefId="Package.ConnectionManagers[Maintenance File]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].Columns[RowData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="RowData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Script Component"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;
using System.Data.Odbc;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _exceptionReportCreated = false;
    OdbcConnection conn = null;

    private List<Comakers_COMAK> comakList;

    public override void PreExecute()
    {
        base.PreExecute();

        comakList = new List<Comakers_COMAK>();

        conn = new OdbcConnection(Connections.ArtivaConnection.ConnectionString);
        conn.Open();
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string[] cols = Row.Data.Split(',');
        if (cols.Length == 0 || cols[0] == "data_id")
            return;

        string data_id = cols[0];
        string pri_acctno = cols[1];
        string contacttype_id = cols[2]; // integer
        string contacttype_name = cols[3];
        string contact_source = cols[4];
        string contact_ssn = cols[5];
        string contact_first = cols[6];
        string contact_middle = cols[7];
        string contact_last = cols[8];
        string contact_name = cols[9];
        string contact_suffix = cols[10];
        string contact_add1 = cols[11];
        string contact_add2 = cols[12];
        string contact_city = cols[13];
        string contact_state = cols[14];
        string contact_zip = cols[15];
        string contact_country = cols[16];
        string contact_hphone = cols[17];
        string contact_wphone = cols[18];
        string contact_cphone = cols[19];
        string contact_fax = cols[20];
        string contact_dob = cols[21]; // date
        string contact_dod = cols[22]; // date
        string contact_other = cols[23];
        string contact_alias = cols[24];
        string contact_email = cols[25];

        string accountID = GetArtivaAccountID(data_id);

        if (string.IsNullOrEmpty(accountID))
        {
            _exceptionReportCreated = true;
            ExceptionReportBuffer.AddRow();
            ExceptionReportBuffer.Data = "EVERSOURCE ACCOUNT NOT FOUND IN ARTIVA, Creditor Internal Consumer Account Number from IB-Contact Append Notice file:  " + data_id;
        }
        else
        {
            DateTime contactDob = DateTime.MinValue;
            DateTime.TryParse(contact_dob, out contactDob);

            DateTime contactDod = DateTime.MinValue;
            DateTime.TryParse(contact_dod, out contactDod);

            if (contacttype_id == "17")
            {
                string[] names = contact_name.Split(new char[] { ' ' });
                string nameFirst = (names.Length == 0) ? contact_first : GetNames(names, 1);
                string nameMiddle = (names.Length == 0) ? contact_middle : GetNames(names, 2);
                string nameLast = (names.Length == 0) ? contact_last : GetNames(names, 3);

                Comakers_COMAK comack = new Comakers_COMAK();
                comack.AccountId = accountID;
                comack.AddressLine = contact_add1;
                comack.AddressUnit_AptOrPOBox = contact_add2;
                //comack.AlternatePhoneFlag = "";
                comack.AlternatePhoneNumber = contact_wphone;
                //comack.BusinessName = "";
                comack.City = contact_city;
                //comack.ClientsEntityID = "";
                comack.Country = contact_country;
                //comack.County = "";
                comack.DateOfBirth = (string.IsNullOrEmpty(contact_dob)) ? new DateTime?() : DateTime.Parse(contact_dob);
                //comack.DriverLicenseNumber = "";
                //comack.DriverLicenseState = "";
                comack.EmailAddress = contact_email;
                comack.FirstName = nameFirst;
                //comack.IsBusiness = "";
                comack.LastName = nameLast;
                comack.MiddleName = nameMiddle;
                comack.PostalCode = contact_zip;
                //comack.PrimaryPhoneFlag = "";
                comack.PrimaryPhoneNumber = contact_hphone;
                comack.RelationshipTypeKey = "COMAK";
                //comack.SecondaryPhoneFlag = "";
                comack.SecondaryPhoneNumber = contact_cphone;
                comack.SocialSecurityNumber = contact_ssn;
                comack.State = contact_state;
                //comack.TaxIDNumber = "";

                // We need to make sure, that duplicate records are not processed...
                var comakToCompare = comakList.Find(x => x.AccountId == comack.AccountId && x.FirstName == comack.FirstName && x.LastName == comack.LastName);
                if (comakToCompare == null)
                {
                    comakList.Add(comack);
                    AddContactRow(comack);
                }
            }
            else
            {
                var contact = new ContactInformation_115();
                contact.ARACIDFiller = accountID;
                contact.ContactTypeId = contacttype_id;
                contact.ContactTypeName = contacttype_name;
                contact.ContactSource = contact_source;
                contact.ContactSsn = contact_ssn;
                contact.ContactFirst = contact_first;
                contact.ContactMiddle = contact_middle;
                contact.ContactLast = contact_last;
                contact.ContactName = contact_name;
                contact.ContactSuffix = contact_suffix;
                contact.ContactAdd1 = contact_add1;
                contact.ContactAdd2 = contact_add2;
                contact.ContactCity = contact_city;
                contact.ContactState = contact_state;
                contact.ContactZip = contact_zip;
                contact.ContactCountry = contact_country;
                contact.ContactHomePhone = contact_hphone;
                contact.ContactWorkPhone = contact_wphone;
                contact.ContactCell = contact_cphone;
                contact.ContactFax = contact_fax;
                contact.ContactDob = contactDob == DateTime.MinValue ? contact.ContactDob : contactDob;
                contact.ContactDod = contactDod == DateTime.MinValue ? contact.ContactDod : contactDod;
                contact.ContactOther = contact_other;
                contact.ContactAlias = contact_alias;
                contact.ContactEmail = contact_email;

                if (contacttype_id == "9" || contacttype_id == "27")
                {
                    string contactName = (contact_name == "Unknown" || contact_name == "0" || contact_name == "-") ? "" : contact_name;

                    string contactNameFirst = (contact_first == "Unknown" || contact_first == "0" || contact_first == "-") ? "" : contact_first;

                    string contactNameMiddle = (contact_middle == "Unknown" || contact_middle == "0" || contact_middle == "-") ? "" : contact_middle;

                    string contactNameLast = (contact_last == "Unknown" || contact_last == "0" || contact_last == "-") ? "" : contact_last;

                    string address = string.Format("{0} {1}", contact_add1, contact_add2).Trim();
                    AddUpd(address, "ARENUNT", accountID);

                    string nameFull = string.Format("{0} {1} {2}", contactNameFirst, contactNameMiddle, contactNameLast);
                    string name = (string.IsNullOrEmpty(nameFull.Trim()) && string.IsNullOrEmpty(contactName.Trim())) ? string.Empty :
                                   string.Format("{0} {1}", (string.IsNullOrEmpty(contactName.Trim()) ? "C/O" : contactName.Trim()), nameFull);
                    AddUpd(name, "ARENADR", accountID);

                    AddUpd(contact_hphone, "ARENPH", accountID);
                    AddUpd(contact_state, "ARENST", accountID);
                    AddUpd(contact_city, "ARENCTY", accountID);
                    AddUpd(contact_wphone, "ARENPH2", accountID);
                    AddUpd(contact_zip, "ARENZIP", accountID);
                }
                else
                    AddContactRow(contact);
            }
        }
    }

    private string GetNames(string[] names, int nameType)
    {
        string name = string.Empty;

        switch (nameType)
        {
            case 1:
                name = names[0];

                break;
            case 2:
                if (names.Length > 2)
                    name = names[1];

                break;
            case 3:
                if (names.Length == 2)
                    name = names[1];
                else if (names.Length > 2)
                {
                    for (int i = 2; i < names.Length; i++)
                        name += names[i];
                }

                break;
        }

        return name.Trim();
    }

    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionReportConnection.ConnectionString);

        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }
    }

    private string GetArtivaAccountID(string dataID)
    {
        string accountID = "";

        if (conn.State != ConnectionState.Open)
            conn.Open();

        string query = @"SELECT ARACID
                            FROM %STARTTABLE ARCLIENT
                            INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN " + Variables.ClientIDs + @"
                            INNER JOIN ARENTITY ON ARACCOUNT.ARACRPID = ARENID
                            LEFT JOIN ZZBANKRUPTCY ON ZZBKENID = ARENID
                            WHERE ARACCOUNT.ZZACCREDINTCONSACNUM = '" + dataID + "'";

        using (var command = new OdbcCommand(query, conn))
        using (var reader = command.ExecuteReader())
            if (reader.Read())
                accountID = reader["ARACID"].ToString();

        return accountID;
    }

    private void AddContactRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        MaintenanceBuffer.AddRow();
        MaintenanceBuffer.RowData = recordString.ToUpper();
    }

    private void AddUpd(string s, string fieldName, string acount)
    {
        UpdateAccount_UPD u = new UpdateAccount_UPD();

        if (!string.IsNullOrEmpty(s))
        {
            u = new UpdateAccount_UPD();
            u.AccountId = acount;
            u.UpdateField = fieldName;
            u.UpdateValue = s;

            AddContactRow(u);
        }
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Data_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class MaintenanceBuffer: ScriptBuffer

{
    public MaintenanceBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RowData
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OBRecallBuffer: ScriptBuffer

{
    public OBRecallBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PlacementID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool PlacementID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Balance
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Balance_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Proof
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Proof_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Code
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AccountID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AccountID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionReportBuffer: ScriptBuffer

{
    public ExceptionReportBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public MaintenanceBuffer MaintenanceBuffer;

    public OBRecallBuffer OBRecallBuffer;

    public ExceptionReportBuffer ExceptionReportBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != MaintenanceBuffer)
        {
            MaintenanceBuffer.SetEndOfRowset();
            MaintenanceBuffer = null;
        }

        if (null != OBRecallBuffer)
        {
            OBRecallBuffer.SetEndOfRowset();
            OBRecallBuffer = null;
        }

        if (null != ExceptionReportBuffer)
        {
            ExceptionReportBuffer.SetEndOfRowset();
            ExceptionReportBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Maintenance"))
            {
                MaintenanceBuffer = new MaintenanceBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OBRecall"))
            {
                OBRecallBuffer = new OBRecallBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ExceptionReport"))
            {
                ExceptionReportBuffer = new ExceptionReportBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionReportConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionReportConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ArtivaConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ArtivaConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientIDs
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDs"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String currentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["currentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1E1BB231-0F5C-4B88-AC85-23CFF8D6CA4E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bc348bdf97b24b838db1fde0d27eeacc</RootNamespace>
    <AssemblyName>SC_bc348bdf97b24b838db1fde0d27eeacc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug69f0c553-a873-4e65-9bef-96448dc43240/6f2bd1e1-55c8-4a14-93a4-d15a5f6753db&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Settings.get_Default():SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Sett" +
    "ings")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{43C3A275-A769-46E8-AC3F-179A9FF6ADCC}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:CodeName>
		<msb:DisplayName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_bc348bdf97b24b838db1fde0d27eeacc.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
AnsKAAAEb3YAAApvdwAACnIBBgBwb3gAAApveQAACio6AigYAAAKAgN9CwAABCqWAnsLAAAEb3oA
AApyIwYAcG97AAAKKHwAAApvfQAACnQbAAABKpYCewsAAARvegAACnI3BgBwb3sAAAoofAAACm99
AAAKdBsAAAEqHgIoGAAACioAEzACAC0AAAAHAAARfgwAAAQtIHJPBgBw0AoAAAIofwAACm+AAAAK
c4EAAAoKBoAMAAAEfgwAAAQqGn4NAAAEKh4CgA0AAAQqGn4OAAAEKi5zOwAABoAOAAAEKh4CKIMA
AAoqALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAwDQAA
I34AAJwNAADUEAAAI1N0cmluZ3MAAAAAcB4AAMQGAAAjVVMANCUAABAAAAAjR1VJRAAAAEQlAACI
AwAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJHwAAAPolMwAWAAABAAAAPAAAAAwAAAAPAAAAPgAAADAA
AACDAAAAEAAAAAcAAAAIAAAAFwAAABgAAAAEAAAAAQAAAAoAAAABAAAAAQAAAAEAAAAEAAAAAQAA
AAAACgABAAAAAAAGACUBBAEGADUBBAEKAFIBSwEOAG4BWQESALwBBAEGAMsBBAEWAIgCdwIKALcC
nAIaAP0C1wIaAFcD1wIKACoESwEeAJEFaQUKAE0GPAYKAH4GaQYKAKEHhwcKAMwHugcKAOMHugcK
AAAIugcKAB8IugcKADgIugcKAFEIugcKAGwIugcKAIcIugcKAKAIugcKANkIuQgKAPkIuQgKADsJ
SwEKAEIJSwEGAIcJBAEWANYJwwkKAEoKSwEKAGoKSwEKANAKSwEKAGELSwEaAHYL1wIKAO8M5QwO
AH0HAQ0WAB8NawIWADkNdwIWAEUNdwIWAGINwwkKAIYNSwEiAJ4Nkg0mAKsNnAIaAM0N1wIKAPcN
uQgKADQOSwEqAJsOcg4qAMoOcg4qAA0Pcg4eAFcPaQUeAH4PaQUHAI4PAAAeAL4PaQUKAP0P6g8K
ABoQSwEKAB8QSwEKAEMQugcOAFkQAQ0OAHIQAQ0AAAAAAQAAAAAAAQABAAEAEAAyAAAABQABAAEA
AQAQAEAAAAAIAAcACQABABAASwAAAAkACgARAAEAEABYAAAACQAKABYAAQAQAGoAAAAJAAoAHAAB
ABAAeQAAAAkACgAqAAEAEACPAAAADQAKADAAAQAQAJsAAAANAAsAMwAAABAApQCvAA0ADAA2AAAB
EADeAK8AEQAOADoAAwEQAOgJAAANAA8APQAGAI8AEwAGAJsAFwAGAFgAHwAGAGoAIwAGAHkAJwAB
AIwBKwABAFMCSgABAJcCTQABAAwDWgABADYFqwABADYFqwARAF0GvwARAIoGwwARAM4G4QAGAPsJ
GAFQIAAAAACGGIYBGwABAHAgAAAAAMYA2QEuAAEAyyAAAAAAxgHmARsABQDQIAAAAACBAPQBGwAF
ACwhAAAAAMYACAI4AAUAzyEAAAAAxgEUAhsACQDRIQAAAADGASgCRAAJAOQhAAAAAMYBPAJEAAoA
5iEAAAAAxgAWAxsACwCAIgAAAADGADwCRAALAGwoAAAAAIEAIQNiAAwA3CgAAAAAxgAqAxsADgAs
KQAAAACBADYDaQAOAPwpAAAAAIEASQNuAA8APCoAAAAAgQByA3UAEAB5KgAAAACGGIYBGwATAIEq
AAAAAIYYhgF8ABMAjCoAAAAAhgh5A4YAFgChKgAAAACGCIIDigAWAKoqAAAAAIYAkgOKABYAsioA
AAAAhgCaA4oAFgC6KgAAAACGGIYBfAAWAMUqAAAAAIYItwOWABkAzyoAAAAAhgjDA5sAGgDmKgAA
AACGANYDGwAbAO4qAAAAAIYA3QMbABsA9ioAAAAAhgCaA4oAGwD+KgAAAACGGIYBfAAbAAkrAAAA
AIYIAwSWAB4AEysAAAAAhggTBJsAHwAqKwAAAACGCDIEoAAgADkrAAAAAIYIPgSbACEAUCsAAAAA
hghRBJYAIgBaKwAAAACGCFsEmwAjAHErAAAAAIYIbASWACQAeysAAAAAhgh1BJsAJQCSKwAAAACG
CIUElgAmAJwrAAAAAIYIkwSbACcAsysAAAAAhgDWAxsAKAC7KwAAAACGAN0DGwAoAMMrAAAAAIYA
mgOKACgAyysAAAAAhhiGAXwAKADWKwAAAACGCB0FlgArAOArAAAAAIYIJgWbACwA9ysAAAAAhgDW
AxsALQD/KwAAAACGAN0DGwAtAAcsAAAAAIYAmgOKAC0ADywAAAAAhhiGAa8ALQAeLAAAAACGCKoF
tQAuAD8sAAAAAIYIyAW1AC4AYCwAAAAAhhiGAa8ALgBvLAAAAACGCAgGhgAvAJUsAAAAAIYIFgaG
AC8AuywAAAAAgxiGARsALwDELAAAAACTCJoGxwAvAP0sAAAAAJMIrgbMAC8ABC0AAAAAkwi6BtEA
LwAMLQAAAACWCN4G5QAwAB8tAAAAAIYYhgEbADAAEy0AAAAAkRiHEMsCMAAfIgAAAACGGIYBGwAw
ACgiAAAAAIYAAgocATAAAAABAPIGAAACAPoGAAADAAQHAAAEAAsHAAABABUHAAACAB0HAAADACcH
AAAEAAsHAAABAAQHAAABAC8HAAABAC8HAAABADMHAAACADkHAAABAEIHAAABAEkHAAABAFAHAAAC
AFIHAAADAFwHAAABAAQHAAACAGMHAAADAAsHAAABAAQHAAACAGMHAAADAAsHAAABAHcHAAABAHcH
AAABAAQHAAACAGMHAAADAAsHAAABAHcHAAABAHcHAAABAHcHAAABAHcHAAABAHcHAAABAHcHAAAB
AHcHAAABAHcHAAABAHcHAAABAHcHAAABAAQHAAACAGMHAAADAAsHAAABAHcHAAABAHcHAAABAH0H
AAABAH0HAAABAHcHAAABAB8KeQCGAZYAgQCGAZYAiQCGAZYAkQCGAZYAmQCGAZYAoQCGAZYAqQCG
AZYAsQCGAZYAuQCGAZYAwQCGAZYAyQCGAe8A0QCGARsACQCGARsA2QBTCfQACQBaCfsAKQBrCYoA
CQB7CQEB6QCGARsACQAWAxsADACGARsAYQCuCYYAOQCGAZYA8QDjCRsAGQCGARsASQAhCiIB2QAr
CiUBSQA3CiIBSQBBCiIB2QBPCisB2QBVCjIB2QBjCjcBAQFzCj0BAQF8CkIBSQCGARsASQCFCiIB
SQCRCiIBSQCoCiIBSQC9CiIBSQDCCiIBAQHKCksBFACGAVsBSQDbCmEBSQDnCiIBSQD0CiIBSQD/
CiIBSQAKCyIBSQAdCyIBSQAxCyIBSQBGCyIBSQBbCyIBHACGAXMBDABtC3kBDAByC1sBGQGGARsA
GQGNCyIBGQGaCyIBGQGoCyIBGQG4CyIBGQHGCyIBGQHRCyIBGQHeCyIBGQHsCyIBGQH4CyIBGQEE
DCIBGQESDCIBGQEeDCIBGQEqDCIBGQE2DCIBGQFDDCIBGQFODCIBGQFdDCIBGQFuDCIBGQF/DCIB
GQGLDCIBAQErCooBGQGWDGEBGQGhDGEBGQGsDCIBGQG5DCIBGQHGDCIB2QDTDJQB2QDaDIYA2QDT
DJsB2QDfDCIBCQAqAxsAIQH0DPMB8QD7DBsAKQEXDRsA8QAvDfgB2QBjCv4BOQGGAQQCOQFUDQsC
SQFvDYoASQF0DRECGQB9DYYAUQEXDRsAJACGARsAJAByC1sBWQG5DTMC2QDFDYYAaQGGARsAaQEh
CiIBaQHfDSIBaQHrDSIBcQGGARsAEQCGAXwAEQAEB1oCEQBjB14CKQASDmICEQAcDmcCEQCSA4oA
EQCaA4oAEQAjDmwCEQAsDu8AeQGGAZYAEQDWAxsAEQDdAxsACQC0DnICgQHtDngCiQEmD34CkQFB
D7UACQBoD4UCmQF0DYsCCQCpD5ICoQHWD5gCuQGGARsAwQExEJ8CwQFMEKgCaQCGAa4C2QGGAbsC
IQCGARsALgATABcDLgAbAEADLgBjAGYDLgALAM8CLgArAEADLgAzABcDLgBbAF0DLgAjAEADLgA7
AEYDLgBDAEADYwCTAAwBQwHzAwwBgwFLAwwBwQFLAwwBqQITBMICyQITBMICCAGpAe0BFgJEAlQC
tgIEAAEABQADAAYABQAHAA8ACAARAAkAEwAKABUACwAXAAAApgOOAAAAqwOSAAAA7AOOAAAA9AOS
AAAAqASOAAAAtASSAAAAxwSmAAAAzwSSAAAA3gSOAAAA5ASSAAAA8QSOAAAA9gSSAAAAAgWOAAAA
DAWSAAAApgOOAAAAqwOSAAAA3QW6AAAA9wW6AAAAJgaOAAAAMAaOAAAATQbXAAAAxgbcAAAA6gbq
AAIAEgADAAIAEwAFAAEAFwAHAAEAGAAJAAEAHQALAAEAHgANAAEAHwAPAAEAIAARAAEAIQATAAEA
IgAVAAEAIwAXAAEAJAAZAAEAJQAbAAEAJgAdAAEAKwAfAAEALAAhAAIAMQAjAAIAMgAlAAIANAAn
AAIANQApAAIANwArAAIAOAAtAAEAOQAtAAIAOgAvABEBUgFrASMCBIAAAAEAAADGHPNnAAAAAAAA
FwkAAAsAAAAAAAAAAAAAAAEA5wAAAAAABAAAAAAAAAAAAAAACgBCAQAAAAAEAAAAAAAAAAAAAAAK
AEsBAAAAAAsAAAAAAAAAAAAAAAEAmwEAAAAABAAAAAAAAAAAAAAACgBrAgAAAAABAAEAAAAAAAAA
AABRAL4CAAAAAAsAAAAAAAAAAAAAAAEARgUAAAAAAwACAAcAAAAAAAAAKgKSDQAAAAACAAAAAAAA
AAAAAAAKAEIBAAAAAAsAAAAAAAAAAAAAAAEATg4AAAAAAAAAAAEAAACOEAAADAADAAAAAAAdAHAD
HACFARwAowHHAD8CHABOAgEAKQAAAAAAADxNb2R1bGU+AFNDX2JjMzQ4YmRmOTdiMjRiODM4ZGIx
ZmRlMGQyN2VlYWNjLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAE1h
aW50ZW5hbmNlQnVmZmVyAE9CUmVjYWxsQnVmZmVyAEV4Y2VwdGlvblJlcG9ydEJ1ZmZlcgBDb25u
ZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDX2JjMzQ4YmRmOTdiMjRiODM4ZGIxZmRlMGQy
N2VlYWNjLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQAU2NyaXB0QnVm
ZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UALmN0b3IASW5wdXRzRmluaXNoZWQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcm9jZXNzSW5wdXQARmlu
aXNoT3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVkAFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1
dFJvd3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AF9leGNlcHRp
b25SZXBvcnRDcmVhdGVkAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9kYmMAT2RiY0Nvbm5lY3Rp
b24AY29ubgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEAUkdTLkFydGl2YUdlbmVy
YWxQdXJwb3NlAFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZS5EYXRhLlJlY29yZHMAQ29tYWtlcnNf
Q09NQUsAY29tYWtMaXN0AFByZUV4ZWN1dGUAR2V0TmFtZXMAUG9zdEV4ZWN1dGUAR2V0QXJ0aXZh
QWNjb3VudElEAEFkZENvbnRhY3RSb3cAR2VuZXJhbFB1cnBvc2VSZWNvcmRCYXNlAFQAQWRkVXBk
AGdldF9EYXRhAGdldF9EYXRhX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AERhdGEARGF0YV9J
c051bGwAc2V0X1Jvd0RhdGEAc2V0X1Jvd0RhdGFfSXNOdWxsAEFkZFJvdwBTZXRFbmRPZlJvd3Nl
dABSb3dEYXRhAFJvd0RhdGFfSXNOdWxsAHNldF9QbGFjZW1lbnRJRABzZXRfUGxhY2VtZW50SURf
SXNOdWxsAERlY2ltYWwAc2V0X0JhbGFuY2UAc2V0X0JhbGFuY2VfSXNOdWxsAHNldF9Qcm9vZgBz
ZXRfUHJvb2ZfSXNOdWxsAHNldF9Db2RlAHNldF9Db2RlX0lzTnVsbABzZXRfQWNjb3VudElEAHNl
dF9BY2NvdW50SURfSXNOdWxsAFBsYWNlbWVudElEAFBsYWNlbWVudElEX0lzTnVsbABCYWxhbmNl
AEJhbGFuY2VfSXNOdWxsAFByb29mAFByb29mX0lzTnVsbABDb2RlAENvZGVfSXNOdWxsAEFjY291
bnRJRABBY2NvdW50SURfSXNOdWxsAHNldF9EYXRhAHNldF9EYXRhX0lzTnVsbABQYXJlbnRDb21w
b25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5SdW50aW1lLldyYXBwZXIASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAGdldF9FeGNl
cHRpb25SZXBvcnRDb25uZWN0aW9uAGdldF9BcnRpdmFDb25uZWN0aW9uAEV4Y2VwdGlvblJlcG9y
dENvbm5lY3Rpb24AQXJ0aXZhQ29ubmVjdGlvbgBnZXRfQ2xpZW50SURzAGdldF9jdXJyZW50Rmls
ZQBDbGllbnRJRHMAY3VycmVudEZpbGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIA
cmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0
dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZm
ZXIAT3V0cHV0TWFwAE91dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAUm93AG5hbWVzAG5hbWVUeXBl
AGRhdGFJRAByZWNvcmQAcwBmaWVsZE5hbWUAYWNvdW50AEJ1ZmZlckNvbHVtbkluZGV4ZXMAdmFs
dWUAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHly
aWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVB
dHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBTQ19iYzM0OGJkZjk3YjI0YjgzOGRiMWZkZTBkMjdlZWFjYwBTdHJpbmcA
U3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQA
R2V0T3V0cHV0SUQAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAZ2V0X0Nv
bm5lY3Rpb25TdHJpbmcAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBPcGVuADw+Y19f
RGlzcGxheUNsYXNzMQBjb21hY2sAPElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+Yl9fMAB4AEFjY291
bnRJZABvcF9FcXVhbGl0eQBGaXJzdE5hbWUATGFzdE5hbWUAQ2hhcgBTcGxpdABJc051bGxPckVt
cHR5AENvbmNhdABEYXRlVGltZQBNaW5WYWx1ZQBUcnlQYXJzZQBBZGRyZXNzTGluZQBBZGRyZXNz
VW5pdF9BcHRPclBPQm94AEFsdGVybmF0ZVBob25lTnVtYmVyAENpdHkAQ291bnRyeQBQYXJzZQBO
dWxsYWJsZWAxAERhdGVPZkJpcnRoAEVtYWlsQWRkcmVzcwBNaWRkbGVOYW1lAFBvc3RhbENvZGUA
UHJpbWFyeVBob25lTnVtYmVyAFJlbGF0aW9uc2hpcFR5cGVLZXkAU2Vjb25kYXJ5UGhvbmVOdW1i
ZXIAU29jaWFsU2VjdXJpdHlOdW1iZXIAU3RhdGUAUHJlZGljYXRlYDEARmluZABBZGQAQ29udGFj
dEluZm9ybWF0aW9uXzExNQBBUkFDSURGaWxsZXIAQ29udGFjdFR5cGVJZABDb250YWN0VHlwZU5h
bWUAQ29udGFjdFNvdXJjZQBDb250YWN0U3NuAENvbnRhY3RGaXJzdABDb250YWN0TWlkZGxlAENv
bnRhY3RMYXN0AENvbnRhY3ROYW1lAENvbnRhY3RTdWZmaXgAQ29udGFjdEFkZDEAQ29udGFjdEFk
ZDIAQ29udGFjdENpdHkAQ29udGFjdFN0YXRlAENvbnRhY3RaaXAAQ29udGFjdENvdW50cnkAQ29u
dGFjdEhvbWVQaG9uZQBDb250YWN0V29ya1Bob25lAENvbnRhY3RDZWxsAENvbnRhY3RGYXgAQ29u
dGFjdERvYgBDb250YWN0RG9kAENvbnRhY3RPdGhlcgBDb250YWN0QWxpYXMAQ29udGFjdEVtYWls
AEZvcm1hdABUcmltAEVtcHR5AFN5c3RlbS5JTwBGaWxlAERlbGV0ZQBDbG9zZQBTeXN0ZW0uQ29t
cG9uZW50TW9kZWwARGlzcG9zZQBDb25uZWN0aW9uU3RhdGUAZ2V0X1N0YXRlAE9kYmNDb21tYW5k
AE9kYmNEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIARGJEYXRhUmVhZGVyAFJlYWQAZ2V0X0l0ZW0A
VG9TdHJpbmcASURpc3Bvc2FibGUARmlsZUhlbHBlcnMAQ29tbW9uRW5naW5lAElFbnVtZXJhYmxl
YDEAV3JpdGVTdHJpbmcAVG9VcHBlcgBVcGRhdGVBY2NvdW50X1VQRABVcGRhdGVGaWVsZABVcGRh
dGVWYWx1ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBHZXRTdHJpbmcASXNOdWxsAHNldF9J
dGVtAFNldE51bGwASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBNaWNyb3NvZnQuU3FsU2VydmVy
LkRUU1BpcGVsaW5lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVy
AElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABnZXRfQ29tcG9uZW50TWV0YURhdGEASURUU1J1bnRp
bWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9u
AElEVFNSdW50aW1lQ29ubmVjdGlvbjEwMABHZXRSdW50aW1lQ29ubmVjdGlvbkJ5TmFtZQBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIASURUU1ZhcmlhYmxlczEwMABnZXRfUmVhZE9ubHlWYXJpYWJsZXMA
SURUU1ZhcmlhYmxlMTAwAFNjcmlwdENvbXBvbmVudEV2YWxDb250ZXh0AGdldF9FdmFsdWF0b3JD
b250ZXh0AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEdldFZhbHVlV2l0aENvbnRleHQAU3lzdGVt
LkRpYWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ19iYzM0OGJkZjk3
YjI0YjgzOGRiMWZkZTBkMjdlZWFjYy5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAA
AA9JAG4AcAB1AHQAIAAwAAAXTQBhAGkAbgB0AGUAbgBhAG4AYwBlAAARTwBCAFIAZQBjAGEAbABs
AAAfRQB4AGMAZQBwAHQAaQBvAG4AUgBlAHAAbwByAHQAAA9kAGEAdABhAF8AaQBkAACA70UAVgBF
AFIAUwBPAFUAUgBDAEUAIABBAEMAQwBPAFUATgBUACAATgBPAFQAIABGAE8AVQBOAEQAIABJAE4A
IABBAFIAVABJAFYAQQAsACAAQwByAGUAZABpAHQAbwByACAASQBuAHQAZQByAG4AYQBsACAAQwBv
AG4AcwB1AG0AZQByACAAQQBjAGMAbwB1AG4AdAAgAE4AdQBtAGIAZQByACAAZgByAG8AbQAgAEkA
QgAtAEMAbwBuAHQAYQBjAHQAIABBAHAAcABlAG4AZAAgAE4AbwB0AGkAYwBlACAAZgBpAGwAZQA6
ACAAIAABBTEANwAAC0MATwBNAEEASwAAAzkAAAUyADcAAA9VAG4AawBuAG8AdwBuAAADMAAAAy0A
AQEAD3sAMAB9ACAAewAxAH0AAA9BAFIARQBOAFUATgBUAAAXewAwAH0AIAB7ADEAfQAgAHsAMgB9
AAAHQwAvAE8AAA9BAFIARQBOAEEARABSAAANQQBSAEUATgBQAEgAAA1BAFIARQBOAFMAVAAAD0EA
UgBFAE4AQwBUAFkAAA9BAFIARQBOAFAASAAyAAAPQQBSAEUATgBaAEkAUAAAgTNTAEUATABFAEMA
VAAgAEEAUgBBAEMASQBEAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAJQBTAFQAQQBSAFQAVABBAEIATABFACAAQQBSAEMA
TABJAEUATgBUAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAQQBSAEEAQwBDAE8AVQBOAFQAIABPAE4A
IABBAFIAQwBMAEkARAAgAD0AIABBAFIAQQBDAEMATABUAEkARAAgAEEATgBEACAAQQBSAEMATABJ
AEQAIABJAE4AIAAAgbkKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAASQBOAE4ARQBSACAASgBPAEkATgAgAEEAUgBFAE4AVABJAFQAWQAgAE8A
TgAgAEEAUgBBAEMAQwBPAFUATgBUAC4AQQBSAEEAQwBSAFAASQBEACAAPQAgAEEAUgBFAE4ASQBE
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IABMAEUARgBUACAASgBPAEkATgAgAFoAWgBCAEEATgBLAFIAVQBQAFQAQwBZACAATwBOACAAWgBa
AEIASwBFAE4ASQBEACAAPQAgAEEAUgBFAE4ASQBEAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABXAEgARQBSAEUAIABBAFIAQQBDAEMATwBV
AE4AVAAuAFoAWgBBAEMAQwBSAEUARABJAE4AVABDAE8ATgBTAEEAQwBOAFUATQAgAD0AIAAnAAED
JwABDUEAUgBBAEMASQBEAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4A
bgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABh
ACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQA
LgAAM0UAeABjAGUAcAB0AGkAbwBuAFIAZQBwAG8AcgB0AEMAbwBuAG4AZQBjAHQAaQBvAG4AACFB
AHIAdABpAHYAYQBDAG8AbgBuAGUAYwB0AGkAbwBuAAATQwBsAGkAZQBuAHQASQBEAHMAABdjAHUA
cgByAGUAbgB0AEYAaQBsAGUAAHFTAEMAXwBiAGMAMwA0ADgAYgBkAGYAOQA3AGIAMgA0AGIAOAAz
ADgAZABiADEAZgBkAGUAMABkADIANwBlAGUAYQBjAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAAFmR/++Qi+BHhNLYNvC/OMYACImEXc2AgMyRCLd6XFYZNOCJ
AwYSIAMGEiQDIAABAwYSFAMGEhgDBhIcAgYICSAEAQgOEhUSGQsgBAEIHQgdEhUSGQUgAQESEAIG
AgMGEh0I+gztSkVRp4IHBhUSIQESJQYgAg4dDggEIAEODgYwAQEBHgAGIAMBDg4OCSADARIVHQgS
GQMgAA4DIAACAygADgMoAAIEIAEBDgQgAQECBSABAREtBCgAES0DBhIFBSABARIFBCAAEjEEKAAS
MQMGEjUDBhI5BAAAEjUEAAASOQUAAQESOQQIABI1BAgAEjkDBhIsBAAAEiwECAASLAQgAQEIBiAC
Ag4RcQUgAR0ICAYAAggSGQ4DBwEIBAEAAAAGFRIhARIlAwYSJQUgAQISJQIGDgUAAgIODgYgAR0O
HQMEAAECDgUAAg4ODgQGEYCBCAACAg4QEYCBBgABEYCBDggVEYCFARGAgQUgAQETAAkGFRGAhQER
gIEHFRKAiQESJQUgAgEcGAsgARMAFRKAiQETAAQKARIlCQACAhGAgRGAgQYAAw4OHBwHAAQODhwc
HAUKARKAjUMHLh0ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4RgIERgIEdDg4ODhIlEjASgI0O
Dg4ODg4OHQMdAxURgIUBEYCBBQcDDggIBAABAQ4FIAARgJkFAAEOHQ4GIAIBDhIdBSAAEoChBCAB
HA4MBwUODhKAnRKAoR0OBhUSIQEeAAg+DAjVnMPWVwsQAQEOFRKAsQEeAAQKAR4ACQcCFRIhAR4A
DgUKARKAtQUHARKAtQMGEhUDBh0IBCABDggEIAECCAUgAgEIHAUgABKAwQUgABKAxQYgARKAyQ4F
IAASgM0GIAESgNEcBQAAEoDVBiABHBKA2QgAARKA4RGA5QUgABKA6QcgAgEOEoDpBAcBEjUGIAEB
EYDxCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTQ19iYzM0OGJkZjk3YjI0YjgzOGRi
MWZkZTBkMjdlZWFjYwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE3AAAIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBAAAA1FYAAAAAAAAAAAAA7lYAAAAgAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAOBWAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8l
ACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAA
AAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAAAAAA
AACwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA82fG
HAAAAQDzZ8YcPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUA
SQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0
AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEA
RgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGIAYwAzADQAOABiAGQAZgA5
ADcAYgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUAZQBhAGMAYwAAAEAADwABAEYA
aQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3ADMANgA2AC4AMgA2ADYAMQAxAAAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGIAYwAzADQAOABiAGQAZgA5ADcA
YgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUAZQBhAGMAYwAuAGQAbABsAAAASAAS
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
IAAyADAAMQA3AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
AGIAYwAzADQAOABiAGQAZgA5ADcAYgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUA
ZQBhAGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBi
AGMAMwA0ADgAYgBkAGYAOQA3AGIAMgA0AGIAOAAzADgAZABiADEAZgBkAGUAMABkADIANwBlAGUA
YQBjAGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcAMwA2
ADYALgAyADYANgAxADEAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcAMwA2ADYALgAyADYANgAxADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAADcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bc348bdf97b24b838db1fde0d27eeacc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::currentFile,$Project::ClientIDs</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">9f93e594d40c568772b07bbf13fa1d81</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0d08e05147fbd24addfe5d7441605cc5ab1c4608</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Connections[ExceptionReportConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="ExceptionReportConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Connections[ArtivaConnection]"
                      connectionManagerID="Package.ConnectionManagers[Artiva]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva]"
                      name="ArtivaConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance]"
                      hasSideEffects="true"
                      name="Maintenance">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          name="RowData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall]"
                      hasSideEffects="true"
                      name="OBRecall">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          name="PlacementID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          name="Balance"
                          precision="15"
                          scale="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          name="Proof" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          name="Code" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          name="AccountID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport]"
                      hasSideEffects="true"
                      name="ExceptionReport">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[ExceptionReport]"
                  endId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="ExceptionReport"
                  startId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport]" />
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[Maintenance]"
                  endId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input]"
                  name="Maintenance"
                  startId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C7351AAB-D645-4D04-AFF8-27ADB78087F4}"
          DTS:ObjectName="{C7351AAB-D645-4D04-AFF8-27ADB78087F4}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::currentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Foreach Loop Container\Create Files"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="150,103"
          Size="147,146"
          Id="Package\Foreach Loop Container"
          TopLeft="5.50000000000003,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Create Files">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Create Files\Script Component"
          TopLeft="231,107.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Loop Container\Create Files\Flat File Source"
          TopLeft="237,5.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Create Files\Maintenance File"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Create Files\Flat File Destination"
          TopLeft="474.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[Flat File Source Output]"
          TopLeft="313.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[ExceptionReport]"
          TopLeft="339.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="221.833333333333,60"
              Start="0,0"
              End="221.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="217.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="217.833333333333,24.3457382953181"
                    Point2="221.833333333333,24.3457382953181"
                    Point3="221.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="221.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="74.3052799479165,29.3457382953181,73.2227734375,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[Maintenance]"
          TopLeft="287.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.833333333333,60"
              Start="0,0"
              End="-201.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="-4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="-197.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.833333333333,24.3457382953181"
                    Point2="-201.833333333333,24.3457382953181"
                    Point3="-201.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="-201.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-129.273014322917,29.3457382953181,56.7126953125,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>