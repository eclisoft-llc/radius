<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/19/2018 5:21:06 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-003"
  DTS:CreatorName="CORP\chrperez"
  DTS:DTSID="{F9A40B3E-C6F3-41B2-9A83-5F4F9A25047A}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="15.0.2000.167"
  DTS:LocaleID="1033"
  DTS:ObjectName="IB-Transaction Notice"
  DTS:PackageType="5"
  DTS:VersionBuild="60"
  DTS:VersionGUID="{1C996CE9-165F-4FE8-8D06-ABC530C15336}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{4CB066B9-6E6F-41BC-9036-34BEE24FA960}"
      DTS:ObjectName="Artiva">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Dsn="+ @[$Project::Namespace] +";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Dsn=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exception Report]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{989ECC6E-9811-42E3-B886-D41AB3036CF4}"
      DTS:ObjectName="Exception Report">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::exceptionReportFilename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Philadelphiagas\Out\ExceptionReport-Philadelphia Gas Works-0.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{573E6F1A-38C5-420C-8905-7BAD3192D314}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[IBBktFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3A1F1E09-4338-4B57-B22F-BBA62D7698AA}"
      DTS:ObjectName="IBBktFile">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "In\\" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Philadelphiagas\In\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{264B610B-F3A5-4F53-BB42-1AD80F2C17F2}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Maintenance File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{0DBCDDF4-3281-4793-A272-8D0537F25BA3}"
      DTS:ObjectName="Maintenance File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "\\Out\\ArtivaMT-" + @[$Project::Namespace] + "-" + @[$Project::ClientName] + "-" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Philadelphiagas\\Out\ArtivaMT-THIRDPROD-Philadelphia Gas Works-0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{74D2E637-B2B3-4D94-9645-EFE9B8862740}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{911463EE-BF00-4A07-8206-7A7EEA5CC37B}"
      DTS:ObjectName="InboundFileMask"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">transaction_*.txt</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8FF2358-8F33-4FC1-B4AF-5B12D416F2B3}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1AA26C89-C90F-4D00-B99C-3B890544BA40}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + &quot;Out\\ExceptionReport-&quot; + @[$Project::ClientName] + &quot;-&quot; +  @[User::currentFile] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exceptionReportFilename">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Philadelphiagas\Out\ExceptionReport-Philadelphia Gas Works-0.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{E5D45C4D-D437-4341-AD7C-5A2A70B8F694}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{330B24BA-871F-4F33-8B14-A2A39EF13585}"
        DTS:ObjectName="{7F315AC7-562B-4D2F-94CD-BE17D478728F}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::LocalPath] + "In\\"</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\nnaem\Documents\CERBERUS-LAPTOP\radius\Philadelphiagas\In\" />
            <FEFEProperty
              FileSpec="transaction_*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Read Files"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{F94783B5-FDE0-4B13-A4E6-3ED2996D342F}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Read Files"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Read Files\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Read Files\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Read Files\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Read Files\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Read Files\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[ExceptionReport].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Read Files\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Read Files\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Read Files\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[IBBktFile]"
                      connectionManagerRefId="Package.ConnectionManagers[IBBktFile]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          name="Data"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Read Files\Maintenance File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Maintenance File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Read Files\Maintenance File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Maintenance File]"
                      connectionManagerRefId="Package.ConnectionManagers[Maintenance File]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Read Files\Maintenance File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Read Files\Maintenance File.Inputs[Flat File Destination Input].Columns[RowData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="RowData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Read Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[Maintenance].Columns[RowData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Read Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Read Files\Script Component"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Collections.Generic;
using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;
using System.Data.Odbc;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _exceptionReportCreated = false;
    private Dictionary<int, string> _exceptionCodes;

    public override void PreExecute()
    {
        base.PreExecute();

        _exceptionCodes = new Dictionary<int, string>
        {
            { 1002, "Settled in full (SIF)" },
            { 1003, "DPCOR- Handle manually" },
            { 1100, "Commission Only" },
            { 1101, "Commission Only Bonus" },
            { 1102, "Turn-On Reversal" },
            { 3200, "Judgment Adjustment" },
            { 3300, "Conversion Adjustment" },
            { 4000, "Fee Assessment" },
            { 4001, "Fee Assessment (NR)" },
            { 4002, "Court Cost Assessment" },
            { 4003, "Court Cost Assessment (NR)" },
            { 4005, "File Suit" },
            { 4006, "Process Server Fee" },
            { 4007, "File Judgment" },
            { 4008, "Wage Attachment" },
            { 4009, "Non-Wage Attachment" },
            { 4010, "Lien" },
            { 4011, "Levy" },
            { 4012, "Motion" },
            { 4013, "Post-Judgment Cost" },
            { 4014, "Judgment Satisfaction" },
            { 4505, "Non-Recoverable File Suit" },
            { 4506, "Non-Recoverable Process Server Fee" },
            { 4507, "Non-Recoverable File Judgment" },
            { 4508, "Non-Recoverable Wage Attachment" },
            { 4509, "Non-Recoverable Non-Wage Attachment" },
            { 4510, "Non-Recoverable Lien" },
            { 4511, "Non-Recoverable Levy" },
            { 4512, "Non-Recoverable Motion" },
            { 4513, "Non-Recoverable Post-Judgment Cost" },
            { 4514, "Non-Recoverable Judgment Satisfaction" },
            { 4515, "Auto Repossession Fee" },
            { 7000, "Judgment adjustment" },
            { 7001, "Judgment vacate adjustment" },
            { 9000, "Echo" }
        };
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string[] cols = Row.Data.Split(',');
        if (cols.Length == 0 || cols[0] == "data_id")
            return;

        string data_id = cols[0];
        string pri_acctno = cols[1];
        string tran_type = cols[2];
        string tran_date = cols[3];
        string tran_amount = cols[4];
        string tran_principal = cols[5];
        string tran_interest = cols[6];
        string tran_court = cols[7];
        string tran_attorney = cols[8];
        string tran_other = cols[9];
        string tran_retained = cols[10];
        string payID = cols[11];

        string accountID = GetArtivaAccountID(data_id);

        if (string.IsNullOrEmpty(accountID))
            AddExceptionReportData("EVERSOURCE ACCOUNT NOT FOUND IN ARTIVA, Creditor Internal Consumer Account Number from IB-Transaction Notice file: " + data_id);
        else
        {
            int transactionType = 0;
            DateTime transactionDate = DateTime.MinValue;
            decimal transactionAmmount = -1;
            decimal transactionPrincipal = -1;
            decimal transactionInterest = -1;
            decimal transactionCourt = -1;
            decimal transactionAttorney = -1;
            decimal transactionOther = -1;

            int.TryParse(tran_type, out transactionType);
            DateTime.TryParse(tran_date, out transactionDate);
            decimal.TryParse(tran_amount, out transactionAmmount);
            decimal.TryParse(tran_principal, out transactionPrincipal);
            decimal.TryParse(tran_interest, out transactionInterest);
            decimal.TryParse(tran_court, out transactionCourt);
            decimal.TryParse(tran_attorney, out transactionAttorney);
            decimal.TryParse(tran_other, out transactionOther);

            ProcessTransactionData(accountID, transactionType, transactionDate, transactionAmmount, transactionPrincipal, transactionInterest, transactionCourt, transactionAttorney, transactionOther, payID);
        }
    }

    private void ProcessTransactionData(string accountID, int type, DateTime date, decimal amount, decimal principal, decimal interest, decimal court, decimal attorney, decimal other, string payID)
    {
 
        if (_exceptionCodes.ContainsKey(type))
        {
            AddExceptionReportData("Transaction type " + _exceptionCodes[type] + " for account:, " + accountID + ", tran_date:  " + date.ToShortDateString() + ", tran_amount:  " + amount.ToString("0.00"));
            return;
        }

        switch (type)
        {
            case 1000:
            case 1001:
                if (principal == -1 || interest == -1 || attorney == -1 || other == -1 || court == -1)
                {
                    System.Text.StringBuilder sb = new System.Text.StringBuilder();
                    if (principal == -1)
                        sb.Append("Principal portion of transaction is missing, ");
                    if (interest == -1)
                        sb.Append("Interest portion of transaction is missing, ");
                    if (attorney == -1)
                        sb.Append("Attorney cost/fee portion of transaction is missing, ");
                    if (other == -1)
                        sb.Append("Other portion of transaction is missing, ");
                    if (court == -1)
                        sb.Append("Court cost portion of transaction is missing, ");

                    AddExceptionReportData(string.Format("{0}for account {1}", sb.ToString(), accountID));
                }
                else
                {
                    if (amount.Equals(principal + interest + attorney + other + court))
                    {
                        var pay = new Payment_PAY();
                        pay.TransactionType = "DP";
                        pay.AccountId = accountID;
                        pay.TenderDate = date;
                        pay.PaymentAmount = amount;
                        pay.TransactionReference = payID;

                        AddMaintenanceRow(pay);
                    }
                    else
                        AddExceptionReportData(string.Format("Sum of transaction Buckets is different from transaction amount' for account:, {0}", accountID));
                }
                break;
            case 3000:
            case 3001:
            case 3100:
                if (principal == -1 || interest == -1 || attorney == -1 || other == -1 || court == -1)
                {
                    System.Text.StringBuilder sb = new System.Text.StringBuilder();
                    if (principal == -1)
                        sb.Append("Principal portion of transaction is missing, ");
                    if (interest == -1)
                        sb.Append("Interest portion of transaction is missing, ");
                    if (attorney == -1)
                        sb.Append("Attorney cost/fee portion of transaction is missing, ");
                    if (other == -1)
                        sb.Append("Other portion of transaction is missing, ");
                    if (court == -1)
                        sb.Append("Court cost portion of transaction is missing, ");

                    AddExceptionReportData(string.Format("{0}for account {1}", sb.ToString(), accountID));
                }
                else
                {
                    if (amount.Equals(principal + interest + attorney + other + court))
                    {
                        var adj = new Adjustment_ADJ();
                        adj.TransactionType = (amount < 0) ? "CRJ" : "DBJ";
                        adj.AccountId = accountID;
                        adj.TenderDate = date;
                        adj.PrincipalAdjustmentAmount = amount;
                        adj.TransactionReference = payID;

                        AddMaintenanceRow(adj);
                    }
                    else
                        AddExceptionReportData(string.Format("Sum of transaction Buckets is different from transaction amount' for account:, {0}", accountID));
                }
                break;
        }
    }

    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionReportConnection.ConnectionString);
    }

    private string GetArtivaAccountID(string dataID)
    {
        string accountID = "";

        using (var conn = new OdbcConnection(Connections.ArtivaConnection.ConnectionString))
        {
            conn.Open();

            string query = @"SELECT TOP 1 ARACID
                                FROM %STARTTABLE ARCLIENT
                                INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN " + Variables.ClientIDs + @"
                                INNER JOIN ARENTITY ON ARACCOUNT.ARACRPID = ARENID
                                LEFT JOIN ZZBANKRUPTCY ON ZZBKENID = ARENID
                                WHERE ARACCOUNT.ZZACCREDINTCONSACNUM = '" + dataID + "'";

            using (var command = new OdbcCommand(query, conn))
            using (var reader = command.ExecuteReader())
                if (reader.Read())
                    accountID = reader["ARACID"].ToString();
        }

        return accountID;
    }

    private void AddMaintenanceRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        MaintenanceBuffer.AddRow();
        MaintenanceBuffer.RowData = recordString.ToUpper();
    }

    private void AddExceptionReportData(string s)
    {
        _exceptionReportCreated = true;

        ExceptionReportBuffer.AddRow();
        ExceptionReportBuffer.Data = s;
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Data_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class MaintenanceBuffer: ScriptBuffer

{
    public MaintenanceBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RowData
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OBRecallBuffer: ScriptBuffer

{
    public OBRecallBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PlacementID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool PlacementID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Balance
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Balance_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Proof
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Proof_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Code
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AccountID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AccountID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionReportBuffer: ScriptBuffer

{
    public ExceptionReportBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public MaintenanceBuffer MaintenanceBuffer;

    public OBRecallBuffer OBRecallBuffer;

    public ExceptionReportBuffer ExceptionReportBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != MaintenanceBuffer)
        {
            MaintenanceBuffer.SetEndOfRowset();
            MaintenanceBuffer = null;
        }

        if (null != OBRecallBuffer)
        {
            OBRecallBuffer.SetEndOfRowset();
            OBRecallBuffer = null;
        }

        if (null != ExceptionReportBuffer)
        {
            ExceptionReportBuffer.SetEndOfRowset();
            ExceptionReportBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Maintenance"))
            {
                MaintenanceBuffer = new MaintenanceBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OBRecall"))
            {
                OBRecallBuffer = new OBRecallBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ExceptionReport"))
            {
                ExceptionReportBuffer = new ExceptionReportBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionReportConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionReportConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ArtivaConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ArtivaConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientIDs
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDs"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String currentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["currentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1E1BB231-0F5C-4B88-AC85-23CFF8D6CA4E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bc348bdf97b24b838db1fde0d27eeacc</RootNamespace>
    <AssemblyName>SC_bc348bdf97b24b838db1fde0d27eeacc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug4689e094-6fe7-4305-aae0-f4320d92dbd6/3585ee3d-da10-41ba-b589-9bcec1c8a26c&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Settings.get_Default():SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Sett" +
    "ings")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{43C3A275-A769-46E8-AC3F-179A9FF6ADCC}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:CodeName>
		<msb:DisplayName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_bc348bdf97b24b838db1fde0d27eeacc.csproj"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
Kg4AcG9XAAAKb1gAAAoqggJ7CQAABG9VAAAKb1YAAApyXg4AcG9XAAAKb1gAAAoqOgIoVAAACgID
fQoAAAQqlgJ7CgAABG9ZAAAKcoAOAHBvWgAACihbAAAKb1wAAAp0GgAAASqWAnsKAAAEb1kAAApy
lA4AcG9aAAAKKFsAAApvXAAACnQaAAABKh4CKFQAAAoqABMwAgAtAAAABwAAEX4LAAAELSByrA4A
cNAKAAACKF4AAApvXwAACnNgAAAKCgaACwAABH4LAAAEKhp+DAAABCoeAoAMAAAEKhp+DQAABCou
czsAAAaADQAABCoeAihjAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAPAwAACN+AACoDAAADA8AACNTdHJpbmdzAAAAALQbAAAgDwAAI1VTANQqAAAQ
AAAAI0dVSUQAAADkKgAAeAMAACNCbG9iAAAAAAAAAAIAAAFXFaIJCR0AAAD6JTMAFgAAAQAAADsA
AAALAAAADQAAADwAAAA1AAAAYwAAAA8AAAAHAAAACAAAABcAAAAYAAAAAwAAAAEAAAAKAAAAAQAA
AAEAAAADAAAAAQAAAAAACgABAAAAAAAGACUBBAEGADUBBAEKAFIBSwEOAG4BWQESALwBBAEGAMsB
BAEKAIYCawIKAK4CSwEKALcCSwEWAEYDIAMaAIgFYAUKAEQGMwYKAHUGYAYKAMEHpwcKAOwH2gcK
AAMI2gcKACAI2gcKAD8I2gcKAFgI2gcKAHEI2gcKAIwI2gcKAKcI2gcKAMAI2gcKAPkI2QgKABkJ
2QgKAFsJSwEKAGIJSwEGAKcJBAEKANIJSwEKAAcKSwEKAFIKRgoWAHoKIAMKAKAKSwEWANkKIAMK
AC0LIwseAFYLRQseAHgLZQseAIoLRQseAJYLRQseALMLZQsKAMULSwEKANkLawIiAOwL4AsmAPkL
awIKAD0MSwEqAKQMewwqANMMewwqABYNewwaAGANYAUaAIcNYAUHAJcNAAAaAMcNYAUKAAYO8w0K
ACMOSwEKACgOSwEKAEwO2gcOAHgOYg4OAJEOYg4KAKYO2QgAAAAAAQAAAAAAAQABAAEAEAAyAAAA
BQABAAEAAQAQAEAAAAAIAAcACQABABAASwAAAAkACQARAAEAEABYAAAACQAJABYAAQAQAGoAAAAJ
AAkAHAABABAAeQAAAAkACQAqAAEAEACPAAAADQAJADAAAQAQAJsAAAANAAoAMwAAABAApQCvAA0A
CwA2AAABEADeAK8AEQANADoABgCPABMABgCbABcABgBYAB8ABgBqACMABgB5ACcAAQCMASsAAQBT
AkoAAQCTAk0AAQAtBa4AAQAtBa4AEQBUBsIAEQCBBsYAEQDFBuQAUCAAAAAAhhiGARsAAQBwIAAA
AADGANkBLgABAMsgAAAAAMYB5gEbAAUA0CAAAAAAgQD0ARsABQAsIQAAAADGAAgCOAAFAM8hAAAA
AMYBFAIbAAkA0SEAAAAAxgEoAkQACQDkIQAAAADGATwCRAAKAOghAAAAAMYAowIbAAsAOCQAAAAA
xgA8AkQACwB4JQAAAACBAL8CVQAMABwpAAAAAMYA1gIbABYARCkAAAAAgQDiAmoAFgAsKgAAAACB
APUCbwAXAGkqAAAAAIEAYQN/ABgAiSoAAAAAhhiGARsAGQCRKgAAAACGGIYBhAAZAJwqAAAAAIYI
eAOOABwAsSoAAAAAhgiBA5IAHAC6KgAAAACGAJEDkgAcAMIqAAAAAIYAmQOSABwAyioAAAAAhhiG
AYQAHADVKgAAAACGCLYDfwAfAN8qAAAAAIYIwgOeACAA9ioAAAAAhgDVAxsAIQD+KgAAAACGANwD
GwAhAAYrAAAAAIYAmQOSACEADisAAAAAhhiGAYQAIQAZKwAAAACGCAIEfwAkACMrAAAAAIYIEgSe
ACUAOisAAAAAhggpBKMAJgBJKwAAAACGCDUEngAnAGArAAAAAIYISAR/ACgAaisAAAAAhghSBJ4A
KQCBKwAAAACGCGMEfwAqAIsrAAAAAIYIbASeACsAoisAAAAAhgh8BH8ALACsKwAAAACGCIoEngAt
AMMrAAAAAIYA1QMbAC4AyysAAAAAhgDcAxsALgDTKwAAAACGAJkDkgAuANsrAAAAAIYYhgGEAC4A
5isAAAAAhggUBX8AMQDwKwAAAACGCB0FngAyAAcsAAAAAIYA1QMbADMADywAAAAAhgDcAxsAMwAX
LAAAAACGAJkDkgAzAB8sAAAAAIYYhgGyADMALiwAAAAAhgihBbgANABPLAAAAACGCL8FuAA0AHAs
AAAAAIYYhgGyADQAfywAAAAAhgj/BY4ANQClLAAAAACGCA0GjgA1AMssAAAAAIMYhgEbADUA1CwA
AAAAkwiRBsoANQANLQAAAACTCKUGzwA1ABQtAAAAAJMIsQbUADUAHC0AAAAAlgjVBugANgAvLQAA
AACGGIYBGwA2ACMtAAAAAJEYwQ69AjYAAAABAOkGAAACAPEGAAADAPsGAAAEAAIHAAABAAwHAAAC
ABQHAAADAB4HAAAEAAIHAAABAPsGAAABACYHAAABACYHAAABACoHAAACADQHAAADADkHAAAEAD4H
AAAFAEUHAAAGAE8HAAAHAFgHAAAIAF4HAAAJAGcHAAAKAG0HAAABAHMHAAABAHoHAAABAIEHAAAB
APsGAAACAIMHAAADAAIHAAABAPsGAAACAIMHAAADAAIHAAABAJcHAAABAJcHAAABAPsGAAACAIMH
AAADAAIHAAABAJcHAAABAJcHAAABAJcHAAABAJcHAAABAJcHAAABAJcHAAABAJcHAAABAJcHAAAB
AJcHAAABAJcHAAABAPsGAAACAIMHAAADAAIHAAABAJcHAAABAJcHAAABAJ0HAAABAJ0HAAABAJcH
cQCGAX8AeQCGAX8AgQCGAX8AiQCGAX8AkQCGAX8AmQCGAX8AoQCGAX8AqQCGAX8AsQCGAX8AuQCG
AX8AwQCGAfIAyQCGARsACQCGARsA0QBzCfcACQB6Cf4AKQCLCZIACQCbCQQB4QCGARsACQCjAhsA
DACGARsADADOCRsB0QDXCSwB0QDdCTMB0QDpCTkB0QD3CT4BQQD+CUQBSQCGAfIA8QANCkgBQQAN
Ck8BSQANClcBDAAWCoABDAAiCoYBQQArCo4ASQA9CmoA0QD3CY0BSQDdCZMB+QCGARsA+QBgCpsB
GQA9Co4A0QBnCqEBSQBuCqgBSQBzCbEBAQGGARsAAQGGCrcBAQGWCrcBFACGAcIBAQGrCsgBAQG2
CtEBAQHECrcB0QBnCtsBEQGGARsASQDoCpMBEQGGCrcBEQGWCrcBEQGrCsgBEQH0CtEBEQHECrcB
CQDWAhsAWQAOC44AGQEyC/cBIQGGAX8AKQGFCxsAMQGGAfwBMQGlCwQCQQHAC5IAQQEiCgoCSQHR
CxsAHACGARsAHADOCcIBWQEHDDAC0QATDI4AEQCGAYQAEQD7BkwCEQCDB1ACKQAbDFQCEQAlDFkC
EQCRA5IAEQCZA5IAEQAsDF4CEQA1DPIAaQGGAX8AEQDVAxsAEQDcAxsAGQCGARsACQC9DGQCcQH2
DGoCeQEvDXACgQFKDbgACQBxDXcCiQEiCn0CCQCyDYQCkQHfDYoCqQGGARsAsQE6DpECsQFVDpoC
YQCGAaACyQGGAa0C2QGGARsAIQCGARsALgAbADIDLgBjAFgDLgALAMECLgATAAkDLgAjADIDLgAr
ADIDLgAzAAkDLgA7ADgDLgBDADIDLgBbAE8DYwCTAA8BQwHrAg8BoQETAw8BqQILA7QCyQILA7QC
CwEjAV8B5wEPAkECqAIEAAEABQADAAYABQAHAA8ACAARAAkAEwAKABUACwAXAAAApQOWAAAAqgOa
AAAA6wOWAAAA8wOaAAAAnwSWAAAAqwSaAAAAvgSpAAAAxgSaAAAA1QSWAAAA2wSaAAAA6ASWAAAA
7QSaAAAA+QSWAAAAAwWaAAAApQOWAAAAqgOaAAAA1AW9AAAA7gW9AAAAHQaWAAAAJwaWAAAARAba
AAAAvQbfAAAA4QbtAAIAEgADAAIAEwAFAAEAFwAHAAEAGAAJAAEAHQALAAEAHgANAAEAHwAPAAEA
IAARAAEAIQATAAEAIgAVAAEAIwAXAAEAJAAZAAEAJQAbAAEAJgAdAAEAKwAfAAEALAAhAAIAMQAj
AAIAMgAlAAIANAAnAAIANQApAAIANwArAAIAOAAtAAEAOQAtAAIAOgAvABQBugEfAgSAAAABAAAA
oB/UbQAAAAAAADcJAAALAAAAAAAAAAAAAAABAOcAAAAAAAQAAAAAAAAAAAAAAAoAQgEAAAAABAAA
AAAAAAAAAAAACgBLAQAAAAALAAAAAAAAAAAAAAABAJsBAAAAAAEAAQAAAAAAAAAAAHYABwMAAAAA
CwAAAAAAAAAAAAAAAQA9BQAAAAAEAAAAAAAAAAAAAAAKADkLAAAAAAMAAgAHAAAAAAAAACcC4AsA
AAAAAgAAAAAAAAAAAAAACgBCAQAAAAALAAAAAAAAAAAAAAABAFcMAAAAAAAAAAABAAAAyA4AAAAA
AAAdAF8DHADVARwA4QGNADwCAQApAAAAADxNb2R1bGU+AFNDX2JjMzQ4YmRmOTdiMjRiODM4ZGIx
ZmRlMGQyN2VlYWNjLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4ASW5wdXQwQnVmZmVyAE1h
aW50ZW5hbmNlQnVmZmVyAE9CUmVjYWxsQnVmZmVyAEV4Y2VwdGlvblJlcG9ydEJ1ZmZlcgBDb25u
ZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDX2JjMzQ4YmRmOTdiMjRiODM4ZGIxZmRlMGQy
N2VlYWNjLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQAU2NyaXB0QnVm
ZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UALmN0b3IASW5wdXRzRmluaXNoZWQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAUGlwZWxpbmVCdWZmZXIAT3V0cHV0TmFtZU1hcABQcm9jZXNzSW5wdXQARmlu
aXNoT3V0cHV0cwBNYXJrT3V0cHV0c0ZpbmlzaGVkAFByaW1lT3V0cHV0AENyZWF0ZU5ld091dHB1
dFJvd3MASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AF9leGNlcHRp
b25SZXBvcnRDcmVhdGVkAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAERpY3Rpb25hcnlgMgBf
ZXhjZXB0aW9uQ29kZXMAUHJlRXhlY3V0ZQBEYXRlVGltZQBEZWNpbWFsAFByb2Nlc3NUcmFuc2Fj
dGlvbkRhdGEAUG9zdEV4ZWN1dGUAR2V0QXJ0aXZhQWNjb3VudElEAEFkZE1haW50ZW5hbmNlUm93
AFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZQBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5S
ZWNvcmRzAEdlbmVyYWxQdXJwb3NlUmVjb3JkQmFzZQBUAEFkZEV4Y2VwdGlvblJlcG9ydERhdGEA
Z2V0X0RhdGEAZ2V0X0RhdGFfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQARGF0YQBEYXRhX0lz
TnVsbABzZXRfUm93RGF0YQBzZXRfUm93RGF0YV9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0
AFJvd0RhdGEAUm93RGF0YV9Jc051bGwAc2V0X1BsYWNlbWVudElEAHNldF9QbGFjZW1lbnRJRF9J
c051bGwAc2V0X0JhbGFuY2UAc2V0X0JhbGFuY2VfSXNOdWxsAHNldF9Qcm9vZgBzZXRfUHJvb2Zf
SXNOdWxsAHNldF9Db2RlAHNldF9Db2RlX0lzTnVsbABzZXRfQWNjb3VudElEAHNldF9BY2NvdW50
SURfSXNOdWxsAFBsYWNlbWVudElEAFBsYWNlbWVudElEX0lzTnVsbABCYWxhbmNlAEJhbGFuY2Vf
SXNOdWxsAFByb29mAFByb29mX0lzTnVsbABDb2RlAENvZGVfSXNOdWxsAEFjY291bnRJRABBY2Nv
dW50SURfSXNOdWxsAHNldF9EYXRhAHNldF9EYXRhX0lzTnVsbABQYXJlbnRDb21wb25lbnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lLldyYXBwZXIASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAGdldF9FeGNlcHRpb25SZXBv
cnRDb25uZWN0aW9uAGdldF9BcnRpdmFDb25uZWN0aW9uAEV4Y2VwdGlvblJlcG9ydENvbm5lY3Rp
b24AQXJ0aXZhQ29ubmVjdGlvbgBnZXRfQ2xpZW50SURzAGdldF9jdXJyZW50RmlsZQBDbGllbnRJ
RHMAY3VycmVudEZpbGUAU3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VN
YW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9S
ZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5z
dGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABJbnB1dElEAElucHV0TmFtZQBCdWZmZXIAT3V0cHV0
TWFwAE91dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAUm93AGFjY291bnRJRAB0eXBlAGRhdGUAYW1v
dW50AHByaW5jaXBhbABpbnRlcmVzdABjb3VydABhdHRvcm5leQBvdGhlcgBwYXlJRABkYXRhSUQA
cmVjb3JkAHMAQnVmZmVyQ29sdW1uSW5kZXhlcwB2YWx1ZQBDb21wb25lbnQAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAU3lzdGVtLlJlZmxlY3Rpb24A
QXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAQXNzZW1i
bHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAEFzc2VtYmx5VHJh
ZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0ZQBBc3NlbWJseVZlcnNpb25B
dHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBDb21waWxhdGlvblJlbGF4
YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFNDX2JjMzQ4YmRm
OTdiMjRiODM4ZGIxZmRlMGQyN2VlYWNjAFN0cmluZwBTdHJpbmdDb21wYXJpc29uAEVxdWFscwBH
ZXRDb2x1bW5JbmRleGVzAGdldF9FbmRPZlJvd3NldABHZXRPdXRwdXRJRABTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBZGQAQ2hhcgBTcGxpdABvcF9FcXVhbGl0eQBJc051
bGxPckVtcHR5AENvbmNhdABNaW5WYWx1ZQBJbnQzMgBUcnlQYXJzZQBDb250YWluc0tleQBnZXRf
SXRlbQBUb1Nob3J0RGF0ZVN0cmluZwBUb1N0cmluZwBTeXN0ZW0uVGV4dABTdHJpbmdCdWlsZGVy
AEFwcGVuZABGb3JtYXQAb3BfQWRkaXRpb24AUGF5bWVudF9QQVkAVHJhbnNhY3Rpb25UeXBlAEFj
Y291bnRJZABOdWxsYWJsZWAxAFRlbmRlckRhdGUAUGF5bWVudEFtb3VudABUcmFuc2FjdGlvblJl
ZmVyZW5jZQBBZGp1c3RtZW50X0FESgBvcF9MZXNzVGhhbgBQcmluY2lwYWxBZGp1c3RtZW50QW1v
dW50AGdldF9Db25uZWN0aW9uU3RyaW5nAFN5c3RlbS5JTwBGaWxlAERlbGV0ZQBTeXN0ZW0uRGF0
YQBTeXN0ZW0uRGF0YS5PZGJjAE9kYmNDb25uZWN0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBEYkNv
bm5lY3Rpb24AT3BlbgBPZGJjQ29tbWFuZABPZGJjRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAERi
RGF0YVJlYWRlcgBSZWFkAElEaXNwb3NhYmxlAERpc3Bvc2UATGlzdGAxAEZpbGVIZWxwZXJzAENv
bW1vbkVuZ2luZQBJRW51bWVyYWJsZWAxAFdyaXRlU3RyaW5nAFRvVXBwZXIAR2V0U3RyaW5nAElz
TnVsbABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24ATWljcm9zb2Z0
LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRh
AElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAAZ2V0X1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbgBJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAAR2V0UnVudGltZUNvbm5lY3Rpb25C
eU5hbWUAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5
VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRf
RXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250
ZXh0AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5cGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5
AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNDX2JjMzQ4YmRm
OTdiMjRiODM4ZGIxZmRlMGQyN2VlYWNjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAA
AA9JAG4AcAB1AHQAIAAwAAAXTQBhAGkAbgB0AGUAbgBhAG4AYwBlAAARTwBCAFIAZQBjAGEAbABs
AAAfRQB4AGMAZQBwAHQAaQBvAG4AUgBlAHAAbwByAHQAACtTAGUAdAB0AGwAZQBkACAAaQBuACAA
ZgB1AGwAbAAgACgAUwBJAEYAKQAALUQAUABDAE8AUgAtACAASABhAG4AZABsAGUAIABtAGEAbgB1
AGEAbABsAHkAAR9DAG8AbQBtAGkAcwBzAGkAbwBuACAATwBuAGwAeQAAK0MAbwBtAG0AaQBzAHMA
aQBvAG4AIABPAG4AbAB5ACAAQgBvAG4AdQBzAAAhVAB1AHIAbgAtAE8AbgAgAFIAZQB2AGUAcgBz
AGEAbAABJ0oAdQBkAGcAbQBlAG4AdAAgAEEAZABqAHUAcwB0AG0AZQBuAHQAACtDAG8AbgB2AGUA
cgBzAGkAbwBuACAAQQBkAGoAdQBzAHQAbQBlAG4AdAAAHUYAZQBlACAAQQBzAHMAZQBzAHMAbQBl
AG4AdAAAJ0YAZQBlACAAQQBzAHMAZQBzAHMAbQBlAG4AdAAgACgATgBSACkAACtDAG8AdQByAHQA
IABDAG8AcwB0ACAAQQBzAHMAZQBzAHMAbQBlAG4AdAAANUMAbwB1AHIAdAAgAEMAbwBzAHQAIABB
AHMAcwBlAHMAcwBtAGUAbgB0ACAAKABOAFIAKQAAE0YAaQBsAGUAIABTAHUAaQB0AAAlUAByAG8A
YwBlAHMAcwAgAFMAZQByAHYAZQByACAARgBlAGUAABtGAGkAbABlACAASgB1AGQAZwBtAGUAbgB0
AAAfVwBhAGcAZQAgAEEAdAB0AGEAYwBoAG0AZQBuAHQAACdOAG8AbgAtAFcAYQBnAGUAIABBAHQA
dABhAGMAaABtAGUAbgB0AAEJTABpAGUAbgAACUwAZQB2AHkAAA1NAG8AdABpAG8AbgAAJVAAbwBz
AHQALQBKAHUAZABnAG0AZQBuAHQAIABDAG8AcwB0AAErSgB1AGQAZwBtAGUAbgB0ACAAUwBhAHQA
aQBzAGYAYQBjAHQAaQBvAG4AADNOAG8AbgAtAFIAZQBjAG8AdgBlAHIAYQBiAGwAZQAgAEYAaQBs
AGUAIABTAHUAaQB0AAFFTgBvAG4ALQBSAGUAYwBvAHYAZQByAGEAYgBsAGUAIABQAHIAbwBjAGUA
cwBzACAAUwBlAHIAdgBlAHIAIABGAGUAZQABO04AbwBuAC0AUgBlAGMAbwB2AGUAcgBhAGIAbABl
ACAARgBpAGwAZQAgAEoAdQBkAGcAbQBlAG4AdAABP04AbwBuAC0AUgBlAGMAbwB2AGUAcgBhAGIA
bABlACAAVwBhAGcAZQAgAEEAdAB0AGEAYwBoAG0AZQBuAHQAAUdOAG8AbgAtAFIAZQBjAG8AdgBl
AHIAYQBiAGwAZQAgAE4AbwBuAC0AVwBhAGcAZQAgAEEAdAB0AGEAYwBoAG0AZQBuAHQAASlOAG8A
bgAtAFIAZQBjAG8AdgBlAHIAYQBiAGwAZQAgAEwAaQBlAG4AASlOAG8AbgAtAFIAZQBjAG8AdgBl
AHIAYQBiAGwAZQAgAEwAZQB2AHkAAS1OAG8AbgAtAFIAZQBjAG8AdgBlAHIAYQBiAGwAZQAgAE0A
bwB0AGkAbwBuAAFFTgBvAG4ALQBSAGUAYwBvAHYAZQByAGEAYgBsAGUAIABQAG8AcwB0AC0ASgB1
AGQAZwBtAGUAbgB0ACAAQwBvAHMAdAABS04AbwBuAC0AUgBlAGMAbwB2AGUAcgBhAGIAbABlACAA
SgB1AGQAZwBtAGUAbgB0ACAAUwBhAHQAaQBzAGYAYQBjAHQAaQBvAG4AAStBAHUAdABvACAAUgBl
AHAAbwBzAHMAZQBzAHMAaQBvAG4AIABGAGUAZQAAJ0oAdQBkAGcAbQBlAG4AdAAgAGEAZABqAHUA
cwB0AG0AZQBuAHQAADVKAHUAZABnAG0AZQBuAHQAIAB2AGEAYwBhAHQAZQAgAGEAZABqAHUAcwB0
AG0AZQBuAHQAAAlFAGMAaABvAAAPZABhAHQAYQBfAGkAZAAAgOdFAFYARQBSAFMATwBVAFIAQwBF
ACAAQQBDAEMATwBVAE4AVAAgAE4ATwBUACAARgBPAFUATgBEACAASQBOACAAQQBSAFQASQBWAEEA
LAAgAEMAcgBlAGQAaQB0AG8AcgAgAEkAbgB0AGUAcgBuAGEAbAAgAEMAbwBuAHMAdQBtAGUAcgAg
AEEAYwBjAG8AdQBuAHQAIABOAHUAbQBiAGUAcgAgAGYAcgBvAG0AIABJAEIALQBUAHIAYQBuAHMA
YQBjAHQAaQBvAG4AIABOAG8AdABpAGMAZQAgAGYAaQBsAGUAOgAgAAEjVAByAGEAbgBzAGEAYwB0
AGkAbwBuACAAdAB5AHAAZQAgAAAfIABmAG8AcgAgAGEAYwBjAG8AdQBuAHQAOgAsACAAAB0sACAA
dAByAGEAbgBfAGQAYQB0AGUAOgAgACAAACEsACAAdAByAGEAbgBfAGEAbQBvAHUAbgB0ADoAIAAg
AAAJMAAuADAAMAAAW1AAcgBpAG4AYwBpAHAAYQBsACAAcABvAHIAdABpAG8AbgAgAG8AZgAgAHQA
cgBhAG4AcwBhAGMAdABpAG8AbgAgAGkAcwAgAG0AaQBzAHMAaQBuAGcALAAgAABZSQBuAHQAZQBy
AGUAcwB0ACAAcABvAHIAdABpAG8AbgAgAG8AZgAgAHQAcgBhAG4AcwBhAGMAdABpAG8AbgAgAGkA
cwAgAG0AaQBzAHMAaQBuAGcALAAgAABrQQB0AHQAbwByAG4AZQB5ACAAYwBvAHMAdAAvAGYAZQBl
ACAAcABvAHIAdABpAG8AbgAgAG8AZgAgAHQAcgBhAG4AcwBhAGMAdABpAG8AbgAgAGkAcwAgAG0A
aQBzAHMAaQBuAGcALAAgAABTTwB0AGgAZQByACAAcABvAHIAdABpAG8AbgAgAG8AZgAgAHQAcgBh
AG4AcwBhAGMAdABpAG8AbgAgAGkAcwAgAG0AaQBzAHMAaQBuAGcALAAgAABdQwBvAHUAcgB0ACAA
YwBvAHMAdAAgAHAAbwByAHQAaQBvAG4AIABvAGYAIAB0AHIAYQBuAHMAYQBjAHQAaQBvAG4AIABp
AHMAIABtAGkAcwBzAGkAbgBnACwAIAAAJXsAMAB9AGYAbwByACAAYQBjAGMAbwB1AG4AdAAgAHsA
MQB9AAAFRABQAACApVMAdQBtACAAbwBmACAAdAByAGEAbgBzAGEAYwB0AGkAbwBuACAAQgB1AGMA
awBlAHQAcwAgAGkAcwAgAGQAaQBmAGYAZQByAGUAbgB0ACAAZgByAG8AbQAgAHQAcgBhAG4AcwBh
AGMAdABpAG8AbgAgAGEAbQBvAHUAbgB0ACcAIABmAG8AcgAgAGEAYwBjAG8AdQBuAHQAOgAsACAA
ewAwAH0AAQdEAEIASgAAB0MAUgBKAAABAIFPUwBFAEwARQBDAFQAIABUAE8AUAAgADEAIABBAFIA
QQBDAEkARAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIABGAFIATwBNACAAJQBTAFQAQQBSAFQAVABBAEIATABFACAAQQBSAEMA
TABJAEUATgBUAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIAQQBDAEMATwBVAE4A
VAAgAE8ATgAgAEEAUgBDAEwASQBEACAAPQAgAEEAUgBBAEMAQwBMAFQASQBEACAAQQBOAEQAIABB
AFIAQwBMAEkARAAgAEkATgAgAACB0QoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIA
RQBOAFQASQBUAFkAIABPAE4AIABBAFIAQQBDAEMATwBVAE4AVAAuAEEAUgBBAEMAUgBQAEkARAAg
AD0AIABBAFIARQBOAEkARAAKACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAFoAWgBCAEEATgBL
AFIAVQBQAFQAQwBZACAATwBOACAAWgBaAEIASwBFAE4ASQBEACAAPQAgAEEAUgBFAE4ASQBEAAoA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgAFcASABFAFIARQAgAEEAUgBBAEMAQwBPAFUATgBUAC4AWgBaAEEAQwBDAFIARQBEAEkA
TgBUAEMATwBOAFMAQQBDAE4AVQBNACAAPQAgACcAAQMnAAENQQBSAEEAQwBJAEQAAICbSQBzAE4A
dQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABv
ACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgA
ZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAzRQB4AGMAZQBwAHQAaQBvAG4AUgBl
AHAAbwByAHQAQwBvAG4AbgBlAGMAdABpAG8AbgAAIUEAcgB0AGkAdgBhAEMAbwBuAG4AZQBjAHQA
aQBvAG4AABNDAGwAaQBlAG4AdABJAEQAcwAAF2MAdQByAHIAZQBuAHQARgBpAGwAZQAAcVMAQwBf
AGIAYwAzADQAOABiAGQAZgA5ADcAYgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUA
ZQBhAGMAYwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAADayJW1
a4jtSrekb8bSWFPAAAiJhF3NgIDMkQi3elxWGTTgiQMGEiADBhIkAyAAAQMGEhQDBhIYAwYSHAIG
CAkgBAEIDhIVEhkLIAQBCB0IHRIVEhkFIAEBEhACBgIHBhUSHQIIDhQgCgEOCBEhESURJRElESUR
JRElDgQgAQ4OBjABAQEeAAj6DO1KRVGnggQgAQEOCSADARIVHQgSGQMgAA4DIAACAygADgMoAAIE
IAEBAgUgAQERJQQoABElAwYSBQUgAQESBQQgABItBCgAEi0DBhIxAwYSNQQAABIxBAAAEjUFAAEB
EjUECAASMQQIABI1AwYSLAQAABIsBAgAEiwEIAEBCAYgAgIOEW0FIAEdCAgGAAIIEhkOAwcBCAQB
AAAABhUSHQIIDgcgAgETABMBCAcBFRIdAggOBiABHQ4dAwUAAgIODgQAAQIOBQACDg4OAwYRIQYA
AgIOEAgHAAICDhARIQcAAgIOEBElIAcVHQ4ODg4ODg4ODg4ODggRIRElESURJRElESURJR0DBSAB
AhMABiABEwETAAUAAQ4dDgcAAgIRJRElBSABEn0OBgADDg4cHAgAAhElESURJQUgAQIRJQIGDgcV
EYCFAREhBSABARMACAYVEYCFAREhAwYRJQUKARKAgQUAAg4OHAUKARKAiQ8HBhJ9EoCBEn0SgIkd
DggEAAEBDgcgAgEOEoCRBSAAEoCdBCABHA4PBwYOEoCRDhKAmRKAnR0OBxUSgKkBHgAIPgwI1ZzD
1lcLEAEBDhUSgLEBHgAECgEeAAoHAhUSgKkBHgAOAwYSFQMGHQgEIAEOCAQgAQIIBSACAQgcBSAA
EoC5BSAAEoC9BiABEoDBDgUgABKAxQYgARKAyRwFAAASgM0GIAEcEoDRCAABEoDZEYDdBSAAEoDh
ByACAQ4SgOEEBwESMQYgAQERgOkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDX2Jj
MzQ4YmRmOTdiMjRiODM4ZGIxZmRlMGQyN2VlYWNjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIw
MTcAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEAdFwAAAAAAAAAAAAA
jlwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBcAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAACwAwAAAAAAAAAAAACw
AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA1G2gHwAA
AQDUbaAfPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEEAMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAA7AIAAAEAMAAwADAAMAAwADQAYgAwAAAAcAAkAAEARgBp
AGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfAGIAYwAzADQAOABiAGQAZgA5ADcA
YgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUAZQBhAGMAYwAAAEAADwABAEYAaQBs
AGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADAAOQA2AC4AMgA4ADEAMQA2AAAAAABwACgA
AQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGIAYwAzADQAOABiAGQAZgA5ADcAYgAy
ADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUAZQBhAGMAYwAuAGQAbABsAAAASAASAAEA
TABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAy
ADAAMQA3AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGIA
YwAzADQAOABiAGQAZgA5ADcAYgAyADQAYgA4ADMAOABkAGIAMQBmAGQAZQAwAGQAMgA3AGUAZQBh
AGMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBiAGMA
MwA0ADgAYgBkAGYAOQA3AGIAMgA0AGIAOAAzADgAZABiADEAZgBkAGUAMABkADIANwBlAGUAYQBj
AGMAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADgAMAA5ADYA
LgAyADgAMQAxADYAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADgAMAA5ADYALgAyADgAMQAxADYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAoDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bc348bdf97b24b838db1fde0d27eeacc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::currentFile,$Project::ClientIDs</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">9f93e594d40c568772b07bbf13fa1d81</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">0d08e05147fbd24addfe5d7441605cc5ab1c4608</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Connections[ExceptionReportConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="ExceptionReportConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Connections[ArtivaConnection]"
                      connectionManagerID="Package.ConnectionManagers[Artiva]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva]"
                      name="ArtivaConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Inputs[Input 0].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          lineageId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[Maintenance]"
                      hasSideEffects="true"
                      name="Maintenance">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          name="RowData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall]"
                      hasSideEffects="true"
                      name="OBRecall">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          name="PlacementID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          name="Balance"
                          precision="15"
                          scale="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          name="Proof" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          name="Code" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          name="AccountID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[ExceptionReport]"
                      hasSideEffects="true"
                      name="ExceptionReport">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Read Files.Paths[ExceptionReport]"
                  endId="Package\Foreach Loop Container\Read Files\Exception File.Inputs[Flat File Destination Input]"
                  name="ExceptionReport"
                  startId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[ExceptionReport]" />
                <path
                  refId="Package\Foreach Loop Container\Read Files.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Read Files\Script Component.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Read Files\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Read Files.Paths[Maintenance]"
                  endId="Package\Foreach Loop Container\Read Files\Maintenance File.Inputs[Flat File Destination Input]"
                  name="Maintenance"
                  startId="Package\Foreach Loop Container\Read Files\Script Component.Outputs[Maintenance]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{CF4B5ED6-5145-4011-B7CB-F8EC5757414D}"
          DTS:ObjectName="{CF4B5ED6-5145-4011-B7CB-F8EC5757414D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::currentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Foreach Loop Container\Read Files"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="150,103"
          Size="147,146"
          Id="Package\Foreach Loop Container"
          TopLeft="5.50000000000003,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Read Files">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Read Files\Script Component"
          TopLeft="231,107.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Loop Container\Read Files\Flat File Source"
          TopLeft="237,5.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Read Files\Maintenance File"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="146,42"
          Id="Package\Foreach Loop Container\Read Files\Exception File"
          TopLeft="468.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Read Files.Paths[Flat File Source Output]"
          TopLeft="313.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Read Files.Paths[ExceptionReport]"
          TopLeft="339.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="201.833333333333,60"
              Start="0,0"
              End="201.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="197.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="197.833333333333,24.3457382953181"
                    Point2="201.833333333333,24.3457382953181"
                    Point3="201.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="201.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="64.3052799479165,29.3457382953181,73.2227734375,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Read Files.Paths[Maintenance]"
          TopLeft="287.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.833333333333,60"
              Start="0,0"
              End="-201.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="-4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="-197.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.833333333333,24.3457382953181"
                    Point2="-201.833333333333,24.3457382953181"
                    Point3="-201.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="-201.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-129.273014322917,29.3457382953181,56.7126953125,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>