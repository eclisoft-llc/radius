<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/12/2018 7:23:44 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-002"
  DTS:CreatorName="CORP\aaishinsky"
  DTS:DTSID="{1FC2AE4B-6BD5-4AE5-A362-8EBC8035CF5C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IB-Change Log"
  DTS:PackageType="5"
  DTS:VersionBuild="101"
  DTS:VersionGUID="{F5E4CADA-49AE-439D-BE0B-2B703B555C7C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Artiva]"
      DTS:CreationName="ODBC"
      DTS:DTSID="{B546863B-C379-42E4-BD71-3BDCFA5EC6F5}"
      DTS:ObjectName="Artiva">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Dsn="+ @[$Project::Namespace] +";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Dsn=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ChangeFile]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{348425AD-5BF2-4653-891F-F7B8FA06FD03}"
      DTS:ObjectName="ChangeFile">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "In\\" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\In\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{FBAEDD12-010C-494E-A171-64929D9B6315}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exception Report]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{8FE9EEAE-BC19-4390-BDD5-27FC9D35A3BC}"
      DTS:ObjectName="Exception Report">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::exceptionReportFilename]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\Out\ExceptionReport-Philadelphia Gas Works-0.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{8932EA80-0AB9-4CA8-8591-47E97D3CE69F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Maintenance File]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{96B9A593-C1EC-408F-8F2A-8F1245255671}"
      DTS:ObjectName="Maintenance File">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Project::LocalPath] + "\\Out\\ArtivaMT-" + @[$Project::Namespace] + "-" + @[$Project::ClientName] + "-" +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\PhiladelphiaGasWorks\\Out\ArtivaMT-THIRDPROD-Philadelphia Gas Works-0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Column 0"
              DTS:DTSID="{E2FCCA30-D3F0-4D2E-BE3A-1070FC037F3B}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Like *Recall*.txt or whatever the inbound file is"
      DTS:DTSID="{B1F0F77F-899D-4B93-8A18-0DCB738D6797}"
      DTS:ObjectName="InboundFileMask"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">change_*.txt</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F903E8F9-CAB0-445F-B865-D0B82017EE3B}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{299A4428-B401-40FA-8334-DF0FB000CA4D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + &quot;Out\\ExceptionReport-&quot; +   @[$Project::ClientName] + &quot;-&quot; +  @[User::currentFile] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="exceptionReportFilename">
      <DTS:VariableValue
        DTS:DataType="8">M:\PhiladelphiaGasWorks\Out\ExceptionReport-Philadelphia Gas Works-0.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{4C182322-2181-40B1-BFB9-653177155DAB}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{449D55EB-26F3-4926-8259-8CF5B1B1EEF4}"
        DTS:ObjectName="{7F315AC7-562B-4D2F-94CD-BE17D478728F}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[$Project::LocalPath] + "\\In\\"</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\PhiladelphiaGasWorks\\In\" />
            <FEFEProperty
              FileSpec="change_*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Create Files"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{98E21E2C-773B-497B-847D-0EFEEA8BDF5D}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create Files"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Flat File Destination"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Flat File Destination">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[ChangeFile]"
                      connectionManagerRefId="Package.ConnectionManagers[ChangeFile]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]"
                          name="Data"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Maintenance File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Maintenance File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Maintenance File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Maintenance File]"
                      connectionManagerRefId="Package.ConnectionManagers[Maintenance File]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].Columns[RowData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="RowData"
                          externalMetadataColumnId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input].ExternalColumns[Column 0]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Column 0" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Create Files\Script Component"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Namespaces
using FileHelpers;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.IO;
using System.Linq;
using System.Linq.Expressions;
using System.Data;
#endregion

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private bool _exceptionReportCreated = false;
    private List<RecordEntity> RecordList = new List<RecordEntity>();
    private List<string> ErrorList = new List<string>();
    private List<string> DataList = new List<string>();
    OdbcConnection conn = null;

    private string[] UpdateFieldsCollection = {
        "pri_last","pri_middle","pri_first","pri_add1","pri_add2","pri_city","pri_state","pri_zip","pri_company","pri_email","lastpayment","lastpaymentamt",
        "pri_ssn","pri_driverlicense","pri_taxid","pri_suffix","pri_title","pri_driverlicense_state","pri_alias","pri_dob","sec_alias","sec_ssn",
        "sec_driverlicense","sec_last","sec_middle","sec_first","sec_company","sec_add1","sec_add2","sec_city","sec_state","sec_zip","sec_suffix",
        "sec_title","sec_driverlicense_state","sec_dob","pri_phone_01_number","pri_phone_01_extension","pri_phone_01_type","pri_phone_01_status",
        "pri_phone_02_number","pri_phone_02_extension","pri_phone_02_type","pri_phone_02_status","pri_phone_03_number","pri_phone_03_extension",
        "pri_phone_03_type","pri_phone_03_status","pri_phone_04_number","pri_phone_04_extension","pri_phone_04_type","pri_phone_04_status"};

    public override void PreExecute()
    {
        base.PreExecute();
        conn = new OdbcConnection(Connections.ArtivaConnection.ConnectionString);
        conn.Open();
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string[] cols = Row.Data.Split(',');
        if (cols.Length == 0 || cols[0] == "data_id")
            return;

        string data_id = cols[0].Replace("\"", "");
        string pri_acctno = cols[1].Replace("\"", "");
        string update_field = cols[2].Replace("\"", "");
        string new_value = cols[3].Replace("\"", "");
        string previous_value = cols[4].Replace("\"", "");

        DbData data = new DbData();
        GetArtivaData(data_id, out data);

        RecordEntity entity = new RecordEntity(data.accountID, data_id, pri_acctno, update_field, new_value, previous_value, data);
        if (string.IsNullOrEmpty(entity.account_id))
        {
            AddExceptionReportBuffer("Account not found in artiva for client reference number " + entity.data_id);
            return;
        }

        RecordList.Add(entity);
    }

    public override void PostExecute()
    {
        base.PostExecute();
        processFileData();

        writeData();

        if (_exceptionReportCreated)
            File.WriteAllLines(Connections.ExceptionReportConnection.ConnectionString, ErrorList.ToArray());
        else
            System.IO.File.Delete(Connections.ExceptionReportConnection.ConnectionString);

        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }
    }

    private void writeData()
    {
        File.WriteAllLines(Connections.MaintenanceFileConnection.ConnectionString, DataList.ToArray());
    }

    private void processFileData()
    {
        List<string> ids = new List<string>();
        ids = RecordList.Select(x => x.account_id).Distinct().ToList();

        foreach (string id in ids)
        {
            string pri_last = string.Empty;
            string pri_middle = string.Empty;
            string pri_first = string.Empty;
            string pri_add1 = string.Empty;
            string pri_add2 = string.Empty;
            string pri_city = string.Empty;
            string pri_state = string.Empty;
            string pri_zip = string.Empty;
            string pri_company = string.Empty;
            string pri_email = string.Empty;
            string lastpayment = string.Empty;
            string lastpaymentamt = string.Empty;
            string pri_ssn = string.Empty;
            string pri_driverlicense = string.Empty;
            string pri_taxid = string.Empty;
            string pri_suffix = string.Empty;
            string pri_title = string.Empty;
            string pri_driverlicense_state = string.Empty;
            string pri_alias = string.Empty;
            string pri_dob = string.Empty;
            string sec_alias = string.Empty;
            string sec_ssn = string.Empty;
            string sec_driverlicense = string.Empty;
            string sec_last = string.Empty;
            string sec_middle = string.Empty;
            string sec_first = string.Empty;
            string sec_company = string.Empty;
            string sec_add1 = string.Empty;
            string sec_add2 = string.Empty;
            string sec_city = string.Empty;
            string sec_state = string.Empty;
            string sec_zip = string.Empty;
            string sec_suffix = string.Empty;
            string sec_title = string.Empty;
            string sec_driverlicense_state = string.Empty;
            string sec_dob = string.Empty;
            string pri_phone_01_number = string.Empty;
            string pri_phone_01_extension = string.Empty;
            string pri_phone_01_type = string.Empty;
            string pri_phone_01_status = string.Empty;
            string pri_phone_02_number = string.Empty;
            string pri_phone_02_extension = string.Empty;
            string pri_phone_02_type = string.Empty;
            string pri_phone_02_status = string.Empty;
            string pri_phone_03_number = string.Empty;
            string pri_phone_03_extension = string.Empty;
            string pri_phone_03_type = string.Empty;
            string pri_phone_03_status = string.Empty;
            string pri_phone_04_number = string.Empty;
            string pri_phone_04_extension = string.Empty;
            string pri_phone_04_type = string.Empty;
            string pri_phone_04_status = string.Empty;

            string name = string.Empty;

            bool isUpdUpdated = false;

            int count = 0;

            List<RecordEntity> list = RecordList.Where(x => x.account_id.Equals(id)).OrderBy(x => x.update_field).ToList();
            foreach (RecordEntity item in list)
            {
                if (item.artivaData == null || string.IsNullOrEmpty(item.artivaData.accountID))
                {
                    _exceptionReportCreated = true;

                    ExceptionReportBuffer.AddRow();
                    ExceptionReportBuffer.Data = "EVERSOURCE ACCOUNT NOT FOUND IN ARTIVA, Creditor Internal Consumer Account Number from IB-Change Log file: " + item.data_id;
                }
                else
                {
                    count++;

                    if (UpdateFieldsCollection.Contains(item.update_field))
                    {
                        switch (item.update_field)
                        {
                            case "pri_last":
                                pri_last = item.new_value;

                                if (!item.artivaData.pri_last.Equals(pri_last, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(pri_last);

                                name = string.Format("{0} {1}", pri_first, pri_middle);
                                if (!item.artivaData.pri_first.Equals(name, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(name);

                                break;
                            case "pri_middle":
                                pri_middle = item.new_value;

                                name = string.Format("{0} {1}", pri_first, pri_middle);
                                if (!item.artivaData.pri_first.Equals(name, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(name);

                                break;
                            case "pri_first":
                                pri_first = item.new_value;
                                break;
                            case "pri_add1":
                                pri_add1 = item.new_value;
                                break;
                            case "pri_add2":
                                pri_add2 = item.new_value;
                                break;
                            case "pri_city":
                                pri_city = item.new_value;
                                break;
                            case "pri_state":
                                pri_state = item.new_value;
                                break;
                            case "pri_zip":
                                pri_zip = item.new_value;
                                break;
                            case "pri_company":
                                pri_company = item.new_value;

                                if (!string.IsNullOrEmpty(pri_company))
                                    AddExceptionReportBuffer(pri_company);

                                break;
                            case "pri_email":
                                pri_email = item.new_value;

                                if (!item.artivaData.pri_email.Equals(pri_email, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(pri_email);

                                break;
                            case "lastpayment":
                                lastpayment = item.new_value;

                                DateTime date = DateTime.MinValue;
                                DateTime artivaDate = DateTime.MinValue;

                                DateTime.TryParse(lastpayment, out date);
                                DateTime.TryParse(item.artivaData.lastpayment, out artivaDate);

                                if (!artivaDate.ToShortDateString().Equals(date.ToShortDateString(), StringComparison.InvariantCultureIgnoreCase))
                                {
                                    if (artivaDate < date)
                                    {
                                        isUpdUpdated = true;
                                        AddUpd(lastpayment.ToString(), "ARACCLCRLPYPDTE", id);
                                    }
                                }

                                break;
                            case "lastpaymentamt":
                                lastpaymentamt = item.new_value;

                                decimal amount = decimal.Parse(lastpaymentamt);
                                if (!item.artivaData.lastpaymentamt.Equals(amount))
                                    if (isUpdUpdated)
                                        AddUpd(lastpaymentamt.ToString(), "ARACCLCRLPYAMT", id);

                                break;
                            case "pri_ssn":
                                pri_ssn = item.new_value;

                                if (!item.artivaData.pri_ssn.Equals(pri_ssn, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(pri_ssn);

                                break;
                            case "pri_driverlicense":
                                pri_driverlicense = item.new_value;

                                if (!item.artivaData.pri_driverlicense.Equals(pri_driverlicense, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(pri_driverlicense);

                                break;
                            case "pri_taxid":
                                pri_taxid = item.new_value;

                                if (!string.IsNullOrEmpty(pri_taxid))
                                    AddExceptionReportBuffer(pri_taxid);

                                break;
                            case "pri_suffix":
                                pri_suffix = item.new_value;

                                if (!string.IsNullOrEmpty(pri_suffix))
                                    AddExceptionReportBuffer(pri_suffix);

                                break;
                            case "pri_title":
                                pri_title = item.new_value;

                                if (!string.IsNullOrEmpty(pri_title))
                                    AddExceptionReportBuffer(pri_title);

                                break;
                            case "pri_driverlicense_state":
                                pri_driverlicense_state = item.new_value;

                                if (!string.IsNullOrEmpty(pri_driverlicense_state))
                                    AddExceptionReportBuffer(pri_driverlicense_state);

                                break;
                            case "pri_alias":
                                pri_alias = item.new_value;

                                if (!string.IsNullOrEmpty(sec_alias))
                                    AddExceptionReportBuffer(sec_alias);

                                break;
                            case "pri_dob":
                                pri_dob = item.new_value;

                                if (!item.artivaData.pri_dob.Equals(pri_dob, StringComparison.InvariantCultureIgnoreCase))
                                    AddExceptionReportBuffer(pri_dob);

                                break;
                            case "sec_alias":
                                sec_alias = item.new_value;

                                if (!string.IsNullOrEmpty(pri_alias))
                                    AddExceptionReportBuffer(pri_alias);

                                break;
                            case "sec_ssn":
                                sec_ssn = item.new_value;

                                if (!string.IsNullOrEmpty(sec_ssn))
                                    AddExceptionReportBuffer(sec_ssn);

                                break;
                            case "sec_driverlicense":
                                sec_driverlicense = item.new_value;

                                if (!string.IsNullOrEmpty(sec_driverlicense))
                                    AddExceptionReportBuffer(sec_driverlicense);

                                break;
                            case "sec_last":
                                sec_last = item.new_value;

                                if (!string.IsNullOrEmpty(sec_last))
                                    AddExceptionReportBuffer(sec_last);

                                break;
                            case "sec_middle":
                                sec_middle = item.new_value;

                                if (!string.IsNullOrEmpty(sec_middle))
                                    AddExceptionReportBuffer(sec_middle);

                                break;
                            case "sec_first":
                                sec_first = item.new_value;

                                if (!string.IsNullOrEmpty(sec_first))
                                    AddExceptionReportBuffer(sec_first);

                                break;
                            case "sec_company":
                                sec_company = item.new_value;

                                if (!string.IsNullOrEmpty(sec_company))
                                    AddExceptionReportBuffer(sec_company);

                                break;
                            case "sec_add1":
                                sec_add1 = item.new_value;

                                if (!string.IsNullOrEmpty(sec_add1))
                                    AddExceptionReportBuffer(sec_add1);

                                break;
                            case "sec_add2":
                                sec_add2 = item.new_value;

                                if (!string.IsNullOrEmpty(sec_add2))
                                    AddExceptionReportBuffer(sec_add2);

                                break;
                            case "sec_city":
                                sec_city = item.new_value;

                                if (!string.IsNullOrEmpty(sec_city))
                                    AddExceptionReportBuffer(sec_city);

                                break;
                            case "sec_state":
                                sec_state = item.new_value;

                                if (!string.IsNullOrEmpty(sec_state))
                                    AddExceptionReportBuffer(sec_state);

                                break;
                            case "sec_zip":
                                sec_zip = item.new_value;

                                if (!string.IsNullOrEmpty(sec_zip))
                                    AddExceptionReportBuffer(sec_zip);

                                break;
                            case "sec_suffix":
                                sec_suffix = item.new_value;

                                if (!string.IsNullOrEmpty(sec_suffix))
                                    AddExceptionReportBuffer(sec_suffix);

                                break;
                            case "sec_title":
                                sec_title = item.new_value;

                                if (!string.IsNullOrEmpty(sec_title))
                                    AddExceptionReportBuffer(sec_title);

                                break;
                            case "sec_driverlicense_state":
                                sec_driverlicense_state = item.new_value;

                                if (!string.IsNullOrEmpty(sec_driverlicense_state))
                                    AddExceptionReportBuffer(sec_driverlicense_state);

                                break;
                            case "sec_dob":
                                sec_dob = item.new_value;

                                if (!string.IsNullOrEmpty(sec_dob))
                                    AddExceptionReportBuffer(sec_dob);

                                break;
                            case "pri_phone_01_number":
                                pri_phone_01_number = item.new_value;
                                break;
                            case "pri_phone_01_extension":
                                pri_phone_01_extension = item.new_value;
                                break;
                            case "pri_phone_01_type":
                                pri_phone_01_type = item.new_value;
                                break;
                            case "pri_phone_01_status":
                                pri_phone_01_status = item.new_value;
                                break;
                            case "pri_phone_02_number":
                                pri_phone_02_number = item.new_value;
                                break;
                            case "pri_phone_02_extension":
                                pri_phone_02_extension = item.new_value;
                                break;
                            case "pri_phone_02_type":
                                pri_phone_02_type = item.new_value;
                                break;
                            case "pri_phone_02_status":
                                pri_phone_02_status = item.new_value;
                                break;
                            case "pri_phone_03_number":
                                pri_phone_03_number = item.new_value;
                                break;
                            case "pri_phone_03_extension":
                                pri_phone_03_extension = item.new_value;
                                break;
                            case "pri_phone_03_type":
                                pri_phone_03_type = item.new_value;
                                break;
                            case "pri_phone_03_status":
                                pri_phone_03_status = item.new_value;
                                break;
                            case "pri_phone_04_number":
                                pri_phone_04_number = item.new_value;
                                break;
                            case "pri_phone_04_extension":
                                pri_phone_04_extension = item.new_value;
                                break;
                            case "pri_phone_04_type":
                                pri_phone_04_type = item.new_value;
                                break;
                            case "pri_phone_04_status":
                                pri_phone_04_status = item.new_value;
                                break;
                        }
                    }
                    else
                    {

                    }

                    if (count.Equals(list.Count))
                    {
                        if (string.IsNullOrEmpty(pri_add1) && string.IsNullOrEmpty(pri_add1) && string.IsNullOrEmpty(pri_add2) &&
                            string.IsNullOrEmpty(pri_city) && string.IsNullOrEmpty(pri_state) && string.IsNullOrEmpty(pri_zip))
                        {

                        }
                        else
                        {
                            PossibleAddresses_706 possibleAddresses706 = new PossibleAddresses_706();
                            possibleAddresses706.AccountId = id;
                            possibleAddresses706.AddressLine1 = pri_add1;
                            possibleAddresses706.AddressLine2 = pri_add2;
                            possibleAddresses706.City = pri_city;
                            possibleAddresses706.State = pri_state;
                            possibleAddresses706.ZipCode = pri_zip;

                            AddDataRow(possibleAddresses706);
                        }

                        if (string.IsNullOrEmpty(pri_phone_01_number) && string.IsNullOrEmpty(pri_phone_01_extension) &&
                            string.IsNullOrEmpty(pri_phone_01_type) && string.IsNullOrEmpty(pri_phone_01_status))
                        {

                        }
                        else
                        {
                            PossiblePhones_208 possiblePhones208_1 = new PossiblePhones_208();
                            possiblePhones208_1.AccountId = id;
                            possiblePhones208_1.PhoneNumber = pri_phone_01_number;
                            possiblePhones208_1.Extension = pri_phone_01_extension;
                            possiblePhones208_1.PhoneType = pri_phone_01_type;
                            possiblePhones208_1.PhoneStatus = pri_phone_01_status;

                            AddDataRow(possiblePhones208_1);
                        }

                        if (string.IsNullOrEmpty(pri_phone_02_number) && string.IsNullOrEmpty(pri_phone_02_extension) &&
                            string.IsNullOrEmpty(pri_phone_02_type) && string.IsNullOrEmpty(pri_phone_02_status))
                        {

                        }
                        else
                        {
                            PossiblePhones_208 possiblePhones208_2 = new PossiblePhones_208();
                            possiblePhones208_2.AccountId = id;
                            possiblePhones208_2.PhoneNumber = pri_phone_01_number;
                            possiblePhones208_2.Extension = pri_phone_01_extension;
                            possiblePhones208_2.PhoneType = pri_phone_01_type;
                            possiblePhones208_2.PhoneStatus = pri_phone_01_status;

                            AddDataRow(possiblePhones208_2);
                        }

                        if (string.IsNullOrEmpty(pri_phone_03_number) && string.IsNullOrEmpty(pri_phone_03_extension) &&
                            string.IsNullOrEmpty(pri_phone_03_type) && string.IsNullOrEmpty(pri_phone_03_status))
                        {

                        }
                        else
                        {
                            PossiblePhones_208 possiblePhones208_3 = new PossiblePhones_208();
                            possiblePhones208_3.AccountId = id;
                            possiblePhones208_3.PhoneNumber = pri_phone_01_number;
                            possiblePhones208_3.Extension = pri_phone_01_extension;
                            possiblePhones208_3.PhoneType = pri_phone_01_type;
                            possiblePhones208_3.PhoneStatus = pri_phone_01_status;

                            AddDataRow(possiblePhones208_3);
                        }

                        if (string.IsNullOrEmpty(pri_phone_04_number) && string.IsNullOrEmpty(pri_phone_04_extension) &&
                            string.IsNullOrEmpty(pri_phone_04_type) && string.IsNullOrEmpty(pri_phone_04_status))
                        {

                        }
                        else
                        {
                            PossiblePhones_208 possiblePhones208_4 = new PossiblePhones_208();
                            possiblePhones208_4.AccountId = id;
                            possiblePhones208_4.PhoneNumber = pri_phone_01_number;
                            possiblePhones208_4.Extension = pri_phone_01_extension;
                            possiblePhones208_4.PhoneType = pri_phone_01_type;
                            possiblePhones208_4.PhoneStatus = pri_phone_01_status;
                            
                            AddDataRow(possiblePhones208_4);
                        }
                    }
                }
            }
        }
    }

    private void GetArtivaData(string dataID, out DbData data)
    {
        data = new DbData();

        if (conn.State != ConnectionState.Open)
            conn.Open();

        string query = @"SELECT ARACID,ARENLNM,ARENFNM,ARENEMAIL,ARACCLCRLPYPDTE,ARACCLCRLPYAMT,ARENSSN,ARENDRVLIC,ARENBTHDTE
                                FROM %STARTTABLE ARCLIENT
                                INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN " + Variables.ClientIDs + @"
                                INNER JOIN ARENTITY ON ARACCOUNT.ARACRPID = ARENID
                                WHERE ARACCOUNT.ZZACCREDINTCONSACNUM = '" + dataID + "'";

        using (var command = new OdbcCommand(query, conn))
        {
            using (var reader = command.ExecuteReader())
            {
                while (reader.Read())
                {
                    data = new DbData();
                    data.accountID = reader["ARACID"].ToString();
                    data.lastpayment = reader["ARACCLCRLPYPDTE"].ToString();
                    data.lastpaymentamt = decimal.Parse(reader["ARACCLCRLPYAMT"].ToString());
                    data.pri_dob = reader["ARENBTHDTE"].ToString();
                    data.pri_driverlicense = reader["ARENDRVLIC"].ToString();
                    data.pri_email = reader["ARENEMAIL"].ToString();
                    data.pri_first = reader["ARENFNM"].ToString();
                    data.pri_last = reader["ARENLNM"].ToString();
                    data.pri_ssn = reader["ARENSSN"].ToString();
                }
            }
        }
    }

    private void AddDataRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);

        DataList.Add(recordString);
    }

    private void AddExceptionReportBuffer(string s)
    {
        ErrorList.Add(s);
    }

    private void AddUpd(string s, string fieldName, string acount)
    {
        UpdateAccount_UPD u = new UpdateAccount_UPD();

        if (!string.IsNullOrEmpty(s))
        {
            u = new UpdateAccount_UPD();
            u.AccountId = acount;
            u.UpdateField = fieldName;
            u.UpdateValue = s;

            AddDataRow(u);
        }
    }
}

public class DbData
{
    public string accountID { get; set; }
    public string pri_last { get; set; } 
    public string pri_first { get; set; }
    public string pri_email { get; set; }
    public string lastpayment { get; set; }
    public decimal lastpaymentamt { get; set; }
    public string pri_ssn { get; set; }
    public string pri_driverlicense { get; set; }
    public string pri_dob { get; set; }
}

public class RecordEntity
{
    public string account_id { get; set; }
    public string data_id { get; set; }
    public string pri_acctno { get; set; }
    public string update_field { get; set; }
    public string new_value { get; set; }
    public string previous_value { get; set; }
    public DbData artivaData { get; set; }

    public RecordEntity() { artivaData = new DbData(); }

    public RecordEntity(string accountID, string dataID, string priAcctNo, string fieldName, string newValue, string previousValue)
        : this()
    {
        this.account_id = accountID;
        this.data_id = dataID;
        this.pri_acctno = priAcctNo;
        this.update_field = fieldName;
        this.new_value = newValue;
        this.previous_value = previousValue;
    }

    public RecordEntity(string accountID, string dataID, string priAcctNo, string fieldName, string newValue, string previousValue, DbData data)
        : this()
    {
        this.account_id = accountID;
        this.data_id = dataID;
        this.pri_acctno = priAcctNo;
        this.update_field = fieldName;
        this.new_value = newValue;
        this.previous_value = previousValue;
        this.artivaData = data;
    }
}]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Data_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class MaintenanceBuffer: ScriptBuffer

{
    public MaintenanceBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RowData
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class OBRecallBuffer: ScriptBuffer

{
    public OBRecallBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PlacementID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool PlacementID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Balance
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Balance_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Proof
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Proof_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Code
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Code_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String AccountID
    {
        set
        {
            this[4] = value;
        }
    }
    public bool AccountID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionReportBuffer: ScriptBuffer

{
    public ExceptionReportBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public MaintenanceBuffer MaintenanceBuffer;

    public OBRecallBuffer OBRecallBuffer;

    public ExceptionReportBuffer ExceptionReportBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != MaintenanceBuffer)
        {
            MaintenanceBuffer.SetEndOfRowset();
            MaintenanceBuffer = null;
        }

        if (null != OBRecallBuffer)
        {
            OBRecallBuffer.SetEndOfRowset();
            OBRecallBuffer = null;
        }

        if (null != ExceptionReportBuffer)
        {
            ExceptionReportBuffer.SetEndOfRowset();
            ExceptionReportBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Maintenance"))
            {
                MaintenanceBuffer = new MaintenanceBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"OBRecall"))
            {
                OBRecallBuffer = new OBRecallBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ExceptionReport"))
            {
                ExceptionReportBuffer = new ExceptionReportBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 MaintenanceFileConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"MaintenanceFileConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ExceptionReportConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionReportConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ArtivaConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ArtivaConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientIDs
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientIDs"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String currentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["currentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{1E1BB231-0F5C-4B88-AC85-23CFF8D6CA4E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bc348bdf97b24b838db1fde0d27eeacc</RootNamespace>
    <AssemblyName>SC_bc348bdf97b24b838db1fde0d27eeacc</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.0.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
      <DesignTime>True</DesignTime>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
      <DesignTimeSharedInput>True</DesignTimeSharedInput>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <WCFMetadata Include="Service References\" />
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebug80ed4bd7-141d-4bec-a7bd-8b0dd22b3bce/fd3ef6aa-4ba9-40af-a2ca-43699eee0a56&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Settings.get_Default():SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Sett" +
    "ings")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:CodeName>
		<msb:ProjectId>{43C3A275-A769-46E8-AC3F-179A9FF6ADCC}</msb:ProjectId>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_bc348bdf97b24b838db1fde0d27eeacc</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_bc348bdf97b24b838db1fde0d27eeacc.csproj"/>
		<msb:Folder Include="Service References\"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_bc348bdf97b24b838db1fde0d27eeacc")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bc348bdf97b24b838db1fde0d27eeacc.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bc348bdf97b24b838db1fde0d27eeacc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="NuGet.CommandLine" version="1.0.11220.26" targetFramework="net40" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc348bdf97b24b838db1fde0d27eeacc.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADfca14AAAAAAAAAAOAAAiELAQsAAFoAAAAIAAAAAAAAfngA
AAAgAAAAgAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAADAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADB4AABLAAAAAIAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAKAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhFgAAAAgAAAAWgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAgAAAAAYAAABcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAKAAAAACAAAAYgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
eAAAAAAAAEgAAAACAAUASDwAAOg7AAABAAAAAAAAAJA7AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA4AAAoCAnNYAAAGfQEAAAQCAnNcAAAGfQIAAAQqAzAE
AE8AAAAAAAAABHIBAABwGm8PAAAKLBUCBQIDKBAAAAoOBHM5AAAGbwcAAAYFbxEAAAosIwICewYA
AAQXWH0GAAAEAnsGAAAEFzMMAm8DAAAGAigEAAAGKgYqAAAAAzACAE8AAAAAAAAAAnsDAAAELBIC
ewMAAARvQgAABgIUfQMAAAQCewQAAAQsEgJ7BAAABG9QAAAGAhR9BAAABAJ7BQAABCwSAnsFAAAE
b1YAAAYCFH0FAAAEKgATMAUAlwAAAAEAABEWCjiCAAAABAaUDgRyEQAAcCgSAAAKMxkCBQaaAgQG
lCgQAAAKDgRzPgAABn0DAAAEBAaUDgRyKQAAcCgSAAAKMxkCBQaaAgQGlCgQAAAKDgRzRAAABn0E
AAAEBAaUDgRyOwAAcCgSAAAKMxkCBQaaAgQGlCgQAAAKDgRzUgAABn0FAAAEBhdYCgYDP3f///8C
bwYAAAYqBipKKwcCA28IAAAGA288AAAGLfEqBiq2AigUAAAKAgJ7AQAABG9bAAAGbxUAAApzFgAA
Cn0LAAAEAnsLAAAEbxcAAAoqEzAHAO0AAAACAAARA286AAAGF40fAAABEwgRCBYfLJ0RCG8YAAAK
CgaOaSwPBhaaclsAAHAoGQAACiwBKgYWmnJrAABwcm8AAHBvGgAACgsGF5pyawAAcHJvAABwbxoA
AAoMBhiacmsAAHBybwAAcG8aAAAKDQYZmnJrAABwcm8AAHBvGgAAChMEBhqacmsAAHBybwAAcG8a
AAAKEwVzJwAABhMGAgcSBigOAAAGEQZvFQAABgcICREEEQURBnM4AAAGEwcRB28oAAAGKBsAAAos
GAJycQAAcBEHbyoAAAYoHAAACigQAAAGKgJ7CAAABBEHbx0AAAoqAAAAAzACAHAAAAAAAAAAAige
AAAKAigNAAAGAigMAAAGAnsHAAAELCICewEAAARvWgAABm8VAAAKAnsJAAAEbx8AAAooIAAACisV
AnsBAAAEb1oAAAZvFQAACighAAAKAnsLAAAELBYCewsAAARvIgAACgJ7CwAABG8jAAAKKoYCewEA
AARvWQAABm8VAAAKAnsKAAAEbx8AAAooIAAACioeAigkAAAKKh4CbygAAAYqSgNvKAAABgJ7JAAA
BG8mAAAKKh4Cby4AAAYqAAAAGzAEAM4OAAADAAARcycAAAoKAnsIAAAEfg0AAAQtERT+BhMAAAZz
KAAACoANAAAEfg0AAAQoAQAAKygCAAArKAMAACsKBm8sAAAKE0Q4aw4AABQTQnNmAAAGE0MRQxJE
KC0AAAp9JAAABH4uAAAKC34uAAAKDH4uAAAKDX4uAAAKEwR+LgAAChMFfi4AAAoTBn4uAAAKEwd+
LgAAChMIfi4AAAoTCX4uAAAKEwp+LgAAChMLfi4AAAoTDH4uAAAKEw1+LgAAChMOfi4AAAoTD34u
AAAKExB+LgAAChMRfi4AAAoTEn4uAAAKExN+LgAAChMUfi4AAAoTFX4uAAAKExZ+LgAAChMXfi4A
AAoTGH4uAAAKExl+LgAAChMafi4AAAoTG34uAAAKExx+LgAAChMdfi4AAAoTHn4uAAAKEx9+LgAA
ChMgfi4AAAoTIX4uAAAKEyJ+LgAAChMjfi4AAAoTJH4uAAAKEyV+LgAAChMmfi4AAAoTJ34uAAAK
Eyh+LgAAChMpfi4AAAoTKn4uAAAKEyt+LgAAChMsfi4AAAoTLX4uAAAKEy5+LgAAChMvfi4AAAoT
MH4uAAAKEzF+LgAAChMyfi4AAAoTM34uAAAKEzR+LgAAChM1FhM2FhM3AnsIAAAEEUItDxFD/gZn
AAAGcy8AAAoTQhFCKAQAACt+DgAABC0RFP4GFAAABnMoAAAKgA4AAAR+DgAABCgFAAArKAYAACsT
OBE4bzIAAAoTRThqDAAAEkUoMwAAChM5ETlvNAAABiwTETlvNAAABm8VAAAGKBsAAAosMwIXfQcA
AAQCewUAAARvVQAABgJ7BQAABHLjAABwETlvKgAABigcAAAKb1MAAAY4EgwAABE3F1gTNwJ7DAAA
BBE5by4AAAYoBwAAKznOCQAAETlvLgAABiUTRjm/CQAA/hN+JQAABDqpAgAAHzRzNQAACiVyvAEA
cBYoNgAACiVyzgEAcBcoNgAACiVy5AEAcBgoNgAACiVy+AEAcBkoNgAACiVyCgIAcBooNgAACiVy
HAIAcBsoNgAACiVyLgIAcBwoNgAACiVyQgIAcB0oNgAACiVyUgIAcB4oNgAACiVyagIAcB8JKDYA
AAolcn4CAHAfCig2AAAKJXKWAgBwHwsoNgAACiVytAIAcB8MKDYAAAolcsQCAHAfDSg2AAAKJXLo
AgBwHw4oNgAACiVy/AIAcB8PKDYAAAolchIDAHAfECg2AAAKJXImAwBwHxEoNgAACiVyVgMAcB8S
KDYAAAolcmoDAHAfEyg2AAAKJXJ6AwBwHxQoNgAACiVyjgMAcB8VKDYAAAolcp4DAHAfFig2AAAK
JXLCAwBwHxcoNgAACiVy1AMAcB8YKDYAAAolcuoDAHAfGSg2AAAKJXL+AwBwHxooNgAACiVyFgQA
cB8bKDYAAAolcigEAHAfHCg2AAAKJXI6BABwHx0oNgAACiVyTAQAcB8eKDYAAAolcmAEAHAfHyg2
AAAKJXJwBABwHyAoNgAACiVyhgQAcB8hKDYAAAolcpoEAHAfIig2AAAKJXLKBABwHyMoNgAACiVy
2gQAcB8kKDYAAAolcgIFAHAfJSg2AAAKJXIwBQBwHyYoNgAACiVyVAUAcB8nKDYAAAolcnwFAHAf
KCg2AAAKJXKkBQBwHykoNgAACiVy0gUAcB8qKDYAAAolcvYFAHAfKyg2AAAKJXIeBgBwHywoNgAA
CiVyRgYAcB8tKDYAAAolcnQGAHAfLig2AAAKJXKYBgBwHy8oNgAACiVywAYAcB8wKDYAAAolcugG
AHAfMSg2AAAKJXIWBwBwHzIoNgAACiVyOgcAcB8zKDYAAAr+E4AlAAAE/hN+JQAABBFGEkcoNwAA
Cjn1BgAAEUdFNAAAAAUAAABdAAAAmQAAAKYAAAC0AAAAwgAAANAAAADeAAAA7AAAAA4BAAA9AQAA
ugEAAA0CAAA8AgAAawIAAI0CAACvAgAA0QIAAPMCAAAVAwAARAMAAGYDAACIAwAAqgMAAMwDAADu
AwAAEAQAADIEAABUBAAAdgQAAJgEAAC6BAAA3AQAAP4EAAAgBQAAQgUAAGQFAAByBQAAgAUAAI4F
AACcBQAApwUAALIFAAC9BQAAyAUAANMFAADeBQAA6QUAAPQFAAD/BQAACgYAABUGAAA4GQYAABE5
bzAAAAYLETlvNAAABm8XAAAGBxlvDwAACi0HAgcoEAAABnJiBwBwCQgoOAAAChM1ETlvNAAABm8Z
AAAGETUZbw8AAAo6zgUAAAIRNSgQAAAGOMEFAAAROW8wAAAGDHJiBwBwCQgoOAAAChM1ETlvNAAA
Bm8ZAAAGETUZbw8AAAo6kgUAAAIRNSgQAAAGOIUFAAAROW8wAAAGDTh4BQAAETlvMAAABhMEOGoF
AAAROW8wAAAGEwU4XAUAABE5bzAAAAYTBjhOBQAAETlvMAAABhMHOEAFAAAROW8wAAAGEwg4MgUA
ABE5bzAAAAYTCREJKBsAAAo6HQUAAAIRCSgQAAAGOBAFAAAROW8wAAAGEwoROW80AAAGbxsAAAYR
ChlvDwAACjruBAAAAhEKKBAAAAY44QQAABE5bzAAAAYTC345AAAKEzp+OQAAChM7EQsSOig6AAAK
JhE5bzQAAAZvHQAABhI7KDoAAAomEjsoOwAAChI6KDsAAAoZbw8AAAo6kwQAABE7ETooPAAACjmF
BAAAFxM2AhELbz0AAApycgcAcBFDeyQAAAQoEQAABjhkBAAAETlvMAAABhMMEQwoPgAAChM8ETlv
NAAABm8fAAAGE0gSSBE8KD8AAAo6NgQAABE2OS8EAAACEQxvPQAACnKSBwBwEUN7JAAABCgRAAAG
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
KoICex8AAARvbQAACm9uAAAKcjkMAHBvbwAACm9wAAAKKoICex8AAARvbQAACm9uAAAKcm0MAHBv
bwAACm9wAAAKKjoCKCQAAAoCA30gAAAEKpYCeyAAAARvcQAACnKPDABwb3IAAAoocwAACm90AAAK
dBsAAAEqlgJ7IAAABG9xAAAKcqMMAHBvcgAACihzAAAKb3QAAAp0GwAAASoeAigkAAAKKgAAEzAC
AC0AAAAIAAARfiEAAAQtIHK7DABw0AwAAAIodgAACm93AAAKc3gAAAoKBoAhAAAEfiEAAAQqGn4i
AAAEKh4CgCIAAAQqGn4jAAAEKi5zZAAABoAjAAAEKh4CKHoAAAoqAAAAAAC0AAAAzsrvvgEAAACR
AAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQu
MC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNT
eXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAcBMAACN+AADcEwAA4BUAACNTdHJp
bmdzAAAAALwpAAAwDQAAI1VTAOw2AAAQAAAAI0dVSUQAAAD8NgAA7AQAACNCbG9iAAAAAAAAAAIA
AAFXFaIJCR8AAAD6JTMAFgAAAQAAAEIAAAAPAAAAJQAAAGcAAABPAAAAegAAAEUAAAAIAAAACgAA
ACgAAAA5AAAACAAAAAEAAAALAAAAAQAAAAEAAAABAAAACwAAAAEAAAAAAAoAAQAAAAAABgA5ARgB
CgBZAVIBBgBgARgBDgCCAW0BEgDQARgBBgDfARgBCgCaAn8CFgDcAssCGgCQA2oDCgBZBFIBHgA/
ChcKCgAzCyILCgBkC08LCgBEDCUMCgDKDLAMCgD1DOMMCgAMDeMMCgApDeMMCgBIDeMMCgBhDeMM
CgB6DeMMCgCVDeMMCgCwDeMMCgDJDeMMCgACDuINCgAiDuINCgBkDlIBCgBrDlIBBgCwDhgBFgD/
DuwOCgARD1IBCgBbD1EPDgCmDHsPCgDdD1IBCgALEOINIgB7EG8QCgCGEH8CHwCrEAAAIgDcEG8Q
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
TABgOgAAAACGCFgK8gBNAIE6AAAAAIYIdgryAE0AojoAAAAAhgiUCvIATQDDOgAAAACGGJoB7ABN
ANI6AAAAAIYI7gqIAE4A+DoAAAAAhgj8CogATgAeOwAAAACDGJoBGwBOACg7AAAAAJMIgAsEAU4A
YTsAAAAAkwiUCwkBTgBoOwAAAACTCKALDgFOAHA7AAAAAJYIxAsiAU8AgzsAAAAAhhiaARsATwB3
OwAAAACRGJYVLwRPAK4jAAAAAIYYmgEbAE8AviMAAAAAhgCvD6EBTwAAAAEA2AsAAAIA4AsAAAMA
6gsAAAQA8QsAAAEA+wsAAAIAAwwAAAMADQwAAAQA8QsAAAEA6gsAAAEAFQwAAAEAFQwAAAEAGQwC
AAIAIAwAAAEAUQwAAAEAWAwAAAEAWAwAAAIAWgwAAAMAZAwAAAEAxQ8AAAEAxQ8AAAEAawwAAAEA
awwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwA
AAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEA4AUAAAIAGQwAAAMAcQwAAAQAWgwAAAUA
ewwAAAYAhAwAAAEA4AUAAAIAGQwAAAMAcQwAAAQAWgwAAAUAewwAAAYAhAwAAAcAIAwAAAEA6gsA
AAIAkgwAAAMA8QsAAAEA6gsAAAIAkgwAAAMA8QsAAAEAawwAAAEAawwAAAEA6gsAAAIAkgwAAAMA
8QsAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwAAAEAawwA
AAEAawwAAAEA6gsAAAIAkgwAAAMA8QsAAAEAawwAAAEAawwAAAEApgwAAAEApgwAAAEAawwAAAEA
xQ9xAJoBGwB5AJoBfACBAJoBfACJAJoBfACRAJoBfACZAJoBfAChAJoBfACpAJoBfACxAJoBfAC5
AJoBfADBAJoBfADJAJoBLAHRAJoBGwAJAJoBGwDZAHwOMQEJAIMOOAEpAJQO2wAJAKQOPgHpAJoB
GwAJAAcDGwBZANcOiABBAJoBfADxAAwPGwDZABYPTgHZABwPVQHZACgPWwHZADAPYQHZAD4PZgEM
AEUPcwEJABIDGwAUAEkPjwEBAWAPlQEBAW4PnAHxAHUPGwAJAZEPGwARAJoBGwAZAZoBGwDZAHwO
twEUAJoBGwAcAJoBxQEhAZQQywEhAZsQ7AEhAaQQAgIUALYQEwIkAMQQJALZANAQlwAsAJoBxQEh
AdYQMgIhAfEQUQIMALYQEwI0AMQQJAIhAfkQdAI8AJoBLAE8AEUPkwI8AGgRmwLZAHQRpAJJAYQR
qwJJAY0RsAJJAZYRiABJAagRuQIRALQRiABRAL0RwwJRAHwOyQIMAMMRzwJRAXwO0wJZAZoBGwBZ
AekRlwBZAfMRlwBZAQASlwBZAQ0SlwBZARISlwBZARgSlwBhAZoBGwBhAekRlwBhATMSlwBhAT8S
lwBhAUkSlwBhAVMSlwA0AF8S2wBpAZEPGwAkAF8S2wDxAIQSXQPZAD4PYwN5AZoBaQN5AakScAOJ
AcQSdgOJAc0S2wBEAJoBGwBEAEUPcwGRAesSlwMUAEUPcwGhAZoBGwChAekRlwChAQkTlwChARUT
lwAMAJoBGwAZAJoB0QAZAOoLwwMZAJIMxwMpACETywMZACsT0wIZAEgI2wAZAFAI2wAZADIT0AMZ
ADsTLAGpAZoBfAAZAIwIGwAZAJMIGwAJAMMT1gOxAfwT3AO5ATUU4gPBAVAU8gAJAHcU6QPJAcQS
7wMJALgU9gPRAeUU/APpAZoBGwDxAUAVAwTxAVsVDARhAJoBEgQJApoBHwQhAJoBGwAuAEsApAQu
AGsAygQuAGMAwQQuABMAMwQuABsAewQuACMApAQuACsApAQuADMApAQuADsAewQuAEMAqgRjAJsA
SQGDAasDSQGhASsBSQHBASsBSQHDASsBSQHhASsBSQHjASsBSQEBAisBSQEhAisBSQFBAisBSQFg
AisBSQFhAisBSQGAAisBSQGBAisBSQGgAisBSQGhAisBSQHAAisBSQHBAisBSQHgAisBSQHhAisB
SQEAAysBSQEBAysBSQEgAysBSQEhAysBSQFAAysBSQFBAysBSQFgAysBSQFhAysBSQGAAysBSQGB
AysBSQGgAysBSQGhAysBSQHAAysBSQHBAysBSQHgAysBSQEABCsBSQEgBCsBSQFABCsBSQFgBCsB
SQFhBCsBSQGABCsBSQGgBCsBSQHABCsBSQHJBMsDJgTpBMsDJgQABSsBSQEgBSsBSQFABSsBSQFg
BSsBSQGABSsBSQGgBSsBSQHABSsBSQHgBSsBSQEABisBSQEgBisBSQFABisBSQFgBisBSQGABisB
SQGgBisBSQFFAXkB5AJ7A6gDuAO+AxoEBAABAAUACgAGABEABwATAAgAFQAJAB8ACgAhAAsAJAAM
ACYADQAoAAAA4AWeAAAA6gWeAAAA8wWeAAAA/QWeAAAABwaeAAAAEwaiAAAAIgaeAAAAKgaeAAAA
PAaeAAAA4AeeAAAA6weeAAAA8weeAAAA/geeAAAACwieAAAAFQieAAAAJAjMAAAAXAieAAAAYQjf
AAAAogieAAAAqgjfAAAAVgmeAAAAYgnfAAAAdQmiAAAAfQnfAAAAjAmeAAAAkgnfAAAAnwmeAAAA
pAnfAAAAsAmeAAAAugnfAAAAXAieAAAAYQjfAAAAqQr3AAAAwwr3AAAA3Qr3AAAADAueAAAAFgue
AAAAMwsUAQAArAsZAQAA0AsnAQIAFQADAAEAFgADAAIAFwAFAAEAGAAFAAEAGgAHAAIAGQAHAAIA
GwAJAAEAHAAJAAIAHQALAAEAHgALAAIAHwANAAEAIAANAAEAIgAPAAIAIQAPAAIAIwARAAEAJAAR
AAIAJQATAAEAJgATAAIAKAAVAAEAKQAVAAIAKgAXAAEAKwAXAAIALAAZAAEALQAZAAIALgAbAAEA
LwAbAAIAMAAdAAEAMQAdAAIAMgAfAAEAMwAfAAEANQAhAAIANAAhAAIAOgAjAAIAOwAlAAEAPwAn
AAEAQAApAAEARQArAAEARgAtAAEARwAvAAEASAAxAAEASQAzAAEASgA1AAEASwA3AAEATAA5AAEA
TQA7AAEATgA9AAEAUwA/AAEAVABBAAIAWQBDAAIAWgBFAAIAWwBHAAIAXQBJAAIAXgBLAAIAYABN
AAIAYQBPAAEAYgBPAAIAYwBRAGwBiQG8AR0CKQJsAosChwMEgAAAAQAAANEca10AAAAAAABADgAA
CwAAAAAAAAAAAAAAAQD7AAAAAAAEAAAAAAAAAAAAAAAKAEkBAAAAAAQAAAAAAAAAAAAAAAoAUgEA
AAAACwAAAAAAAAAAAAAAAQCvAQAAAAAEAAAAAAAAAAAAAAAKAL8CAAAAAAEAAQAAAAAAAAAAAHMA
UQMAAAAACwAAAAAAAAAAAAAAAQD0CQAAAAAEAAAAAAAAAAAAAAAKAGMQAAAAAAMAAgAHAAAAAAAA
AI4D0hIAAAAAAgAAAAAAAAAAAAAACgBJAQAAAAALAAAAAAAAAAAAAAABAF0TAAAAAAAAAAABAAAA
nRUAAA4AAwAAAAAAHwCpA1MA5gFVAP4BVwD+AWEATAJjAOYBVwBMAmkA/gEeANgCHgDeArUAowMe
ALIDAQAlAAAAAAAAPE1vZHVsZT4AU0NfYmMzNDhiZGY5N2IyNGI4MzhkYjFmZGUwZDI3ZWVhY2Mu
ZGxsAFVzZXJDb21wb25lbnQAU2NyaXB0TWFpbgBEYkRhdGEAUmVjb3JkRW50aXR5AElucHV0MEJ1
ZmZlcgBNYWludGVuYW5jZUJ1ZmZlcgBPQlJlY2FsbEJ1ZmZlcgBFeGNlcHRpb25SZXBvcnRCdWZm
ZXIAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFJlc291cmNlcwBTQ19iYzM0OGJkZjk3YjI0YjgzOGRi
MWZkZTBkMjdlZWFjYy5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0Q29tcG9uZW50AG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU2NyaXB0QnVmZmVyAFN5c3RlbS5Db25maWd1cmF0aW9uAEFw
cGxpY2F0aW9uU2V0dGluZ3NCYXNlAC5jdG9yAElucHV0c0ZpbmlzaGVkAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVNYXAAUHJvY2Vzc0lu
cHV0AEZpbmlzaE91dHB1dHMATWFya091dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABDcmVhdGVO
ZXdPdXRwdXRSb3dzAElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBf
ZXhjZXB0aW9uUmVwb3J0Q3JlYXRlZABTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBMaXN0YDEA
UmVjb3JkTGlzdABFcnJvckxpc3QARGF0YUxpc3QAU3lzdGVtLkRhdGEAU3lzdGVtLkRhdGEuT2Ri
YwBPZGJjQ29ubmVjdGlvbgBjb25uAFVwZGF0ZUZpZWxkc0NvbGxlY3Rpb24AUHJlRXhlY3V0ZQBQ
b3N0RXhlY3V0ZQB3cml0ZURhdGEAcHJvY2Vzc0ZpbGVEYXRhAEdldEFydGl2YURhdGEAQWRkRGF0
YVJvdwBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlLkRh
dGEuUmVjb3JkcwBHZW5lcmFsUHVycG9zZVJlY29yZEJhc2UAVABBZGRFeGNlcHRpb25SZXBvcnRC
dWZmZXIAQWRkVXBkAGdldF9hY2NvdW50SUQAc2V0X2FjY291bnRJRABnZXRfcHJpX2xhc3QAc2V0
X3ByaV9sYXN0AGdldF9wcmlfZmlyc3QAc2V0X3ByaV9maXJzdABnZXRfcHJpX2VtYWlsAHNldF9w
cmlfZW1haWwAZ2V0X2xhc3RwYXltZW50AHNldF9sYXN0cGF5bWVudABEZWNpbWFsAGdldF9sYXN0
cGF5bWVudGFtdABzZXRfbGFzdHBheW1lbnRhbXQAZ2V0X3ByaV9zc24Ac2V0X3ByaV9zc24AZ2V0
X3ByaV9kcml2ZXJsaWNlbnNlAHNldF9wcmlfZHJpdmVybGljZW5zZQBnZXRfcHJpX2RvYgBzZXRf
cHJpX2RvYgA8YWNjb3VudElEPmtfX0JhY2tpbmdGaWVsZAA8cHJpX2xhc3Q+a19fQmFja2luZ0Zp
ZWxkADxwcmlfZmlyc3Q+a19fQmFja2luZ0ZpZWxkADxwcmlfZW1haWw+a19fQmFja2luZ0ZpZWxk
ADxsYXN0cGF5bWVudD5rX19CYWNraW5nRmllbGQAPGxhc3RwYXltZW50YW10PmtfX0JhY2tpbmdG
aWVsZAA8cHJpX3Nzbj5rX19CYWNraW5nRmllbGQAPHByaV9kcml2ZXJsaWNlbnNlPmtfX0JhY2tp
bmdGaWVsZAA8cHJpX2RvYj5rX19CYWNraW5nRmllbGQAYWNjb3VudElEAHByaV9sYXN0AHByaV9m
aXJzdABwcmlfZW1haWwAbGFzdHBheW1lbnQAbGFzdHBheW1lbnRhbXQAcHJpX3NzbgBwcmlfZHJp
dmVybGljZW5zZQBwcmlfZG9iAGdldF9hY2NvdW50X2lkAHNldF9hY2NvdW50X2lkAGdldF9kYXRh
X2lkAHNldF9kYXRhX2lkAGdldF9wcmlfYWNjdG5vAHNldF9wcmlfYWNjdG5vAGdldF91cGRhdGVf
ZmllbGQAc2V0X3VwZGF0ZV9maWVsZABnZXRfbmV3X3ZhbHVlAHNldF9uZXdfdmFsdWUAZ2V0X3By
ZXZpb3VzX3ZhbHVlAHNldF9wcmV2aW91c192YWx1ZQBnZXRfYXJ0aXZhRGF0YQBzZXRfYXJ0aXZh
RGF0YQA8YWNjb3VudF9pZD5rX19CYWNraW5nRmllbGQAPGRhdGFfaWQ+a19fQmFja2luZ0ZpZWxk
ADxwcmlfYWNjdG5vPmtfX0JhY2tpbmdGaWVsZAA8dXBkYXRlX2ZpZWxkPmtfX0JhY2tpbmdGaWVs
ZAA8bmV3X3ZhbHVlPmtfX0JhY2tpbmdGaWVsZAA8cHJldmlvdXNfdmFsdWU+a19fQmFja2luZ0Zp
ZWxkADxhcnRpdmFEYXRhPmtfX0JhY2tpbmdGaWVsZABhY2NvdW50X2lkAGRhdGFfaWQAcHJpX2Fj
Y3RubwB1cGRhdGVfZmllbGQAbmV3X3ZhbHVlAHByZXZpb3VzX3ZhbHVlAGFydGl2YURhdGEAZ2V0
X0RhdGEAZ2V0X0RhdGFfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQARGF0YQBEYXRhX0lzTnVs
bABzZXRfUm93RGF0YQBzZXRfUm93RGF0YV9Jc051bGwAQWRkUm93AFNldEVuZE9mUm93c2V0AFJv
d0RhdGEAUm93RGF0YV9Jc051bGwAc2V0X1BsYWNlbWVudElEAHNldF9QbGFjZW1lbnRJRF9Jc051
bGwAc2V0X0JhbGFuY2UAc2V0X0JhbGFuY2VfSXNOdWxsAHNldF9Qcm9vZgBzZXRfUHJvb2ZfSXNO
dWxsAHNldF9Db2RlAHNldF9Db2RlX0lzTnVsbABzZXRfQWNjb3VudElEAHNldF9BY2NvdW50SURf
SXNOdWxsAFBsYWNlbWVudElEAFBsYWNlbWVudElEX0lzTnVsbABCYWxhbmNlAEJhbGFuY2VfSXNO
dWxsAFByb29mAFByb29mX0lzTnVsbABDb2RlAENvZGVfSXNOdWxsAEFjY291bnRJRABBY2NvdW50
SURfSXNOdWxsAHNldF9EYXRhAHNldF9EYXRhX0lzTnVsbABQYXJlbnRDb21wb25lbnQATWljcm9z
b2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAGdldF9NYWludGVuYW5jZUZpbGVD
b25uZWN0aW9uAGdldF9FeGNlcHRpb25SZXBvcnRDb25uZWN0aW9uAGdldF9BcnRpdmFDb25uZWN0
aW9uAE1haW50ZW5hbmNlRmlsZUNvbm5lY3Rpb24ARXhjZXB0aW9uUmVwb3J0Q29ubmVjdGlvbgBB
cnRpdmFDb25uZWN0aW9uAGdldF9DbGllbnRJRHMAZ2V0X2N1cnJlbnRGaWxlAENsaWVudElEcwBj
dXJyZW50RmlsZQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291
cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5j
ZQBnZXRfRGVmYXVsdABEZWZhdWx0AElucHV0SUQASW5wdXROYW1lAEJ1ZmZlcgBPdXRwdXRNYXAA
T3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVycwBSb3cAZGF0YUlEAGRhdGEAU3lzdGVtLlJ1bnRpbWUu
SW50ZXJvcFNlcnZpY2VzAE91dEF0dHJpYnV0ZQByZWNvcmQAcwBmaWVsZE5hbWUAYWNvdW50AHZh
bHVlAHByaUFjY3RObwBuZXdWYWx1ZQBwcmV2aW91c1ZhbHVlAEJ1ZmZlckNvbHVtbkluZGV4ZXMA
Q29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTQ19iYzM0OGJkZjk3YjI0YjgzOGRiMWZkZTBkMjdlZWFjYwBTdHJpbmcAU3Ry
aW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29sdW1uSW5kZXhlcwBnZXRfRW5kT2ZSb3dzZXQAR2V0
T3V0cHV0SUQAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAZ2V0X0Nvbm5l
Y3Rpb25TdHJpbmcAU3lzdGVtLkRhdGEuQ29tbW9uAERiQ29ubmVjdGlvbgBPcGVuAENoYXIAU3Bs
aXQAb3BfRXF1YWxpdHkAUmVwbGFjZQBJc051bGxPckVtcHR5AENvbmNhdABBZGQAVG9BcnJheQBT
eXN0ZW0uSU8ARmlsZQBXcml0ZUFsbExpbmVzAERlbGV0ZQBDbG9zZQBTeXN0ZW0uQ29tcG9uZW50
TW9kZWwARGlzcG9zZQA8PmNfX0Rpc3BsYXlDbGFzczYAaWQAPHByb2Nlc3NGaWxlRGF0YT5iX18x
AHgAPHByb2Nlc3NGaWxlRGF0YT5iX18wAEZ1bmNgMgBDUyQ8PjlfX0NhY2hlZEFub255bW91c01l
dGhvZERlbGVnYXRlMwBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQA8cHJvY2Vzc0ZpbGVEYXRh
PmJfXzIAQ1MkPD45X19DYWNoZWRBbm9ueW1vdXNNZXRob2REZWxlZ2F0ZTQAU3lzdGVtLkNvcmUA
U3lzdGVtLkxpbnEARW51bWVyYWJsZQBJRW51bWVyYWJsZWAxAFNlbGVjdABEaXN0aW5jdABUb0xp
c3QARW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAGdldF9DdXJyZW50AEVtcHR5AFdoZXJlAElPcmRl
cmVkRW51bWVyYWJsZWAxAE9yZGVyQnkAQ29udGFpbnMAPFByaXZhdGVJbXBsZW1lbnRhdGlvbkRl
dGFpbHM+e0Y4RjVFNDM4LUQzNTgtNEEyQS05NDVGLTdEN0UyOTYwMDg4Rn0ARGljdGlvbmFyeWAy
ACQkbWV0aG9kMHg2MDAwMDBkLTEAVHJ5R2V0VmFsdWUARm9ybWF0AERhdGVUaW1lAE1pblZhbHVl
AFRyeVBhcnNlAFRvU2hvcnREYXRlU3RyaW5nAG9wX0xlc3NUaGFuAFRvU3RyaW5nAFBhcnNlAGdl
dF9Db3VudABJbnQzMgBQb3NzaWJsZUFkZHJlc3Nlc183MDYAQWNjb3VudElkAEFkZHJlc3NMaW5l
MQBBZGRyZXNzTGluZTIAQ2l0eQBTdGF0ZQBaaXBDb2RlAFBvc3NpYmxlUGhvbmVzXzIwOABQaG9u
ZU51bWJlcgBFeHRlbnNpb24AUGhvbmVUeXBlAFBob25lU3RhdHVzAE1vdmVOZXh0AElEaXNwb3Nh
YmxlAENvbm5lY3Rpb25TdGF0ZQBnZXRfU3RhdGUAT2RiY0NvbW1hbmQAT2RiY0RhdGFSZWFkZXIA
RXhlY3V0ZVJlYWRlcgBEYkRhdGFSZWFkZXIAZ2V0X0l0ZW0AUmVhZABGaWxlSGVscGVycwBDb21t
b25FbmdpbmUAV3JpdGVTdHJpbmcAVXBkYXRlQWNjb3VudF9VUEQAVXBkYXRlRmllbGQAVXBkYXRl
VmFsdWUAR2V0U3RyaW5nAElzTnVsbABzZXRfSXRlbQBTZXROdWxsAEludmFsaWRPcGVyYXRpb25F
eGNlcHRpb24ATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNx
bFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0
X0NvbXBvbmVudE1ldGFEYXRhAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAAZ2V0
X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAAR2V0
UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAElEVFNWYXJpYWJs
ZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAElEVFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25l
bnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEw
MABHZXRWYWx1ZVdpdGhDb250ZXh0AFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAFR5cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNz
ZW1ibHkAZ2V0X0Fzc2VtYmx5AEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQAuY2N0b3IAU0NfYmMzNDhiZGY5N2IyNGI4MzhkYjFmZGUwZDI3ZWVhY2MuUHJvcGVy
dGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAPSQBuAHAAdQB0ACAAMAAAF00AYQBpAG4AdABlAG4A
YQBuAGMAZQAAEU8AQgBSAGUAYwBhAGwAbAAAH0UAeABjAGUAcAB0AGkAbwBuAFIAZQBwAG8AcgB0
AAAPZABhAHQAYQBfAGkAZAAAAyIAAAEAcUEAYwBjAG8AdQBuAHQAIABuAG8AdAAgAGYAbwB1AG4A
ZAAgAGkAbgAgAGEAcgB0AGkAdgBhACAAZgBvAHIAIABjAGwAaQBlAG4AdAAgAHIAZQBmAGUAcgBl
AG4AYwBlACAAbgB1AG0AYgBlAHIAIAAAgNdFAFYARQBSAFMATwBVAFIAQwBFACAAQQBDAEMATwBV
AE4AVAAgAE4ATwBUACAARgBPAFUATgBEACAASQBOACAAQQBSAFQASQBWAEEALAAgAEMAcgBlAGQA
aQB0AG8AcgAgAEkAbgB0AGUAcgBuAGEAbAAgAEMAbwBuAHMAdQBtAGUAcgAgAEEAYwBjAG8AdQBu
AHQAIABOAHUAbQBiAGUAcgAgAGYAcgBvAG0AIABJAEIALQBDAGgAYQBuAGcAZQAgAEwAbwBnACAA
ZgBpAGwAZQA6ACAAARFwAHIAaQBfAGwAYQBzAHQAABVwAHIAaQBfAG0AaQBkAGQAbABlAAATcABy
AGkAXwBmAGkAcgBzAHQAABFwAHIAaQBfAGEAZABkADEAABFwAHIAaQBfAGEAZABkADIAABFwAHIA
aQBfAGMAaQB0AHkAABNwAHIAaQBfAHMAdABhAHQAZQAAD3AAcgBpAF8AegBpAHAAABdwAHIAaQBf
AGMAbwBtAHAAYQBuAHkAABNwAHIAaQBfAGUAbQBhAGkAbAAAF2wAYQBzAHQAcABhAHkAbQBlAG4A
dAAAHWwAYQBzAHQAcABhAHkAbQBlAG4AdABhAG0AdAAAD3AAcgBpAF8AcwBzAG4AACNwAHIAaQBf
AGQAcgBpAHYAZQByAGwAaQBjAGUAbgBzAGUAABNwAHIAaQBfAHQAYQB4AGkAZAAAFXAAcgBpAF8A
cwB1AGYAZgBpAHgAABNwAHIAaQBfAHQAaQB0AGwAZQAAL3AAcgBpAF8AZAByAGkAdgBlAHIAbABp
AGMAZQBuAHMAZQBfAHMAdABhAHQAZQAAE3AAcgBpAF8AYQBsAGkAYQBzAAAPcAByAGkAXwBkAG8A
YgAAE3MAZQBjAF8AYQBsAGkAYQBzAAAPcwBlAGMAXwBzAHMAbgAAI3MAZQBjAF8AZAByAGkAdgBl
AHIAbABpAGMAZQBuAHMAZQAAEXMAZQBjAF8AbABhAHMAdAAAFXMAZQBjAF8AbQBpAGQAZABsAGUA
ABNzAGUAYwBfAGYAaQByAHMAdAAAF3MAZQBjAF8AYwBvAG0AcABhAG4AeQAAEXMAZQBjAF8AYQBk
AGQAMQAAEXMAZQBjAF8AYQBkAGQAMgAAEXMAZQBjAF8AYwBpAHQAeQAAE3MAZQBjAF8AcwB0AGEA
dABlAAAPcwBlAGMAXwB6AGkAcAAAFXMAZQBjAF8AcwB1AGYAZgBpAHgAABNzAGUAYwBfAHQAaQB0
AGwAZQAAL3MAZQBjAF8AZAByAGkAdgBlAHIAbABpAGMAZQBuAHMAZQBfAHMAdABhAHQAZQAAD3MA
ZQBjAF8AZABvAGIAACdwAHIAaQBfAHAAaABvAG4AZQBfADAAMQBfAG4AdQBtAGIAZQByAAAtcABy
AGkAXwBwAGgAbwBuAGUAXwAwADEAXwBlAHgAdABlAG4AcwBpAG8AbgAAI3AAcgBpAF8AcABoAG8A
bgBlAF8AMAAxAF8AdAB5AHAAZQAAJ3AAcgBpAF8AcABoAG8AbgBlAF8AMAAxAF8AcwB0AGEAdAB1
AHMAACdwAHIAaQBfAHAAaABvAG4AZQBfADAAMgBfAG4AdQBtAGIAZQByAAAtcAByAGkAXwBwAGgA
bwBuAGUAXwAwADIAXwBlAHgAdABlAG4AcwBpAG8AbgAAI3AAcgBpAF8AcABoAG8AbgBlAF8AMAAy
AF8AdAB5AHAAZQAAJ3AAcgBpAF8AcABoAG8AbgBlAF8AMAAyAF8AcwB0AGEAdAB1AHMAACdwAHIA
aQBfAHAAaABvAG4AZQBfADAAMwBfAG4AdQBtAGIAZQByAAAtcAByAGkAXwBwAGgAbwBuAGUAXwAw
ADMAXwBlAHgAdABlAG4AcwBpAG8AbgAAI3AAcgBpAF8AcABoAG8AbgBlAF8AMAAzAF8AdAB5AHAA
ZQAAJ3AAcgBpAF8AcABoAG8AbgBlAF8AMAAzAF8AcwB0AGEAdAB1AHMAACdwAHIAaQBfAHAAaABv
AG4AZQBfADAANABfAG4AdQBtAGIAZQByAAAtcAByAGkAXwBwAGgAbwBuAGUAXwAwADQAXwBlAHgA
dABlAG4AcwBpAG8AbgAAI3AAcgBpAF8AcABoAG8AbgBlAF8AMAA0AF8AdAB5AHAAZQAAJ3AAcgBp
AF8AcABoAG8AbgBlAF8AMAA0AF8AcwB0AGEAdAB1AHMAAA97ADAAfQAgAHsAMQB9AAAfQQBSAEEA
QwBDAEwAQwBSAEwAUABZAFAARABUAEUAAB1BAFIAQQBDAEMATABDAFIATABQAFkAQQBNAFQAAIH1
UwBFAEwARQBDAFQAIABBAFIAQQBDAEkARAAsAEEAUgBFAE4ATABOAE0ALABBAFIARQBOAEYATgBN
ACwAQQBSAEUATgBFAE0AQQBJAEwALABBAFIAQQBDAEMATABDAFIATABQAFkAUABEAFQARQAsAEEA
UgBBAEMAQwBMAEMAUgBMAFAAWQBBAE0AVAAsAEEAUgBFAE4AUwBTAE4ALABBAFIARQBOAEQAUgBW
AEwASQBDACwAQQBSAEUATgBCAFQASABEAFQARQANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAEYAUgBPAE0AIAAlAFMAVABB
AFIAVABUAEEAQgBMAEUAIABBAFIAQwBMAEkARQBOAFQADQAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABJAE4ATgBFAFIAIABK
AE8ASQBOACAAQQBSAEEAQwBDAE8AVQBOAFQAIABPAE4AIABBAFIAQwBMAEkARAAgAD0AIABBAFIA
QQBDAEMATABUAEkARAAgAEEATgBEACAAQQBSAEMATABJAEQAIABJAE4AIAAAgT0NAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
AEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIARQBOAFQASQBUAFkAIABPAE4AIABBAFIAQQBDAEMA
TwBVAE4AVAAuAEEAUgBBAEMAUgBQAEkARAAgAD0AIABBAFIARQBOAEkARAANAAoAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAFcA
SABFAFIARQAgAEEAUgBBAEMAQwBPAFUATgBUAC4AWgBaAEEAQwBDAFIARQBEAEkATgBUAEMATwBO
AFMAQQBDAE4AVQBNACAAPQAgACcAAQMnAAENQQBSAEEAQwBJAEQAABVBAFIARQBOAEIAVABIAEQA
VABFAAAVQQBSAEUATgBEAFIAVgBMAEkAQwAAE0EAUgBFAE4ARQBNAEEASQBMAAAPQQBSAEUATgBG
AE4ATQAAD0EAUgBFAE4ATABOAE0AAA9BAFIARQBOAFMAUwBOAACAm0kAcwBOAHUAbABsACAAcABy
AG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMA
ZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1
AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAM00AYQBpAG4AdABlAG4AYQBuAGMAZQBGAGkAbABlAEMA
bwBuAG4AZQBjAHQAaQBvAG4AADNFAHgAYwBlAHAAdABpAG8AbgBSAGUAcABvAHIAdABDAG8AbgBu
AGUAYwB0AGkAbwBuAAAhQQByAHQAaQB2AGEAQwBvAG4AbgBlAGMAdABpAG8AbgAAE0MAbABpAGUA
bgB0AEkARABzAAAXYwB1AHIAcgBlAG4AdABGAGkAbABlAABxUwBDAF8AYgBjADMANAA4AGIAZABm
ADkANwBiADIANABiADgAMwA4AGQAYgAxAGYAZABlADAAZAAyADcAZQBlAGEAYwBjAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAA45PX4WNMqSpRffX4pYAiPAAiJ
hF3NgIDMkQi3elxWGTTgiQMGEigDBhIsAyAAAQMGEhwDBhIgAwYSJAIGCAkgBAEIDhIVEhkLIAQB
CB0IHRIVEhkFIAEBEhgCBgIHBhUSHQESFAYGFRIdAQ4DBhIhAwYdDgcgAgEOEBIQBjABAQEeAAj6
DO1KRVGnggQgAQEOBiADAQ4ODgMgAA4EIAARKQUgAQERKQIGDgMGESkDKAAOBCgAESkEIAASEAUg
AQESEAkgBgEODg4ODg4LIAcBDg4ODg4OEhADBhIQBCgAEhAJIAMBEhUdCBIZAyAAAgMoAAIEIAEB
AgMGEgUFIAEBEgUEIAASLQQoABItAwYSMQMGEjUEAAASMQQAABI1BQABARI1BAgAEjEECAASNQMG
EjQEAAASNAQIABI0BCABAQgGIAICDhFxBSABHQgIBgACCBIZDgMHAQgEAQAAAAYgAR0OHQMFAAIC
Dg4FIAIODg4EAAECDgUAAg4ODgYVEh0BEhQFIAEBEwAPBwkdDg4ODg4OEhASFB0DBRUSHQEOBSAA
HRMABgACAQ4dDgQAAQEOBSABAhIUBQABDhIUCQYVEoCJAhIUDgQgAQIOCBUSgIkCEhQOBSACARwY
GhACAhUSgJUBHgEVEoCVAR4AFRKAiQIeAB4BBQoCEhQOERABARUSgJUBHgAVEoCVAR4AAwoBDhAQ
AQEVEh0BHgAVEoCVAR4ACSAAFRGAmQETAAYVEYCZAQ4EIAATAAgVEoCJAhIUAhkQAQIVEoCVAR4A
FRKAlQEeABUSgIkCHgACBAoBEhQaEAICFRKAnQEeABUSgJUBHgAVEoCJAh4AHgEHFRGAmQESFA0Q
AQICFRKAlQEeAB4ACAYVEoChAg4IBxUSgKECDggHIAIBEwATAQggAgITABATAQYAAw4OHBwEBhGA
pQgAAgIOEBGApQkAAgIRgKURgKUFAAERKQ4FIAECESkDIAAIBCABAggFCgESgK0FCgESgLF4B0kV
Eh0BDg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4ODg4O
AggVEh0BEhQSFBGApRGApREpEoCtEoCxEoCxEoCxEoCxFRKAiQISFAISOBURgJkBDhURgJkBEhQO
CBEpBSAAEYC5BQABDh0OBiACAQ4SIQUgABKAwQQgARwOCwcEDhKAvRKAwR0OBhUSHQEeAAg+DAjV
nMPWVwsQAQEOFRKAzQEeAAQKAR4ACQcCFRIdAR4ADgUKARKA0QUHARKA0QQHAR0OAwYSFQMGHQgE
IAEOCAUgAgEIHAUgABKA2QUgABKA3QYgARKA4Q4FIAASgOUGIAESgOkcBQAAEoDtBiABHBKA8QgA
ARKA+RGA/QUgABKBAQcgAgEOEoEBBAcBEjEGIAEBEYEJCAEAAgAAAAAAAwAAAUcBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdv
cmsgNCgBACNTQ19iYzM0OGJkZjk3YjI0YjgzOGRiMWZkZTBkMjdlZWFjYwAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDE3AAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
AAAAWHgAAAAAAAAAAAAAbngAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGB4AAAAAAAAAABfQ29y
RGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAA
AIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAsAMAAAAAAAAAAAAAsAM0AAAAVgBTAF8AVgBF
AFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAGtd0RwAAAEAa13RHD8AAAAAAAAA
BAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAA
AFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBBADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUA
SQBuAGYAbwAAAOwCAAABADAAMAAwADAAMAA0AGIAMAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwBy
AGkAcAB0AGkAbwBuAAAAAABTAEMAXwBiAGMAMwA0ADgAYgBkAGYAOQA3AGIAMgA0AGIAOAAzADgA
ZABiADEAZgBkAGUAMABkADIANwBlAGUAYQBjAGMAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBv
AG4AAAAAADEALgAwAC4ANwAzADcANwAuADIAMwA5ADEANQAAAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAEMAXwBiAGMAMwA0ADgAYgBkAGYAOQA3AGIAMgA0AGIAOAAzADgAZABi
ADEAZgBkAGUAMABkADIANwBlAGUAYQBjAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADEANwAAAHgAKAAB
AE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBiAGMAMwA0ADgAYgBkAGYA
OQA3AGIAMgA0AGIAOAAzADgAZABiADEAZgBkAGUAMABkADIANwBlAGUAYQBjAGMALgBkAGwAbAAA
AGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AYgBjADMANAA4AGIAZABmADkA
NwBiADIANABiADgAMwA4AGQAYgAxAGYAZABlADAAZAAyADcAZQBlAGEAYwBjAAAARAAPAAEAUABy
AG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwA3AC4AMgAzADkAMQA1AAAA
AABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADMANwA3
AC4AMgAzADkAMQA1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAcAAADAAAAIA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_bc348bdf97b24b838db1fde0d27eeacc</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::currentFile,$Project::ClientIDs</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">3c47ff6a0589666a94e4a39ac4f24d23</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">c647e0f502e738f07d48bdaf9be733613db48d3a</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Connections[MaintenanceFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Maintenance File]"
                      connectionManagerRefId="Package.ConnectionManagers[Maintenance File]"
                      name="MaintenanceFileConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Connections[ExceptionReportConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exception Report]"
                      connectionManagerRefId="Package.ConnectionManagers[Exception Report]"
                      name="ExceptionReportConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Connections[ArtivaConnection]"
                      connectionManagerID="Package.ConnectionManagers[Artiva]"
                      connectionManagerRefId="Package.ConnectionManagers[Artiva]"
                      name="ArtivaConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          lineageId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance]"
                      hasSideEffects="true"
                      name="Maintenance">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance].Columns[RowData]"
                          name="RowData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall]"
                      hasSideEffects="true"
                      name="OBRecall">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[PlacementID]"
                          name="PlacementID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Balance]"
                          name="Balance"
                          precision="15"
                          scale="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Proof]"
                          name="Proof" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          dataType="wstr"
                          length="20"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[Code]"
                          name="Code" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[OBRecall].Columns[AccountID]"
                          name="AccountID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport]"
                      hasSideEffects="true"
                      name="ExceptionReport">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[ExceptionReport]"
                  endId="Package\Foreach Loop Container\Create Files\Flat File Destination.Inputs[Flat File Destination Input]"
                  name="ExceptionReport"
                  startId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[ExceptionReport]" />
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Create Files\Script Component.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Create Files\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Create Files.Paths[Maintenance]"
                  endId="Package\Foreach Loop Container\Create Files\Maintenance File.Inputs[Flat File Destination Input]"
                  name="Maintenance"
                  startId="Package\Foreach Loop Container\Create Files\Script Component.Outputs[Maintenance]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{219AA25E-C7ED-448E-9750-C8DB82393C8A}"
          DTS:ObjectName="{219AA25E-C7ED-448E-9750-C8DB82393C8A}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::currentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,42"
          Id="Package\Foreach Loop Container\Create Files"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="150,103"
          Size="147,146"
          Id="Package\Foreach Loop Container"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Create Files">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165,42"
          Id="Package\Foreach Loop Container\Create Files\Script Component"
          TopLeft="231,107.5" />
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Loop Container\Create Files\Flat File Source"
          TopLeft="237,5.5" />
        <NodeLayout
          Size="160,42"
          Id="Package\Foreach Loop Container\Create Files\Maintenance File"
          TopLeft="5.50000000000006,209.5" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Create Files\Flat File Destination"
          TopLeft="474.5,209.5" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[ExceptionReport]"
          TopLeft="339.666666666667,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="221.833333333333,60"
              Start="0,0"
              End="221.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="217.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="217.833333333333,24.3457382953181"
                    Point2="221.833333333333,24.3457382953181"
                    Point3="221.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="221.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="74.3052799479165,29.3457382953181,73.2227734375,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[Maintenance]"
          TopLeft="287.333333333333,149.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-201.833333333333,60"
              Start="0,0"
              End="-201.833333333333,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.3457382953181"
                    Point2="0,24.3457382953181"
                    Point3="-4,24.3457382953181" />
                  <mssgle:LineSegment
                    End="-197.833333333333,24.3457382953181" />
                  <mssgle:CubicBezierSegment
                    Point1="-197.833333333333,24.3457382953181"
                    Point2="-201.833333333333,24.3457382953181"
                    Point3="-201.833333333333,28.3457382953181" />
                  <mssgle:LineSegment
                    End="-201.833333333333,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-129.273014322917,29.3457382953181,56.7126953125,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Create Files.Paths[Flat File Source Output]"
          TopLeft="313.5,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>