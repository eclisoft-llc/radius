<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/17/2020 9:01:01 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{F27FD2A8-C5A9-400C-8FD7-FCD98B7EE27A}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.7507.2"
  DTS:LocaleID="1033"
  DTS:ObjectName="LiveVoxCallResults"
  DTS:PackageType="5"
  DTS:VersionBuild="83"
  DTS:VersionGUID="{35AD9850-9EF4-40BA-AE85-7CFA6B716601}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=FIRSTPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[artiva_import_file]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3BAC4D6D-20C3-4295-BCAE-B36337814684}"
      DTS:ObjectName="artiva_import_file">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullOutboundDirectory] + "ArtivaMT-" + @[$Project::Namespace] + "-"  + @[$Project::ClientName] + "-" +  @[User::currentFile] + ".csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\NationalFuel\Outbound\ArtivaMT-FIRSTPROD-National Fuel-0.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RowData"
              DTS:DTSID="{DCBD1454-6EF8-4BAD-83F7-1338503EC79A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Close_MT]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{a4364b9d-798c-468c-8ee3-58714302bfed}"
      DTS:ObjectName="Close_MT">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullOutboundDirectory] + "ArtivaMT-" + @[$Project::Namespace] + "-"  + @[$Project::ClientName] + "-CloseAccount-" +  @[User::currentFile] + ".csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\NationalFuel\Outbound\ArtivaMT-FIRSTPROD-National Fuel-CloseAccount-0.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RowData"
              DTS:DTSID="{DCBD1454-6EF8-4BAD-83F7-1338503EC79A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\NationalFuel\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{38B652DD-0FAB-4BFC-A88D-5E4185DE0E54}"
      DTS:ObjectName="Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory] +  @[User::currentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\NationalFuel\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ConsumerID"
              DTS:DTSID="{E60317A7-E299-4F28-ADC3-9B72CC1B8BE2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="CallConnectTimeCT"
              DTS:DTSID="{909B01CE-0595-4769-B777-FAC5535A2533}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Result"
              DTS:DTSID="{390A82E8-E51E-45D4-B537-A24AC060E19F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8EB3B03F-24B6-4A1F-A080-52B119715FA9}"
      DTS:ObjectName="Archive">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Archive\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{070BB183-0117-4C46-81A3-FEA4DBC7631B}"
      DTS:ObjectName="FTP">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">/Home/eft_NationalFuel/From Agency/</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D8A61B97-7CEA-47CB-B873-A048FD339CF7}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{4766661B-ADD6-45FD-BACA-65A38294811B}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*National_Fuel_1P_Results*.txt</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{3148459F-D8D2-4833-AB7B-B5588751B0DD}"
      DTS:ObjectName="Log">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Logs\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{84C17E14-D913-4D86-B638-B16E51332723}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF19A457-EA36-4270-B94F-D83671BBB920}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="currentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5B2B42FF-9496-4370-8393-E9C59174C92E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  + @[User::currentFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{83DD3743-834E-4F58-AAFA-4B084BAC1E45}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::Archive]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullArchiveDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FBF95FCB-AD22-4C33-A73B-348D7E66C4AD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{80BC3CC9-561B-4ECE-AF1E-24970165E451}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::Log]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullLogDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D375F248-23BA-4F1E-B762-76B562EAD82E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Outbound\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Create_CSVs 1"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{934892da-382f-4372-a0bf-b8ccc1302a4b}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Create_CSVs 1">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{7bde9527-7c03-4684-afc4-0cc708d56ccf}"
        DTS:ObjectName="{0D7FC3F8-DE02-4DD6-890A-832702336AE8}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\NationalFuel\Inbound\" />
            <FEFEProperty
              FileSpec="*National_Fuel_1P_Results*.txt" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Create_CSVs 1\Process_Files"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{5eb452ab-ac14-41be-ab27-2b8f9cda8e2a}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process_Files"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File"
                  componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva_Placement_File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[artiva_import_file]"
                      connectionManagerRefId="Package.ConnectionManagers[artiva_import_file]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Output 0].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          name="RowData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Create_CSVs 1\Process_Files\Exceptions"
                  componentClassID="{8DA75FED-1B7C-407D-B2AD-2B24209CCCA4}"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exceptions">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Create_CSVs 1\Process_Files\Exceptions.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Create_CSVs 1\Process_Files\Exceptions.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Exceptions.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="8000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Create_CSVs 1\Process_Files\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Exception].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Create_CSVs 1\Process_Files\Exceptions.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Create_CSVs 1\Process_Files\Script Component"
                  componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Script Component"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Collections.Generic;
using FileHelpers;
using System.IO;
using System.Linq;
using System.Globalization;
using System.Data.Odbc;
using System.Text;
using System.Data.SqlClient;
using WinSCP;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    private bool _exceptionReportCreated;
    OdbcConnection conn;
    public static string _appDirectory = @"R:\Program Files (x86)\WinSCP\";
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        _exceptionReportCreated = false;
        conn = new OdbcConnection(Connections.ARTIVA.ConnectionString);
        conn.Open();

        artivaids = new StringBuilder();
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }

        string bd = "Client File Name: " + "<b>" + Variables.currentFile + "</b>" + "<br />" + "<br />" +
"Total Active Accounts: " + TotalActiveAccounts.ToString() + "<br />" +
"Accounts with Results: " + AccountswithResults.ToString() + "<br />" +
"Accounts without Results: " + AccountswithoutResults.ToString();

        string attch = "Artiva IDs for accounts without results:" + Environment.NewLine + artivaids.ToString();


        String aFile =  "Accounts Without Results " + DateTime.Today.ToString("MM-dd-yyyy") + ".txt";

        FileInfo fi = new FileInfo(aFile);

        File.WriteAllText(Path.Combine(Variables.FullInboundDirectory, aFile), attch);

        List<string> attachment = new List<string>() { Variables.FullInboundDirectory + fi};
  
        new CommonClasses.EmailSender().SendMail(Variables.EmailTo, "", attachment, Variables.EmailSubject, bd);
    }

    


    private int TotalActiveAccounts;
    private int AccountswithResults;
    private int AccountswithoutResults;

    private StringBuilder artivaids;


    public override void CreateNewOutputRows()
    {
        try
        {


            IEnumerable<string> allLines = null;
            string filePath = Variables.FullInboundDirectory + Variables.currentFile;
            if (File.Exists(filePath))
            {

                allLines = File.ReadLines(filePath);
            }



            IEnumerable<string> recs = allLines.Where(d => !d.StartsWith("Consumer"));

            var ob = new StringBuilder();
            var acc = new DataTable();

            string ConsumerID = "";
            string CallConnectTimeCT = "";
            string Result = "";

            Dictionary<string, DataTable> res = new Dictionary<string, DataTable>();
            Dictionary<string, int> cnt = new Dictionary<string, int>();
            Dictionary<string, int> permcnt = new Dictionary<string, int>();
            

            string query = @"SELECT 
                    account.ARACID,
                    account.ARACCLACCT,
                    account.ZZACSEGSCR,
                    account.ZZACPLCGRPID	
                FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT account on ARCLID = account.ARACCLTID AND ARCLID IN ('NFPAPT','NFNYPT','NFPABA','NFNYBA')
                JOIN ARRELATIONSHIP arrela ON account.ARACRPRELID = arrela.ARRELID
                WHERE arrela.ARRELSTATUSID!='INACTCANCEL'";

            using (OdbcCommand cmd = new OdbcCommand(query, conn, null))
            {

                if (conn.State != ConnectionState.Open)
                    conn.Open();

                cmd.CommandTimeout = 300000000;


                using (var reader = cmd.ExecuteReader())
                {
                    acc.Load(reader);
                }




            }

            HashSet<string> evt = new HashSet<string>();
            HashSet<string> dat = new HashSet<string>();
            Dictionary<string, string> all = new Dictionary<string, string>();
            Dictionary<string, string> acclines = new Dictionary<string, string>();

            string[] rescode = { "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "G", "N", "P" };
            string ZZACSEGSCR = "", ARACID = "", ZZACPLCGRPID = "", ARACCLACCT = "";
            foreach (string line in recs)
            {


                string[] arg = line.Split(',');

                ConsumerID = arg[0].Trim();
                CallConnectTimeCT = arg[1].Trim();
                Result = arg[2].Trim();

                

                //Inbound

                DateTime dt;
                DateTime.TryParseExact(CallConnectTimeCT, "MMddyyyy HHmmss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dt);
                //bool isdaytime = false;
                //bool isevening = false;
                //DateTime cutime = new DateTime(dt.Year, dt.Month, dt.Day, 15, 0, 0);
                //DateTime cutime2pmdt = new DateTime(dt.Year, dt.Month, dt.Day, 14, 0, 0);
                //DateTime cutime4pmet = new DateTime(dt.Year, dt.Month, dt.Day, 16, 0, 0);

                DateTime cutime3pmdt = new DateTime(dt.Year, dt.Month, dt.Day, 15, 0, 0);
                DateTime cutime5pmet = new DateTime(dt.Year, dt.Month, dt.Day, 17, 0, 0);






                DataRow[] r = acc.Select("ARACID = '" + ConsumerID + "'");


                if (r != null && r.Length>0)
                {
                    ZZACSEGSCR = r[0]["ZZACSEGSCR"] != DBNull.Value && r[0]["ZZACSEGSCR"] != null ? r[0]["ZZACSEGSCR"].ToString() : "";
                    ARACID = r[0]["ARACID"] != DBNull.Value && r[0]["ARACID"] != null ? r[0]["ARACID"].ToString() : "";
                    ARACCLACCT = r[0]["ARACCLACCT"] != DBNull.Value && r[0]["ARACCLACCT"] != null ? r[0]["ARACCLACCT"].ToString() : "";
                    ZZACPLCGRPID = r[0]["ZZACPLCGRPID"] != DBNull.Value && r[0]["ZZACPLCGRPID"] != null ? r[0]["ZZACPLCGRPID"].ToString() : "";
                }

                if (rescode.Contains(Result) && !string.IsNullOrEmpty(ARACID))
                {
                    if (!all.ContainsKey(ARACID))
                        all.Add(ARACID, ZZACSEGSCR + "@" + Result);

                    if (dt < cutime3pmdt)
                        dat.Add(ConsumerID);
                    //isdaytime = true;

                    if (dt >= cutime5pmet)
                        evt.Add(ConsumerID);
                    //isevening = true;

                    /*
                    if (dt < cutime)
                        dat.Add(ConsumerID);
                    //isdaytime = true;

                    if (dt >= cutime)
                        evt.Add(ConsumerID);
                    //isevening = true;
                    */
                }

                if (!string.IsNullOrEmpty(ARACCLACCT))
                {

                    if (res.ContainsKey(ARACCLACCT))
                    {
                        DataTable tl = res[ARACCLACCT];

                        DataRow dr = tl.NewRow();

                        dr[0] = ARACCLACCT;
                        dr[1] = ZZACPLCGRPID;
                        dr[2] = dt;
                        dr[3] = Result;

                        tl.Rows.Add(dr);

                        res[ARACCLACCT] = tl;

                        if (cnt[ARACCLACCT] < 3)
                        {
                            cnt[ARACCLACCT] += 1;
                            permcnt[ARACCLACCT] += 1;
                        }

                    }
                    else
                    {
                        DataTable tl = new DataTable();
                        DataColumn dc = new DataColumn("ARACCLACCT", typeof(String));
                        tl.Columns.Add(dc);
                        dc = new DataColumn("ZZACPLCGRPID", typeof(String));
                        tl.Columns.Add(dc);
                        dc = new DataColumn("CallConnectTime", typeof(DateTime));
                        tl.Columns.Add(dc);
                        dc = new DataColumn("Result", typeof(String));
                        tl.Columns.Add(dc);

                        DataRow dr = tl.NewRow();

                        dr[0] = ARACCLACCT;
                        dr[1] = ZZACPLCGRPID;
                        dr[2] = dt;
                        dr[3] = Result;

                        tl.Rows.Add(dr);

                        res[ARACCLACCT] = tl;
                        cnt[ARACCLACCT] = 1;
                        permcnt[ARACCLACCT] = 1;

                    }
                }






            }


            foreach(KeyValuePair<string,string> i in all)
            {

                if (rescode.Contains(i.Value.Split('@')[1]))
                {
                    ZZACSEGSCR = i.Value.Split('@')[0];
                    ARACID = i.Key;
                    if (string.IsNullOrEmpty(ZZACSEGSCR) && evt.Contains(ARACID))
                    {
                        var upd = new UpdateAccount_UPD();
                        upd.AccountId = ARACID;
                        upd.UpdateField = "ZZACSEGSCR";
                        upd.UpdateValue = "E";

                        AddPlacementRow(upd);
                    }
                    else if (string.IsNullOrEmpty(ZZACSEGSCR) && dat.Contains(ARACID) && !evt.Contains(ARACID))
                    {
                        var upd = new UpdateAccount_UPD();
                        upd.AccountId = ARACID;
                        upd.UpdateField = "ZZACSEGSCR";
                        upd.UpdateValue = "D";

                        AddPlacementRow(upd);
                    }
                    else if (ZZACSEGSCR == "D" && evt.Contains(ARACID))
                    {
                        var upd = new UpdateAccount_UPD();
                        upd.AccountId = ARACID;
                        upd.UpdateField = "ZZACSEGSCR";
                        upd.UpdateValue = "B";

                        AddPlacementRow(upd);
                    }
                    else if (ZZACSEGSCR == "E" && dat.Contains(ARACID))
                    {
                        var upd = new UpdateAccount_UPD();
                        upd.AccountId = ARACID;
                        upd.UpdateField = "ZZACSEGSCR";
                        upd.UpdateValue = "B";

                        AddPlacementRow(upd);
                    }

                }
            }



            ob.AppendLine(("HDR " + DateTime.Today.ToString("MMddyyyy")).PadRight(170));

            int a = 0;
            int b = 0;
            int v = 0;
            foreach (DataRow rw in acc.Rows)
            {

                ARACCLACCT = rw["ARACCLACCT"] != DBNull.Value && rw["ARACCLACCT"] != null ? rw["ARACCLACCT"].ToString() : "";

                

                if (res.ContainsKey(ARACCLACCT))
                {                                

                    var t = res[ARACCLACCT].AsEnumerable()
                    .Select(x => new
                    {
                        ARACCLACCT = x.Field<string>("ARACCLACCT"),
                        ZZACPLCGRPID = x.Field<string>("ZZACPLCGRPID"),
                        CallConnectTime = x.Field<DateTime>("CallConnectTime"),
                        Result = x.Field<string>("Result")

                    }).OrderByDescending(o => o.CallConnectTime).Select(g => new
                    {

                        ARACCLACCT = g.ARACCLACCT,
                        ZZACPLCGRPID = g.ZZACPLCGRPID,
                        CallConnectTime = g.CallConnectTime,
                        Result = g.Result

                    });


                    foreach (var i in t)
                    {
                        a = cnt[i.ARACCLACCT];
                        b = permcnt[i.ARACCLACCT];
                        if ( a > 0)

                        {

                            if ((b == 1 && a == 1) || (b == 2 && a == 2) || (b == 3 && a == 3))
                            {
                                acclines.Add(i.ARACCLACCT, (("R" + i.ARACCLACCT.PadLeft(7) + i.ZZACPLCGRPID.PadLeft(1) + "01N ").PadRight(9) +
                                    (i.CallConnectTime.ToString("yyyyMMdd") + i.CallConnectTime.ToString("HHmmss") + i.Result).PadRight(45)).PadRight(170));
                                
                            }
                            else if ((b == 3  && a == 2) || (b == 2 && a == 1))
                            {
                                string l = acclines[i.ARACCLACCT];
                                l = l.Remove(58, 8).Insert(58, i.CallConnectTime.ToString("yyyyMMdd"));
                                l = l.Remove(66, 6).Insert(66, i.CallConnectTime.ToString("HHmmss"));
                                l = l.Remove(72, 1).Insert(72, i.Result);
                                acclines[i.ARACCLACCT] = l;

                            }
                            else if (b == 3 && a == 1)
                            {
                                string l = acclines[i.ARACCLACCT];
                                l = l.Remove(103, 8).Insert(103, i.CallConnectTime.ToString("yyyyMMdd"));
                                l = l.Remove(111, 6).Insert(111, i.CallConnectTime.ToString("HHmmss"));
                                l = l.Remove(117, 1).Insert(117, i.Result);
                                acclines[i.ARACCLACCT] = l;

                            }


                            
                            cnt[i.ARACCLACCT]--;
                            
                            
                        }

                    }


                    AccountswithResults++;

                } else
                {
                    ZZACPLCGRPID = rw["ZZACPLCGRPID"] != DBNull.Value && rw["ZZACPLCGRPID"] != null ? rw["ZZACPLCGRPID"].ToString() : "";
                    ARACID = rw["ARACID"] != DBNull.Value && rw["ARACID"] != null ? rw["ARACID"].ToString() : "";
                    ob.AppendLine(("R" + ARACCLACCT.PadLeft(7) + ZZACPLCGRPID.PadLeft(1) + "01N ").PadRight(170));

                    AccountswithoutResults++;

                    artivaids.AppendLine(ARACID);

                }
                    



            }

            foreach (KeyValuePair<string,string> g in acclines)
            {

                ob.AppendLine(g.Value);
            }



            ob.AppendLine(("END " + (acc.Rows.Count + 2).ToString().PadLeft(6,'0')).PadRight(170));

            TotalActiveAccounts = acc.Rows.Count;
            string obfile = "NationalFuel_Call_Results_" + DateTime.Today.ToString("MMddyyyy") + ".txt";
            File.AppendAllText(Variables.FullOutboundDirectory + obfile,  ob.ToString());



            //upload outbound file

            if (!string.IsNullOrEmpty(Variables.FTP))
            {
                string ftpURL = "";
                string ftpUser = "";
                string ftpPass = "";
                int ftpPort = 0;
                string ftpDir = Variables.FTP;
                string ftpKey = "";

                using (var connection = new SqlConnection("Server=dfw2-etl-001;Database=ArtivaJobEngine;User Id=WAREHOUSEMAN;Password=p3RV@$1V3;"))
                {
                    using (var command = new SqlCommand("SELECT [Host],[Username],[Password],[Port],[HostKey]  FROM [ArtivaJobEngine].[dbo].[FTPInformation] WHERE ID = 14", connection))
                    {
                        connection.Open();
                        using (var reader = command.ExecuteReader())
                        {
                            reader.Read();
                            ftpURL = reader.GetString(0);
                            ftpUser = reader.GetString(1);
                            ftpPass = reader.GetString(2);
                            ftpPort = reader.GetInt32(3);
                            ftpKey = reader.GetString(4);
                        }
                    }
                }

                Session session = new Session();
                TransferOptions transferOptions = new TransferOptions();
                transferOptions.TransferMode = TransferMode.Binary;
                transferOptions.ResumeSupport.State = TransferResumeSupportState.Off;
                transferOptions.FilePermissions = null;
                transferOptions.PreserveTimestamp = false;

                SessionOptions sessionOptions = new SessionOptions();
                sessionOptions.Protocol = Protocol.Sftp;
                sessionOptions.HostName = ftpURL;
                sessionOptions.UserName = ftpUser;
                sessionOptions.Password = ftpPass;
                sessionOptions.PortNumber = ftpPort;
                sessionOptions.SshHostKeyFingerprint = ftpKey;

                session.ExecutablePath = _appDirectory + "winscp.exe";
                session.SessionLogPath = Variables.FullLogDirectory + "PutOBLiveVoxFiles.log";
                session.Open(sessionOptions);

                DirectoryInfo di = new DirectoryInfo(Variables.FullOutboundDirectory);
                FileInfo[] fi = di.GetFiles(obfile);


                TransferOperationResult transResult = session.PutFiles(Variables.FullOutboundDirectory + fi[0].Name, ftpDir, false, transferOptions);
                File.Move(fi[0].FullName, Variables.FullArchiveDirectory + fi[0].Name);
                transResult.Check();


                session.Dispose();

            }
            
            
            


        }
        catch (Exception e)
        {

            bool cancel = false;
            ComponentMetaData.FireError(10, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0, out cancel);
        }
    }

    private string getFormateddate(string str)
    {
        if (string.IsNullOrEmpty(str))
            return "";
        str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
        str = str.Length < 8 ? str.Insert(2, "0") : str;

        return str;
    }
    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(getFormateddate(d), "yyyyMMdd", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }


    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList).Replace("\r\n","");
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output0Buffer.AddRow();
        Output0Buffer.Data = recordString.ToUpper();
    }

    private void AddMtRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;


        CollateralBuffer.AddRow();
        CollateralBuffer.Data = recordString.ToUpper();
    }


}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionBuffer: ScriptBuffer

{
    public ExceptionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class PlacementBuffer: ScriptBuffer

{
    public PlacementBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class LegalBuffer: ScriptBuffer

{
    public LegalBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class CollateralBuffer: ScriptBuffer

{
    public CollateralBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class NotesBuffer: ScriptBuffer

{
    public NotesBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ComakerBuffer: ScriptBuffer

{
    public ComakerBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public ExceptionBuffer ExceptionBuffer;

    public PlacementBuffer PlacementBuffer;

    public LegalBuffer LegalBuffer;

    public CollateralBuffer CollateralBuffer;

    public NotesBuffer NotesBuffer;

    public ComakerBuffer ComakerBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != ExceptionBuffer)
        {
            ExceptionBuffer.SetEndOfRowset();
            ExceptionBuffer = null;
        }

        if (null != PlacementBuffer)
        {
            PlacementBuffer.SetEndOfRowset();
            PlacementBuffer = null;
        }

        if (null != LegalBuffer)
        {
            LegalBuffer.SetEndOfRowset();
            LegalBuffer = null;
        }

        if (null != CollateralBuffer)
        {
            CollateralBuffer.SetEndOfRowset();
            CollateralBuffer = null;
        }

        if (null != NotesBuffer)
        {
            NotesBuffer.SetEndOfRowset();
            NotesBuffer = null;
        }

        if (null != ComakerBuffer)
        {
            ComakerBuffer.SetEndOfRowset();
            ComakerBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exception"))
            {
                ExceptionBuffer = new ExceptionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Placement"))
            {
                PlacementBuffer = new PlacementBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Legal"))
            {
                LegalBuffer = new LegalBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Collateral"))
            {
                CollateralBuffer = new CollateralBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Notes"))
            {
                NotesBuffer = new NotesBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Comaker"))
            {
                ComakerBuffer = new ComakerBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ARTIVA
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ARTIVA").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String currentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["currentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EmailSubject
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EmailSubject"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EmailTo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EmailTo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FTP
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FTP"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullArchiveDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullArchiveDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullInboundDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullInboundDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullLogDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullLogDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullOutboundDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullOutboundDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0721bb5d52684600a21a98c30ea8893f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{225DD62C-FC95-4D7A-B72A-356AC03734FE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0721bb5d52684600a21a98c30ea8893f</RootNamespace>
    <AssemblyName>SC_0721bb5d52684600a21a98c30ea8893f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="WinSCPnet, Version=1.1.4.3970, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebuge0c940cd-73bf-4d58-9077-6a5c621d5306/4bb861a7-9eca-414a-a9b5-65cb1b67ddb1&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Settings.get_Default():SC_0721bb5d52684600a21a98c30ea8893f.Properties.Sett" +
    "ings")]

namespace SC_0721bb5d52684600a21a98c30ea8893f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:ProjectId>{398B7F04-BC0A-43AA-9F65-6B79D31988EE}</msb:ProjectId>
		<msb:CodeName>SC_0721bb5d52684600a21a98c30ea8893f</msb:CodeName>
		<msb:DisplayName>SC_0721bb5d52684600a21a98c30ea8893f</msb:DisplayName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0721bb5d52684600a21a98c30ea8893f.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0721bb5d52684600a21a98c30ea8893f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0721bb5d52684600a21a98c30ea8893f")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0721bb5d52684600a21a98c30ea8893f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0721bb5d52684600a21a98c30ea8893f.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
JhIaEhkoXAAAChIZKF0AAAoSGSheAAAKHw8WFihfAAAKEhsSGShcAAAKEhkoXQAAChIZKF4AAAof
ERYWKF8AAAoRBHIMBwBwEQVyIgcAcCgeAAAKb2AAAAoTHBEcOQ4BAAARHI5pFj4EAQAAERwWmnIm
BwBwb2EAAAp+YgAACi4QERwWmnImBwBwb2EAAAotB3IZAgBwKxMRHBaaciYHAHBvYQAACm8dAAAK
ExMRHBaacjwHAHBvYQAACn5iAAAKLhARHBaacjwHAHBvYQAACi0HchkCAHArExEcFppyPAcAcG9h
AAAKbx0AAAoTFBEcFppyuQIAcG9hAAAKfmIAAAouEBEcFppyuQIAcG9hAAAKLQdyGQIAcCsTERwW
mnK5AgBwb2EAAApvHQAAChMWERwWmnLPAgBwb2EAAAp+YgAACi4QERwWmnLPAgBwb2EAAAotB3IZ
AgBwKxMRHBaacs8CAHBvYQAACm8dAAAKExUREhEHKAQAACssVREUKGQAAAotTBEQERRvZQAACi0X
ERARFBETckoHAHARBygeAAAKb2YAAAoRGREaKGcAAAosChEPEQVvaAAACiYRGREbKGkAAAosChEO
EQVvaAAACiYRFihkAAAKOqoBAAARCBEWb2oAAAo5ogAAABEIERZvawAAChMdER1vbAAAChMeER4W
ERZvbQAAChEeFxEVb20AAAoRHhgRGYwKAAABb20AAAoRHhkRB29tAAAKER1vbgAAChEeb28AAAoR
CBEWER1vcAAAChEJERZvcQAAChk8MwEAABEJJRNEERYlE0URRBFFb3EAAAoXWG9yAAAKEQolE0QR
FiUTRRFEEUVvcQAAChdYb3IAAAo4+gAAAHNLAAAKEx9yuQIAcNAfAAABKHMAAApzdAAAChMgER9v
dQAAChEgb3YAAApyzwIAcNAfAAABKHMAAApzdAAAChMgER9vdQAAChEgb3YAAApy6QIAcNAKAAAB
KHMAAApzdAAAChMgER9vdQAAChEgb3YAAApyCQMAcNAfAAABKHMAAApzdAAAChMgER9vdQAAChEg
b3YAAAoRH29sAAAKEyERIRYRFm9tAAAKESEXERVvbQAAChEhGBEZjAoAAAFvbQAAChEhGREHb20A
AAoRH29uAAAKESFvbwAAChEIERYRH29wAAAKEQkRFhdvcgAAChEKERYXb3IAAAoRQm93AAAKOhf8
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
LAgCFijIAAAKKnJECgBwc8kAAAp6HgIoygAACioeAijLAAAKKh4CKMwAAAoqOgIoLAAACgIDfRUA
AAQqggJ7FQAABG+3AAAKb80AAApy4QoAcG/OAAAKb88AAAoqggJ7FQAABG+3AAAKb80AAApy7woA
cG/OAAAKb88AAAoqOgIoLAAACgIDfRYAAAQqlgJ7FgAABG/QAAAKchcLAHBv0QAACijSAAAKb9MA
AAp0HwAAASqWAnsWAAAEb9AAAApyLwsAcG/RAAAKKNIAAApv0wAACnQfAAABKpYCexYAAARv0AAA
CnJJCwBwb9EAAAoo0gAACm/TAAAKdB8AAAEqlgJ7FgAABG/QAAAKclkLAHBv0QAACijSAAAKb9MA
AAp0HwAAASqWAnsWAAAEb9AAAApyYQsAcG/RAAAKKNIAAApv0wAACnQfAAABKpYCexYAAARv0AAA
CnKLCwBwb9EAAAoo0gAACm/TAAAKdB8AAAEqlgJ7FgAABG/QAAAKcrULAHBv0QAACijSAAAKb9MA
AAp0HwAAASqWAnsWAAAEb9AAAApy1wsAcG/RAAAKKNIAAApv0wAACnQfAAABKh4CKCwAAAoqAAAA
EzACAC0AAAAIAAARfhcAAAQtIHIDDABw0A0AAAIocwAACm/VAAAKc9YAAAoKBoAXAAAEfhcAAAQq
Gn4YAAAEKh4CgBgAAAQqGn4ZAAAEKi5zTgAABoAZAAAEKh4CKNgAAAoqAAAAAAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA1BMAACN+AABAFAAAOBYAACNT
dHJpbmdzAAAAAHgqAAB4DAAAI1VTAPA2AAAQAAAAI0dVSUQAAAAANwAA2AcAACNCbG9iAAAAAAAA
AAIAAAFXFaIJCR0AAAD6JTMAFgAAAQAAAGsAAAAPAAAAHQAAAFcAAAA3AAAA2AAAACAAAAAIAAAA
DAAAAB8AAAAgAAAAGwAAAAEAAAAOAAAAAQAAAAYAAAAJAAAAAgAAAAAACgABAAAAAAAGAEYBJQEG
AFYBJQEKAHMBbAEOAI8BegESAPABJQEGAP8BJQEWAGICUQIKAOYC2gIKAA4DbAEKABkDbAEaAHkD
UwMeAEQEHAQKALgFpwUKAOkF1AUKANMGuQYKAP4G7AYKABUH7AYKADIH7AYKAFEH7AYKAGoH7AYK
AIMH7AYKAJ4H7AYKALkH7AYKANIH7AYKAAsI6wcKACsI6wcGAIoIJQEWANkIxggKAPUI6wgOAK8G
BwkKACUJbAEKACwJbAEKAEIJbAEKAGQJ6wgKAG0J6wgKAKIJhwkiALsJrQkKABEL6wcKAD8LLAsK
AFoLLAsKAHELLAsKAJALhwkKAL0LbAEWAOsLRQImAOUMRQIKAAQNhwkqADQNKA0WAEUNRQIKAE8N
hwkWAFwNUQIWAGgNUQIWAHgNRQIWAJINxggWAK8NUQIWAMwNRQIKAN0NbAEqAOkNhwkKAPMNhwkK
ABsObAEKAEAObAEKAFAO1AUKAJgObAEWAPoORQIKABUPbAEKABoPbAEWAD4PRQIWAEkPRQIKAH0P
ag/HAJIPAAAKAJ0PhwkaAL4PUwMWABIQRQImAC0QRQImAEEQRQImAGgQRQImAIoQRQIWAAER6xAW
AA8R6xAWABoR6xAWACgRxgguAF4RVxEuAGYRVxEuAHYRVxEuAJQRVxEuALwRVxEuAOERVxEuABsS
VxEuACoSVxEKALYS6wgKAM0S6wguAOUSVxEuABgTVxEyAH8TVhMKAK4TbAE2AAwUABQ6AAQNhwkK
AFcUbAEyAHEUVhMyALQUVhMeAP4UHAQeACUVHAQHADUVAAAeAGUVHAQKAJEVLAsKAK4V7AYOAMQV
BwkOAN0VBwkAAAAAAQAAAAAAAQABAAEAEAAyAAAABQABAAEAAQAQAEAAAAAIAAoABgABABAASwAA
AAkAFQATAAEAEABZAAAACQAVABkAAQAQAGkAAAAJABUAHwABABAAeQAAAAkAFQAlAAEAEACFAAAA
CQAVACsAAQAQAJYAAAAJABUAMQABABAAogAAAAkAFQA3AAEAEACwAAAADQAVAD0AAQAQALwAAAAN
ABYAQAAAABAAxgDQAA0AFwBJAAABEAD/ANAAEQAZAE0AAAEQANAJAAANABoAUAAGALAAEwAGALwA
FwAGAEsAHwAGAFkAIwAGAGkAJwAGAHkAKwAGAIUALwAGAJYAMwAGAKIANwABAC0CRwABAHECSgAW
AHYCTgABAJsCUQABAK8CUQABAMMCUQABAPQCVAARAMQLNwIRAA8MTwIRAFIMcAIRAJUMlwIBAOkD
lwABAOkDlwARAMgFrwARAPUFswARADkG0QAhADkKcAEhAF0KeQEhAIUKggEhALMKiwFQIAAAAACG
GKcBGwABAHAgAAAAAMYBrQEbAAEAdCAAAAAAgQC7ARsAAQA4IQAAAADGAA0COwABAI8iAAAAAMYB
GQIbAAUAkSIAAAAAxgCEAhsABQDUIgAAAADGAI8CGwAFAHwmAAAAAMYAGQIbAAUAhDYAAAAAgQD+
AlgABQDoNgAAAACBACIDXQAGACw3AAAAAIEAKgNnAAcA/DcAAAAAgQCUA2cACADJOAAAAACGGKcB
GwAJABAmAAAAAJEAowsyAgkAICYAAAAAkQDzC0ACCgBTJgAAAACRADYMYgILAFsmAAAAAJEAeQyC
AgwAvTgAAAAAkRhIFNEGDQDROAAAAACGGKcBdwANANw4AAAAAIYInQOBABAA5jgAAAAAhgimA4YA
EQD9OAAAAACGALYDGwASAAU5AAAAAIYAvQMbABIADTkAAAAAhgDMA4sAEgAVOQAAAACGGKcBdwAS
ACA5AAAAAIYInQOBABUAKjkAAAAAhgimA4YAFgBBOQAAAACGALYDGwAXAEk5AAAAAIYAvQMbABcA
UTkAAAAAhgDMA4sAFwBZOQAAAACGGKcBdwAXAGQ5AAAAAIYInQOBABoAbjkAAAAAhgimA4YAGwCF
OQAAAACGALYDGwAcAI05AAAAAIYAvQMbABwAlTkAAAAAhgDMA4sAHACdOQAAAACGGKcBdwAcAKg5
AAAAAIYInQOBAB8AsjkAAAAAhgimA4YAIADJOQAAAACGALYDGwAhANE5AAAAAIYAvQMbACEA2TkA
AAAAhgDMA4sAIQDhOQAAAACGGKcBdwAhAOw5AAAAAIYInQOBACQA9jkAAAAAhgimA4YAJQANOgAA
AACGALYDGwAmABU6AAAAAIYAvQMbACYAHToAAAAAhgDMA4sAJgAlOgAAAACGGKcBdwAmADA6AAAA
AIYInQOBACkAOjoAAAAAhgimA4YAKgBROgAAAACGALYDGwArAFk6AAAAAIYAvQMbACsAYToAAAAA
hgDMA4sAKwBpOgAAAACGGKcBdwArAHQ6AAAAAIYInQOBAC4AfjoAAAAAhgimA4YALwCVOgAAAACG
ALYDGwAwAJ06AAAAAIYAvQMbADAApToAAAAAhgDMA4sAMACtOgAAAACGGKcBmwAwALw6AAAAAIYI
XQShADEA3ToAAAAAhghoBKEAMQD+OgAAAACGGKcBmwAxAA07AAAAAIYImwSrADIAMzsAAAAAhgir
BKsAMgBZOwAAAACGCLwEqwAyAH87AAAAAIYIyASrADIApTsAAAAAhgjQBKsAMgDLOwAAAACGCOkE
qwAyAPE7AAAAAIYIAgWrADIAFzwAAAAAhggXBasAMgA9PAAAAACDGKcBGwAyAEg8AAAAAJMIBQa3
ADIAgTwAAAAAkwgZBrwAMgCIPAAAAACTCCUGwQAyAJA8AAAAAJYISQbVADMAozwAAAAAhhinARsA
MwCXPAAAAACRGEgU0QYzADkkAAAAAIYYpwFkATMAXiQAAAAAhghOCnQBNwBmJAAAAACGCHQKfQE3
AG4kAAAAAIYInwqGATcAdiQAAAAAhgjECo8BNwCAJAAAAADGADIJqwA3ACAlAAAAAMYAzwqUATcA
mCUAAAAAxgDWCpkBOAAAAAEAXQYAAAIAZQYAAAMAbwYAAAQAdwYAAAEAgQYAAAEAhQYAAAEAhwYA
AAEAhwYAAAEAhQYAAAEADQwAAAEAUAwAAAEAkwwAAAEAjgYAAAIAlQYAAAMAdwYAAAEAqQYAAAEA
qQYAAAEAjgYAAAIAlQYAAAMAdwYAAAEAqQYAAAEAqQYAAAEAjgYAAAIAlQYAAAMAdwYAAAEAqQYA
AAEAqQYAAAEAjgYAAAIAlQYAAAMAdwYAAAEAqQYAAAEAqQYAAAEAjgYAAAIAlQYAAAMAdwYAAAEA
qQYAAAEAqQYAAAEAjgYAAAIAlQYAAAMAdwYAAAEAqQYAAAEAqQYAAAEAjgYAAAIAlQYAAAMAdwYA
AAEAqQYAAAEAqQYAAAEArwYAAAEArwYAAAEAqQYAAAEA4goAAAIA7QoAAAMA+goAAAQACgsAAAEA
qQZ5AKcBgQCBAKcBgQCJAKcBgQCRAKcBgQCZAKcBgQChAKcBgQCpAKcBgQCxAKcBgQC5AKcBgQDB
AKcBgQDJAKcB3wDRAKcBGwAJAKcBGwAJAG0I5AAJAHkI6wDZAKcBGwAJAIQCGwBhALEIqwA5AKcB
gQDhAOYIGwBBAKcBGwAJAI8CGwDpAPoI+gDhAAEJGwDxAB0JGwABATIJqwD5ADsJ/wAJAU4JBQEZ
ADIJqwD5ADsJCQFRAFoJEAFRADIJWAARAacBgQAZAXIJFQHpAHoJGwEMAKcBGwD5ADsJKAEMAKkJ
LgEpAacBGwApAccJPQExAacBGwA5AacBsQFJAacBGwAZAKcBGwAUADkKcAEUAF0KeQEUAIUKggEU
ALMKiwFBAIkLzgFBAIkL1wE8AEkG8wE8AM8K/QFEAEkG8wFEAM8K/QFMAEkG8wFMAM8K/QFUAEkG
8wFUAM8K/QE8ANYKLAJEANYKLAJMANYKLAJUANYKLAL5ALwMsAJpAfcMtQJcAKcBZAFcAJ8KhgFc
AE4KdAFcAHQKfQFcAMQKjwH5ADsJFQHpAP0MMgLpABIN0gJkAKcB5AJ5AT8N6gKBAacBGwBsAKcB
GwB0AKcBGwCRAacBFgPhAIgNIAOpAZwN3wCRAb4NJgOBAdgNLAPBAR0JGwB8AKcBGwCEAKcBGwCM
AAEOSQOUAA8OdAH5ACAOWgP5ACYOqwBxACsOvABRAF8OYQNRAG0OmQFRAHYOmQFRAIAOmQFRAKcB
cAOBAYgOegNhAY8OggPxAZ8OhwN5AaUOjAP5AK4OMgKEALwOmgOEAKkJoANRAMgOqAN8AKkJmgNR
ANQOqANsALwOmgNsAI8OsAOBAeoOtwNhAfEOvQOBAQwPwwP5AakJyQNsAPEOoAN0AI8OsAN0APEO
oAMBAiwP0AMRAqcB2QOBAV4P4QMZAqkJ5wMhAokPiwCEAAEO7gOcAA8OAgSkAKwPfQGkALYPdAF8
AKUOmgM5AqcBGwA5AtAPTgA5AtoPTgA5AuYPTgD5APIPHAScAIkPiwD5AP4PIgRBAAcQzgFBAgEO
JwQhAg8OLQRJAlsQMQSsAKcB5AJZAogOUQS0AKcB5AJZAqsQjAS8AKcB5ALEAAEOSQPMAA8OdAH5
AL0QIgT5ADsJAAWEAI8OsAP5AMUQCAX5AMwQDgWEAPEOoANBAtMQmQH5AL0QFAXpAN0QGwFpAqcB
gQBxAqcBGgVxAr4NIgWBAjURiwCBAjoRIgSBAkQRKAWJAqcBGwCRAqcBGwCRAoMRNgWRAqoRPQWh
AtcRQwWRAvERSgWRAgUShgC5AqcBGwC5AjMSUQW5AkASgQC5Ak0SgQC5AloSgQC5AmcS3wC5AnYS
gQCJApASgQCJAqMSgQCJAuYIWAXJAqcBgQDJAsQSXwXRAtwSqwCJAv0SZwXRAgYTqwDpABMTGwHh
AiwTGwCJAh0JGwAJAJgTcwXxArgTqwDxAsQTqwDpAtMTeQX5AN0TmQH5AOgTCAX5APITHARxAKcB
gQDUAKcBLgHcAKcBGwDcAKkJLgH5AhkUrAb5ACUUvQb5AC0UMgL5AEAUqwARAKcBdwARAPEOvQMR
AE8U3wAJA6cBgQARALYDGwARAL0DGwARAMwDiwDpApQU1QYRA80U2wYZA+gUoQAJAA8V4gYhA48O
6AYJAFAV7wYpA30V9QZBA6cBGwABArcV/AZpAKcBAgdRA6cBDwchAKcBGwAuAGMAtgcuABsAkAcu
ACMAkAcuAFsArQcuAAsAHwcuABMAZwcuACsAkAcuADMAZwcuADsAlgcuAEMAkAdjAIMA9QCjAaMG
9QDAAUsB9QDgAUsB9QDjAUsB9QAAAksB9QAgAksB9QAhAksB9QBBAksB9QBhAksB9QCBAksB9QAh
A0sB9QApA7sGFgdBA1MBuAFJA7sGFgdhA1MBuAGBA1MBuAGhA1MBuAEAClsB9QCgClsB9QDAClsB
9QDgClsB9QDxAEsB5gEdAoQFjQbDBgoHBAABAAUAAwAGAAUABwAHAAgACQAJAAsACgANAAsADwAM
ABEADQAZAA4AGwAPABwAAADYA48AAADdA5MAAADYA48AAADdA5MAAADYA48AAADdA5MAAADYA48A
AADdA5MAAADYA48AAADdA5MAAADYA48AAADdA5MAAADYA48AAADdA5MAAACABKYAAACHBKYAAAAx
BY8AAAA9BY8AAABKBY8AAABSBY8AAABWBY8AAABrBY8AAACABY8AAACRBY8AAAC4BccAAAAxBswA
AABVBtoAAADiCp0BAADtCqIBAAD6CqcBAAAKC6wBAQAUAAMAAQAVAAUAAQAaAAcAAQAbAAkAAQAg
AAsAAQAhAA0AAQAmAA8AAQAnABEAAQAsABMAAQAtABUAAQAyABcAAQAzABkAAQA4ABsAAQA5AB0A
AgA+AB8AAgA/ACEAAgBBACMAAgBCACUAAgBDACcAAgBEACkAAgBFACsAAgBGAC0AAgBHAC8AAgBI
ADEAAgBKADMAAgBLADUAAQBMADUAAgBNADcAAgBRADkAAgBSADsAAgBTAD0AAgBUAD8AIQHBAdQB
3QHgAeMB6wEFAg0CFQLIAtwCBAMOAzMDOgNCA1MD+gMOBD8EewS1BOIE8QSGBpsGBIAAAAEAAAAu
HkVoAAAAAAAASQgAAAsAAAAAAAAAAAAAAAEACAEAAAAABAAAAAAAAAAAAAAACgBjAQAAAAAEAAAA
AAAAAAAAAAAKAGwBAAAAAAsAAAAAAAAAAAAAAAEAzwEAAAAABAAAAAAAAAAAAAAACgBFAgAAAAAB
AAEAAAAAAAAAAABuADoDAAAAAAsAAAAAAAAAAAAAAAEA+QMAAAAAAQABAAAAAAAAAAAANAGtCQAA
AAAEAAAAAAAAAAAAAAAKAMcMAAAAAAQAAAAAAAAAAAAAAAoAHA0AAAAAAQADAAcAsR0AAAAALQVN
EQAAAAALAAAAAAAAAAAAAAABADITAAAAAAMAAgAHAAAAAAAAAKMGABQAAAAAAgAAAAAAAAAAAAAA
CgBjAQAAAAAAAAAAAQAAAPIVAAAAAAAAFwCSAwAAAAAZAJIDAAAAAB4A5gkBAAAAHgD6CQIAAAAe
ABAKAwAAAB4AKQqBAL8CgQDDApUAvwLHAL8CFgAWBBMBbAQXAacEEwHNBIUBuAYBAC0AAgAtAAAA
ADxNb2R1bGU+AFNDXzA3MjFiYjVkNTI2ODQ2MDBhMjFhOThjMzBlYTg4OTNmLmRsbABVc2VyQ29t
cG9uZW50AFNjcmlwdE1haW4AT3V0cHV0MEJ1ZmZlcgBFeGNlcHRpb25CdWZmZXIAUGxhY2VtZW50
QnVmZmVyAExlZ2FsQnVmZmVyAENvbGxhdGVyYWxCdWZmZXIATm90ZXNCdWZmZXIAQ29tYWtlckJ1
ZmZlcgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDXzA3MjFiYjVkNTI2ODQ2MDBh
MjFhOThjMzBlYTg4OTNmLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5U
eFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQA
U2NyaXB0QnVmZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24A
QXBwbGljYXRpb25TZXR0aW5nc0Jhc2UALmN0b3IARmluaXNoT3V0cHV0cwBNYXJrT3V0cHV0c0Zp
bmlzaGVkAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91
dHB1dE5hbWVNYXAAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBfZXhjZXB0aW9uUmVw
b3J0Q3JlYXRlZABTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PZGJjAE9kYmNDb25uZWN0aW9uAGNv
bm4AX2FwcERpcmVjdG9yeQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFRvdGFsQWN0aXZlQWNjb3Vu
dHMAQWNjb3VudHN3aXRoUmVzdWx0cwBBY2NvdW50c3dpdGhvdXRSZXN1bHRzAFN5c3RlbS5UZXh0
AFN0cmluZ0J1aWxkZXIAYXJ0aXZhaWRzAGdldEZvcm1hdGVkZGF0ZQBOdWxsYWJsZWAxAERhdGVU
aW1lAGdldERhdGUAQWRkUGxhY2VtZW50Um93AFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZQBSR1Mu
QXJ0aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAEdlbmVyYWxQdXJwb3NlUmVjb3JkQmFz
ZQBUAEFkZE10Um93AHNldF9EYXRhAHNldF9EYXRhX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dz
ZXQARW5kT2ZSb3dzZXQARGF0YQBEYXRhX0lzTnVsbABQYXJlbnRDb21wb25lbnQATWljcm9zb2Z0
LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1l
LldyYXBwZXIASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAGdldF9BUlRJVkEAZ2V0X0V4Y2VwdGlv
bkNvbm5lY3Rpb24AQVJUSVZBAEV4Y2VwdGlvbkNvbm5lY3Rpb24AZ2V0X2N1cnJlbnRGaWxlAGdl
dF9FbWFpbFN1YmplY3QAZ2V0X0VtYWlsVG8AZ2V0X0ZUUABnZXRfRnVsbEFyY2hpdmVEaXJlY3Rv
cnkAZ2V0X0Z1bGxJbmJvdW5kRGlyZWN0b3J5AGdldF9GdWxsTG9nRGlyZWN0b3J5AGdldF9GdWxs
T3V0Ym91bmREaXJlY3RvcnkAY3VycmVudEZpbGUARW1haWxTdWJqZWN0AEVtYWlsVG8ARlRQAEZ1
bGxBcmNoaXZlRGlyZWN0b3J5AEZ1bGxJbmJvdW5kRGlyZWN0b3J5AEZ1bGxMb2dEaXJlY3RvcnkA
RnVsbE91dGJvdW5kRGlyZWN0b3J5AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJl
c291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVy
ZQBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVm
YXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERlZmF1bHQAT3V0cHV0cwBPdXRwdXRJRHMAQnVmZmVy
cwBPdXRwdXRNYXAAc3RyAGQAcmVjb3JkAEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVl
AENvbXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJp
YnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmln
aHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0
cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNl
cnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAU0NfMDcyMWJiNWQ1MjY4NDYwMGEyMWE5OGMzMGVhODg5M2YAR2V0T3V0cHV0
SUQAR2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0
ZQBnZXRfQ29ubmVjdGlvblN0cmluZwBTeXN0ZW0uRGF0YS5Db21tb24ARGJDb25uZWN0aW9uAE9w
ZW4AU3lzdGVtLklPAEZpbGUARGVsZXRlAENsb3NlAFN5c3RlbS5Db21wb25lbnRNb2RlbABEaXNw
b3NlAFN0cmluZwBJbnQzMgBUb1N0cmluZwBDb25jYXQARW52aXJvbm1lbnQAZ2V0X05ld0xpbmUA
Z2V0X1RvZGF5AEZpbGVJbmZvAFBhdGgAQ29tYmluZQBXcml0ZUFsbFRleHQAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMATGlzdGAxAEFkZABDb21tb25DbGFzc2VzAEVtYWlsU2VuZGVyAFNlbmRN
YWlsADw+Zl9fQW5vbnltb3VzVHlwZTBgNAA8QVJBQ0NMQUNDVD5qX19UUGFyADxaWkFDUExDR1JQ
SUQ+al9fVFBhcgA8Q2FsbENvbm5lY3RUaW1lPmpfX1RQYXIAPFJlc3VsdD5qX19UUGFyADxBUkFD
Q0xBQ0NUPmlfX0ZpZWxkAGdldF9BUkFDQ0xBQ0NUADxaWkFDUExDR1JQSUQ+aV9fRmllbGQAZ2V0
X1paQUNQTENHUlBJRAA8Q2FsbENvbm5lY3RUaW1lPmlfX0ZpZWxkAGdldF9DYWxsQ29ubmVjdFRp
bWUAPFJlc3VsdD5pX19GaWVsZABnZXRfUmVzdWx0AEVxdWFscwBHZXRIYXNoQ29kZQBBUkFDQ0xB
Q0NUAFpaQUNQTENHUlBJRABDYWxsQ29ubmVjdFRpbWUAUmVzdWx0AENvbXBpbGVyR2VuZXJhdGVk
QXR0cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlckJyb3dzYWJsZUF0dHJpYnV0ZQBE
ZWJ1Z2dlckJyb3dzYWJsZVN0YXRlAERlYnVnZ2VySGlkZGVuQXR0cmlidXRlAEFwcGVuZABFcXVh
bGl0eUNvbXBhcmVyYDEAPENyZWF0ZU5ld091dHB1dFJvd3M+Yl9fMQBGdW5jYDIAQ1MkPD45X19D
YWNoZWRBbm9ueW1vdXNNZXRob2REZWxlZ2F0ZTUARGF0YVJvdwA8Q3JlYXRlTmV3T3V0cHV0Um93
cz5iX18yAHgAQ1MkPD45X19DYWNoZWRBbm9ueW1vdXNNZXRob2REZWxlZ2F0ZTYAPENyZWF0ZU5l
d091dHB1dFJvd3M+Yl9fMwBvAENTJDw+OV9fQ2FjaGVkQW5vbnltb3VzTWV0aG9kRGVsZWdhdGU3
ADxDcmVhdGVOZXdPdXRwdXRSb3dzPmJfXzQAZwBDUyQ8PjlfX0NhY2hlZEFub255bW91c01ldGhv
ZERlbGVnYXRlOABTdGFydHNXaXRoAFN5c3RlbS5EYXRhLkRhdGFTZXRFeHRlbnNpb25zAERhdGFS
b3dFeHRlbnNpb25zAEZpZWxkAEV4aXN0cwBJRW51bWVyYWJsZWAxAFJlYWRMaW5lcwBTeXN0ZW0u
Q29yZQBTeXN0ZW0uTGlucQBFbnVtZXJhYmxlAFdoZXJlAERhdGFUYWJsZQBEaWN0aW9uYXJ5YDIA
T2RiY0NvbW1hbmQAT2RiY1RyYW5zYWN0aW9uAENvbm5lY3Rpb25TdGF0ZQBnZXRfU3RhdGUARGJD
b21tYW5kAHNldF9Db21tYW5kVGltZW91dABPZGJjRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAElE
YXRhUmVhZGVyAExvYWQASURpc3Bvc2FibGUASGFzaFNldGAxAElFbnVtZXJhdG9yYDEAR2V0RW51
bWVyYXRvcgBnZXRfQ3VycmVudABDaGFyAFNwbGl0AFRyaW0AZ2V0X0ludmFyaWFudEN1bHR1cmUA
SUZvcm1hdFByb3ZpZGVyAERhdGVUaW1lU3R5bGVzAFRyeVBhcnNlRXhhY3QAZ2V0X1llYXIAZ2V0
X01vbnRoAGdldF9EYXkAU2VsZWN0AGdldF9JdGVtAERCTnVsbABWYWx1ZQBDb250YWlucwBJc051
bGxPckVtcHR5AENvbnRhaW5zS2V5AG9wX0xlc3NUaGFuAG9wX0dyZWF0ZXJUaGFuT3JFcXVhbABO
ZXdSb3cAc2V0X0l0ZW0ARGF0YVJvd0NvbGxlY3Rpb24AZ2V0X1Jvd3MAVHlwZQBSdW50aW1lVHlw
ZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBEYXRhQ29sdW1uAERhdGFDb2x1bW5Db2xsZWN0aW9u
AGdldF9Db2x1bW5zAFN5c3RlbS5Db2xsZWN0aW9ucwBJRW51bWVyYXRvcgBNb3ZlTmV4dABFbnVt
ZXJhdG9yAEtleVZhbHVlUGFpcmAyAGdldF9WYWx1ZQBnZXRfS2V5AFVwZGF0ZUFjY291bnRfVVBE
AEFjY291bnRJZABVcGRhdGVGaWVsZABVcGRhdGVWYWx1ZQBvcF9FcXVhbGl0eQBQYWRSaWdodABB
cHBlbmRMaW5lAEludGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAERhdGFUYWJsZUV4dGVuc2lvbnMA
RW51bWVyYWJsZVJvd0NvbGxlY3Rpb25gMQBBc0VudW1lcmFibGUARW51bWVyYWJsZVJvd0NvbGxl
Y3Rpb25FeHRlbnNpb25zAE9yZGVyZWRFbnVtZXJhYmxlUm93Q29sbGVjdGlvbmAxAE9yZGVyQnlE
ZXNjZW5kaW5nAFBhZExlZnQAUmVtb3ZlAEluc2VydABnZXRfQ291bnQAQXBwZW5kQWxsVGV4dABT
eXN0ZW0uRGF0YS5TcWxDbGllbnQAU3FsQ29ubmVjdGlvbgBTcWxDb21tYW5kAFNxbERhdGFSZWFk
ZXIARGJEYXRhUmVhZGVyAFJlYWQAR2V0U3RyaW5nAEdldEludDMyAFdpblNDUG5ldABXaW5TQ1AA
U2Vzc2lvbgBUcmFuc2Zlck9wdGlvbnMAVHJhbnNmZXJNb2RlAHNldF9UcmFuc2Zlck1vZGUAVHJh
bnNmZXJSZXN1bWVTdXBwb3J0AGdldF9SZXN1bWVTdXBwb3J0AFRyYW5zZmVyUmVzdW1lU3VwcG9y
dFN0YXRlAHNldF9TdGF0ZQBGaWxlUGVybWlzc2lvbnMAc2V0X0ZpbGVQZXJtaXNzaW9ucwBzZXRf
UHJlc2VydmVUaW1lc3RhbXAAU2Vzc2lvbk9wdGlvbnMAUHJvdG9jb2wAc2V0X1Byb3RvY29sAHNl
dF9Ib3N0TmFtZQBzZXRfVXNlck5hbWUAc2V0X1Bhc3N3b3JkAHNldF9Qb3J0TnVtYmVyAHNldF9T
c2hIb3N0S2V5RmluZ2VycHJpbnQAc2V0X0V4ZWN1dGFibGVQYXRoAHNldF9TZXNzaW9uTG9nUGF0
aABEaXJlY3RvcnlJbmZvAEdldEZpbGVzAEZpbGVTeXN0ZW1JbmZvAGdldF9OYW1lAFRyYW5zZmVy
T3BlcmF0aW9uUmVzdWx0AFB1dEZpbGVzAGdldF9GdWxsTmFtZQBNb3ZlAE9wZXJhdGlvblJlc3Vs
dEJhc2UAQ2hlY2sATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0
LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAA
Z2V0X0NvbXBvbmVudE1ldGFEYXRhAEV4Y2VwdGlvbgBnZXRfTWVzc2FnZQBnZXRfU3RhY2tUcmFj
ZQBGaXJlRXJyb3IAZ2V0X0xlbmd0aABTdWJzdHJpbmcAb3BfSW5lcXVhbGl0eQBGaWxlSGVscGVy
cwBDb21tb25FbmdpbmUAV3JpdGVTdHJpbmcAUmVwbGFjZQBJc051bGxPcldoaXRlU3BhY2UAVG9V
cHBlcgAuY2N0b3IAU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAElEVFNSdW50aW1l
Q29ubmVjdGlvbkNvbGxlY3Rpb24xMDAAZ2V0X1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbgBJ
RFRTUnVudGltZUNvbm5lY3Rpb24xMDAAR2V0UnVudGltZUNvbm5lY3Rpb25CeU5hbWUAZ2V0X0Nv
bm5lY3Rpb25NYW5hZ2VyAElEVFNWYXJpYWJsZXMxMDAAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAElE
VFNWYXJpYWJsZTEwMABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29u
dGV4dABJRFRTRXZhbHVhdG9yQ29udGV4dDEwMABHZXRWYWx1ZVdpdGhDb250ZXh0AERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUAQXNzZW1ibHkAZ2V0X0Fzc2VtYmx5AEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBTQ18wNzIxYmI1ZDUyNjg0NjAwYTIxYTk4
YzMwZWE4ODkzZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMAAAAAABFPAHUAdABwAHUA
dAAgADAAABNFAHgAYwBlAHAAdABpAG8AbgAAE1AAbABhAGMAZQBtAGUAbgB0AAALTABlAGcAYQBs
AAAVQwBvAGwAbABhAHQAZQByAGEAbAAAC04AbwB0AGUAcwAAD0MAbwBtAGEAawBlAHIAACtDAGwA
aQBlAG4AdAAgAEYAaQBsAGUAIABOAGEAbQBlADoAIAA8AGIAPgAATzwALwBiAD4APABiAHIAIAAv
AD4APABiAHIAIAAvAD4AVABvAHQAYQBsACAAQQBjAHQAaQB2AGUAIABBAGMAYwBvAHUAbgB0AHMA
OgAgAAA7PABiAHIAIAAvAD4AQQBjAGMAbwB1AG4AdABzACAAdwBpAHQAaAAgAFIAZQBzAHUAbAB0
AHMAOgAgAABBPABiAHIAIAAvAD4AQQBjAGMAbwB1AG4AdABzACAAdwBpAHQAaABvAHUAdAAgAFIA
ZQBzAHUAbAB0AHMAOgAgAABRQQByAHQAaQB2AGEAIABJAEQAcwAgAGYAbwByACAAYQBjAGMAbwB1
AG4AdABzACAAdwBpAHQAaABvAHUAdAAgAHIAZQBzAHUAbAB0AHMAOgAAM0EAYwBjAG8AdQBuAHQA
cwAgAFcAaQB0AGgAbwB1AHQAIABSAGUAcwB1AGwAdABzACAAABVNAE0ALQBkAGQALQB5AHkAeQB5
AAEJLgB0AHgAdAAAAQAfewAgAEEAUgBBAEMAQwBMAEEAQwBDAFQAIAA9ACAAACMsACAAWgBaAEEA
QwBQAEwAQwBHAFIAUABJAEQAIAA9ACAAACksACAAQwBhAGwAbABDAG8AbgBuAGUAYwB0AFQAaQBt
AGUAIAA9ACAAABcsACAAUgBlAHMAdQBsAHQAIAA9ACAAAAUgAH0AABFDAG8AbgBzAHUAbQBlAHIA
ABVBAFIAQQBDAEMATABBAEMAQwBUAAAZWgBaAEEAQwBQAEwAQwBHAFIAUABJAEQAAB9DAGEAbABs
AEMAbwBuAG4AZQBjAHQAVABpAG0AZQAADVIAZQBzAHUAbAB0AACDl1MARQBMAEUAQwBUACAACgAg
ACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBjAGMAbwB1AG4AdAAuAEEA
UgBBAEMASQBEACwACgAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAYQBj
AGMAbwB1AG4AdAAuAEEAUgBBAEMAQwBMAEEAQwBDAFQALAAKACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIABhAGMAYwBvAHUAbgB0AC4AWgBaAEEAQwBTAEUARwBTAEMAUgAs
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgAGEAYwBjAG8AdQBuAHQA
LgBaAFoAQQBDAFAATABDAEcAUgBQAEkARAAJAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIABGAFIATwBNACAAJQBTAFQAQQBSAFQAVABBAEIATABFACAAQQBSAEMATABJAEUATgBUACAA
SQBOAE4ARQBSACAASgBPAEkATgAgAEEAUgBBAEMAQwBPAFUATgBUACAAYQBjAGMAbwB1AG4AdAAg
AG8AbgAgAEEAUgBDAEwASQBEACAAPQAgAGEAYwBjAG8AdQBuAHQALgBBAFIAQQBDAEMATABUAEkA
RAAgAEEATgBEACAAQQBSAEMATABJAEQAIABJAE4AIAAoACcATgBGAFAAQQBQAFQAJwAsACcATgBG
AE4AWQBQAFQAJwAsACcATgBGAFAAQQBCAEEAJwAsACcATgBGAE4AWQBCAEEAJwApAAoAIAAgACAA
IAAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAAQQBSAFIARQBMAEEAVABJAE8ATgBT
AEgASQBQACAAYQByAHIAZQBsAGEAIABPAE4AIABhAGMAYwBvAHUAbgB0AC4AQQBSAEEAQwBSAFAA
UgBFAEwASQBEACAAPQAgAGEAcgByAGUAbABhAC4AQQBSAFIARQBMAEkARAAKACAAIAAgACAAIAAg
ACAAIAAgACAAIAAgACAAIAAgACAAVwBIAEUAUgBFACAAYQByAHIAZQBsAGEALgBBAFIAUgBFAEwA
UwBUAEEAVABVAFMASQBEACEAPQAnAEkATgBBAEMAVABDAEEATgBDAEUATAAnAAEDMQAAAzIAAAMz
AAADNAAAAzUAAAM2AAADNwAAAzgAAAM5AAADQQAAA0IAAANDAAADRwAAA04AAANQAAAfTQBNAGQA
ZAB5AHkAeQB5ACAASABIAG0AbQBzAHMAABVBAFIAQQBDAEkARAAgAD0AIAAnAAEDJwABFVoAWgBB
AEMAUwBFAEcAUwBDAFIAAA1BAFIAQQBDAEkARAAAA0AAAANFAAADRAAACUgARABSACAAABFNAE0A
ZABkAHkAeQB5AHkAAANSAAAJMAAxAE4AIAAAEXkAeQB5AHkATQBNAGQAZAAADUgASABtAG0AcwBz
AAAJRQBOAEQAIAAANU4AYQB0AGkAbwBuAGEAbABGAHUAZQBsAF8AQwBhAGwAbABfAFIAZQBzAHUA
bAB0AHMAXwAAgKtTAGUAcgB2AGUAcgA9AGQAZgB3ADIALQBlAHQAbAAtADAAMAAxADsARABhAHQA
YQBiAGEAcwBlAD0AQQByAHQAaQB2AGEASgBvAGIARQBuAGcAaQBuAGUAOwBVAHMAZQByACAASQBk
AD0AVwBBAFIARQBIAE8AVQBTAEUATQBBAE4AOwBQAGEAcwBzAHcAbwByAGQAPQBwADMAUgBWAEAA
JAAxAFYAMwA7AAGA41MARQBMAEUAQwBUACAAWwBIAG8AcwB0AF0ALABbAFUAcwBlAHIAbgBhAG0A
ZQBdACwAWwBQAGEAcwBzAHcAbwByAGQAXQAsAFsAUABvAHIAdABdACwAWwBIAG8AcwB0AEsAZQB5
AF0AIAAgAEYAUgBPAE0AIABbAEEAcgB0AGkAdgBhAEoAbwBiAEUAbgBnAGkAbgBlAF0ALgBbAGQA
YgBvAF0ALgBbAEYAVABQAEkAbgBmAG8AcgBtAGEAdABpAG8AbgBdACAAVwBIAEUAUgBFACAASQBE
ACAAPQAgADEANAAAFXcAaQBuAHMAYwBwAC4AZQB4AGUAACtQAHUAdABPAEIATABpAHYAZQBWAG8A
eABGAGkAbABlAHMALgBsAG8AZwAAHVAAcgBvAGMAZQBzAHMAIABWAGEAbAB1AGUAcwAABQoACgAA
AzAAAAtlAG4ALQBVAFMAAQUNAAoAAAtDAE8ATQBBAEsAAAMsAAADLgAAAy8AAD1SADoAXABQAHIA
bwBnAHIAYQBtACAARgBpAGwAZQBzACAAKAB4ADgANgApAFwAVwBpAG4AUwBDAFAAXAAAgJtJAHMA
TgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0
AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQA
aABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA1BAFIAVABJAFYAQQAAJ0UAeABj
AGUAcAB0AGkAbwBuAEMAbwBuAG4AZQBjAHQAaQBvAG4AABdjAHUAcgByAGUAbgB0AEYAaQBsAGUA
ABlFAG0AYQBpAGwAUwB1AGIAagBlAGMAdAAAD0UAbQBhAGkAbABUAG8AAAdGAFQAUAAAKUYAdQBs
AGwAQQByAGMAaABpAHYAZQBEAGkAcgBlAGMAdABvAHIAeQAAKUYAdQBsAGwASQBuAGIAbwB1AG4A
ZABEAGkAcgBlAGMAdABvAHIAeQAAIUYAdQBsAGwATABvAGcARABpAHIAZQBjAHQAbwByAHkAACtG
AHUAbABsAE8AdQB0AGIAbwB1AG4AZABEAGkAcgBlAGMAdABvAHIAeQAAcVMAQwBfADAANwAyADEA
YgBiADUAZAA1ADIANgA4ADQANgAwADAAYQAyADEAYQA5ADgAYwAzADAAZQBhADgAOAA5ADMAZgAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAAAApIEggggfu06ZJvH7
75hmygAIiYRdzYCAzJEIt3pcVhk04IkDBhIsAwYSMAMgAAEDBhIQAwYSFAMGEhgDBhIcAwYSIAMG
EiQDBhIoCyAEAQgdCB0SFRIZAgYCAwYSHQIGDgIGCAMGEiEEIAEODgkgARURJQERKQ4GMAEBAR4A
CPoM7UpFUaeCCSADARIVHQgSGQQgAQEOBCABAQIDIAACAygADgMoAAIDBhIFBSABARIFBCAAEjEE
KAASMQMgAA4DBhI1AwYSOQQAABI1BAAAEjkFAAEBEjkECAASNQQIABI5AwYSOAQAABI4BAgAEjgE
IAEBCAYAAggSGQ4FIAEdCAgDBwEIBAEAAAAEAAEBDgUAAQ4dDgMAAA4GAAMODg4OBAAAESkFAAIO
Dg4FAAIBDg4GFRKAkQEOBQACDhwcBSABARMACB9xgbPVnYxADSAFAQ4OFRKAkQEODg4YBwgODg4S
gIkVEoCRAQ4VEoCRAQ4dDhEpCyAEARMAEwETAhMDAwYTAAQgABMAAwYTAQQgABMBAwYTAgQgABMC
AwYTAwQgABMDBCABAhwDIAAIBCgAEwAEKAATAQQoABMCBCgAEwMGIAEBEYChCAEAAAAAAAAADBUS
PAQTABMBEwITAwUgARIhDgITAAUgARIhHAITAQITAgITAwQHARIhBxUSgKkBEwAJAAAVEoCpARMA
ByACAhMAEwAHFRKAqQETAQcVEoCpARMCBxUSgKkBEwMOBwEVEjwEEwATARMCEwMFIAEIEwAEAAEC
DggGFRKArQIOAg4AARUSPAQODhEpDhKAsRIGFRKArQISgLEVEjwEDg4RKQ4NAAERKRUSPAQODhEp
DhEGFRKArQIVEjwEDg4RKQ4RKRQAARUSPAQODhEpDhUSPAQODhEpDhgGFRKArQIVEjwEDg4RKQ4V
EjwEDg4RKQ4EIAECDgkQAQIeABKAsQ4DCgEOBAoBESkJFRI8BA4OESkOCQABFRKAuQEODgcVEoCt
Ag4CBSACARwYGRABAhUSgLkBHgAVEoC5AR4AFRKArQIeAAIJFRKAxQIOEoDBBxUSgMUCDggJIAMB
DhIdEoDNBSAAEYDRBSAAEoDZBiABARKA3QYVEoDlAQ4HFRKAxQIODgYVEoC5AQ4JIAAVEoDpARMA
BhUSgOkBDgYgAR0OHQMOAAUCDg4SgPERgPUQESkJIAYBCAgICAgIByABHRKAsQ4EIAEcDgQGEoD5
DRABAgIVEoC5AR4AHgAFIAECEwAHIAIBEwATAQcAAgIRKREpBiABEwETAAUgABKAsQUgAgEIHAUg
ABKA/QYgAQESgLEIAAESgQERgQUHIAIBDhKBAQUgABKBDQYgAQESgQkLIAAVEYEVAhMAEwEHFRGB
FQIODgsgABURgRkCEwATAQcVEYEZAg4OBQoBEoEdBQACAg4OBCABDggFIAASgREDIAAcDQABFRKB
KQESgLESgMERFRKArQISgLEVEjwEDg4RKQ4aEAICFRKBKQEeARUSgSkBHgAVEoCtAh4AHgEOCgIS
gLEVEjwEDg4RKQ4QFRKArQIVEjwEDg4RKQ4RKRoQAgIVEoExAR4AFRKBKQEeABUSgK0CHgAeAQ0K
AhUSPAQODhEpDhEpFxUSgK0CFRI8BA4OESkOFRI8BA4OESkOFAoCFRI8BA4OESkOFRI8BA4OESkO
DhUSgSkBFRI8BA4OESkODhUSgOkBFRI8BA4OESkOBwAEDg4ODg4FIAIOCAgFIAIOCA4FIAIOCAMH
IAIBDhKBNQUgABKBPQQgAQgICCJx7Eo8VtC/BiABARGBTQUgABKBUQYgAQERgVUGIAEBEoFZBiAB
ARGBYQYgAQESgV0HIAEdEoCJDgsgBBKBbQ4OAhKBSQUgABKBdQogBgEIDg4OCBACgQAHTBUSgLkB
Dg4VEoC5AQ4SIRKAwQ4ODhUSgMUCDhKAwRUSgMUCDggVEoDFAg4IDhKAyRKA2RUSgOUBDhUSgOUB
DhUSgMUCDg4VEoDFAg4OHQ4ODg4ODh0OESkRKREpHRKAsRKAwRKAsRKAwRKBCRKAsRURgRkCDg4S
gR0SgR0SgR0SgR0ICBKAsRUSgSkBFRI8BA4OESkOFRI8BA4OESkODg4VEYEZAg4ODg4ODggODhKB
NRKBORKBPRKBRRKBSRKBXRKBZR0SgIkSgW0SgXkCHQ4VEoDpAQ4dAxUSgMUCDggOFRGBFQIODhEp
EoERFRKA6QEVEjwEDg4RKQ4SgOEIBhURJQERKQ0HBBI5ESkCFRElAREpBxUSgJEBHgAIPgwI1ZzD
1lcLEAEBDhUSgYEBHgAECgEeAAUgAg4ODg0HBBUSgJEBHgAODh0DAwAAAQUgABKBiQYgARKBjQ4F
IAASgZEGIAESgZUcBQAAEoGZBiABHBKBnQUgABKBpQcgAgEOEoGlBAcBEjUGIAEBEYGtCAEAAgAA
AAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFt
ZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzA3MjFiYjVkNTI2ODQ2MDBhMjFhOThjMzBlYTg4OTNm
AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4
Y2VwdGlvblRocm93cwEAAABofAAAAAAAAAAAAAB+fAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
cHwAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACA
AAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWIAAALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBS
AFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQBFaC4eAAABAEVoLh4/AAAAAAAAAAQA
AAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABU
AHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkA
bgBmAG8AAADsAgAAAQAwADAAMAAwADAANABiADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBp
AHAAdABpAG8AbgAAAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUAMgA2ADgANAA2ADAAMABhADIA
MQBhADkAOABjADMAMABlAGEAOAA4ADkAMwBmAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBu
AAAAAAAxAC4AMAAuADcANwAyADYALgAyADYANgA5ADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEA
bABOAGEAbQBlAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUAMgA2ADgANAA2ADAAMABhADIAMQBh
ADkAOABjADMAMABlAGEAOAA4ADkAMwBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAA
eQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAB4ACgAAQBP
AHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUA
MgA2ADgANAA2ADAAMABhADIAMQBhADkAOABjADMAMABlAGEAOAA4ADkAMwBmAC4AZABsAGwAAABo
ACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADAANwAyADEAYgBiADUAZAA1ADIA
NgA4ADQANgAwADAAYQAyADEAYQA5ADgAYwAzADAAZQBhADgAOAA5ADMAZgAAAEQADwABAFAAcgBv
AGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA3ADIANgAuADIANgA2ADkAMwAAAAAA
SAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANwA3ADIANgAu
ADIANgA2ADkAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHAAAAwAAACQPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0721bb5d52684600a21a98c30ea8893f</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::currentFile,User::FullArchiveDirectory,User::FullInboundDirectory,User::FullLogDirectory,User::FullOutboundDirectory,$Package::FTP,$Project::EmailSubject,$Project::EmailTo</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">7d7f95a0917b3e77d6a078310ea273d3</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">574e5cb2981ad49467ebb09ab84fffb11afe2346</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Connections[ARTIVA]"
                      connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                      connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                      name="ARTIVA" />
                    <connection
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Output 0].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Output 0].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Exception]"
                      hasSideEffects="true"
                      name="Exception">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Exception].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Exception].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Placement]"
                      hasSideEffects="true"
                      name="Placement">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Placement].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Placement].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Legal]"
                      hasSideEffects="true"
                      name="Legal">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Legal].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Legal].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Collateral]"
                      hasSideEffects="true"
                      name="Collateral">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Collateral].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Collateral].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Notes]"
                      hasSideEffects="true"
                      name="Notes">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Notes].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Notes].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Comaker]"
                      hasSideEffects="true"
                      name="Comaker">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Comaker].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="8000"
                          lineageId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Comaker].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Create_CSVs 1\Process_Files.Paths[Exception]"
                  endId="Package\Create_CSVs 1\Process_Files\Exceptions.Inputs[Flat File Destination Input]"
                  name="Exception"
                  startId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Exception]" />
                <path
                  refId="Package\Create_CSVs 1\Process_Files.Paths[Output 0]"
                  endId="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File.Inputs[Flat File Destination Input]"
                  name="Output 0"
                  startId="Package\Create_CSVs 1\Process_Files\Script Component.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{ABC0BF13-72A5-4592-901F-854ADB108A46}"
          DTS:ObjectName="{ABC0BF13-72A5-4592-901F-854ADB108A46}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::currentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Create_CSVs 1\Process_Files"
          TopLeft="76,40" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="281,137"
          Size="281,180"
          Id="Package\Create_CSVs 1"
          TopLeft="396,72" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Create_CSVs 1\Process_Files">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Create_CSVs 1\Process_Files\Script Component"
          TopLeft="295.5,122.5" />
        <NodeLayout
          Size="129,42"
          Id="Package\Create_CSVs 1\Process_Files\Exceptions"
          TopLeft="508,42" />
        <NodeLayout
          Size="182,42"
          Id="Package\Create_CSVs 1\Process_Files\Artiva_Placement_File"
          TopLeft="66,46" />
        <EdgeLayout
          Id="Package\Create_CSVs 1\Process_Files.Paths[Output 0]"
          TopLeft="351.166666666667,122.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-194.166666666667,-34.5"
              Start="0,0"
              End="-194.166666666667,-27">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.0012150668287" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.0012150668287"
                    Point2="0,-14.0012150668287"
                    Point3="-4,-14.0012150668287" />
                  <mssgle:LineSegment
                    End="-190.166666666667,-14.0012150668287" />
                  <mssgle:CubicBezierSegment
                    Point1="-190.166666666667,-14.0012150668287"
                    Point2="-194.166666666667,-14.0012150668287"
                    Point3="-194.166666666667,-18.0012150668287" />
                  <mssgle:LineSegment
                    End="-194.166666666667,-27" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-117.239055989584,-9.0012150668287,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Create_CSVs 1\Process_Files.Paths[Exception]"
          TopLeft="402.833333333333,122.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.666666666667,-38.5"
              Start="0,0"
              End="169.666666666667,-31">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-11.6245443499392" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-11.6245443499392"
                    Point2="0,-15.6245443499392"
                    Point3="4,-15.6245443499392" />
                  <mssgle:LineSegment
                    End="165.666666666667,-15.6245443499392" />
                  <mssgle:CubicBezierSegment
                    Point1="165.666666666667,-15.6245443499392"
                    Point2="169.666666666667,-15.6245443499392"
                    Point3="169.666666666667,-19.6245443499392" />
                  <mssgle:LineSegment
                    End="169.666666666667,-31" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="63.2163997395835,-10.6245443499392,43.2338671875,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>