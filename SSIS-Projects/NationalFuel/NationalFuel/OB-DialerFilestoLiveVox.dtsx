<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/15/2020 8:40:46 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{3C5297F3-8AEC-4BDB-AD75-F64BA7079B98}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="OB-DialerFilestoLiveVox"
  DTS:PackageType="5"
  DTS:VersionBuild="69"
  DTS:VersionGUID="{1304CD82-E3EC-452E-8210-D0770E7AC1FF}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=FIRSTMIG1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{AF34D62F-D753-4B10-A614-571F04F2EB57}"
      DTS:ObjectName="Archive">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Archive\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5B53F3A8-7640-467D-873B-6602F428F66D}"
      DTS:ObjectName="FTP">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">/ftpIn/</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{54C9FCE1-A77E-47DA-9427-7ADF586B4A31}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{8F260934-8807-4E7B-B442-D3E735738608}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9470B638-25C5-4475-B708-FD4885BF2A1E}"
      DTS:ObjectName="Log">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Logs\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{1E6162A4-C9D9-481D-8DBC-08BB72DD5731}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DFB53F04-F475-46F6-AFDF-5B23318DD00D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::Archive]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullArchiveDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CDD5269E-D646-45A5-8B04-DE9ACEAA26F7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::Log]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullLogDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Logs\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6AB73125-D6E7-4345-AEB3-0CF53E21A31D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] +  @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\NationalFuel\Outbound\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Process_Files"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{034b1151-58c9-42b4-9e50-61c6c5f18bc1}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Process_Files"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Process_Files\Script Component"
              componentClassID="DTS.ManagedComponentWrapper.3"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Collections.Generic;
using FileHelpers;
using System.IO;
using System.Linq;
using System.Globalization;
using System.Data.Odbc;
using System.Text;
using System.Data.SqlClient;
using WinSCP;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    OdbcConnection conn;
    public static string _appDirectory = @"R:\Program Files (x86)\WinSCP\";
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        conn = new OdbcConnection(Connections.ARTIVA.ConnectionString);
        conn.Open();

        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();

        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }

        string bd = "File Name: " + PAPreTermNoattemptsf + "; " +
        "File Count: " + PAPreTermNoattemptscnt.ToString() + "<br />" +
        "File Name: " + PAPreTermDaytimeReqMetf + "; " +
        "File Count: " + PAPreTermDaytimeReqMetcnt.ToString() + "<br />" +
        "File Name: " + PAPreTermEveningReqMetf + "; " +
        "File Count: " + PAPreTermEveningReqMetcnt.ToString() + "<br />" +
         "File Name: " + PAPreTermBothReqsMetf + "; " +
        "File Count: " + PAPreTermBothReqsMetcnt.ToString() + "<br />" +
        "File Name: " + NYPreTermf + "; " +
        "File Count: " + NYPreTermcnt.ToString() + "<br />" +
        "File Name: " + PABrokenArrangementf + "; " +
        "File Count: " + PABrokenArrangementcnt.ToString() + "<br />" +
        "File Name: " + NYBrokenArrangementf + "; " +
        "File Count: " + NYBrokenArrangementcnt.ToString() + "<br />" +
                "File Name: " + NYPreTermfcom + "; " +
        "File Count: " + NYPreTermcntcom.ToString() + "<br />" +
                        "File Name: " + NYBrokenArrangementfcom + "; " +
        "File Count: " + NYBrokenArrangementcntcom.ToString() + "<br />" +
                        "File Name: " + PAPreTermfcom + "; " +
        "File Count: " + PAPreTermcntcom.ToString() + "<br />" +
                        "File Name: " + PABrokenArrangementfcom + "; " +
        "File Count: " + PABrokenArrangementcntcom.ToString() + "<br />"
        ;


       new CommonClasses.EmailSender().SendMail(Variables.EmailTo, "", null, Variables.EmailSubject, bd);
       
    }
    private int PAPreTermNoattemptscnt;
    private int PAPreTermDaytimeReqMetcnt;
    private int PAPreTermEveningReqMetcnt;
    private int PAPreTermBothReqsMetcnt;
    private int NYPreTermcnt;
    private int PABrokenArrangementcnt;
    private int NYBrokenArrangementcnt;

    private int NYPreTermcntcom;
    private int PAPreTermcntcom;
    private int PABrokenArrangementcntcom;
    private int NYBrokenArrangementcntcom;

    private string PAPreTermNoattemptsf;
    private string PAPreTermDaytimeReqMetf;
    private string PAPreTermEveningReqMetf;
    private string PAPreTermBothReqsMetf;
    private string NYPreTermf;
    private string PABrokenArrangementf;
    private string NYBrokenArrangementf;

    private string NYPreTermfcom;
    private string PAPreTermfcom;
    private string PABrokenArrangementfcom;
    private string NYBrokenArrangementfcom;


    public override void CreateNewOutputRows()
    {
        try
        {


            string query = "";
            
            var acc = new DataTable();

            query = @"SELECT DISTINCT account.ARACID,ARENFNM,ARENLNM,ARENPH,ARENPH2,ZZUTSVC2ADD1,ZZUTSVC2CTY,ZZUTSVC2ST,
ZZUTSVC2ZIP,ZZUTSRVACTBAL,ZZUTTRNAMT,ZZUTDSCDTE,ZZUTLSTBILDTE,ZZUTWRTOFFAMT,ARACCLACCT,ZZACSEGSCR,clt.ARCLID,ent.ARENBUSINESS 
FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT account on ARCLID = account.ARACCLTID AND ARCLID IN ('NFPAPT','NFNYPT','NFPABA','NFNYBA')
                JOIN ARENTITY ent ON account.ARACRPID = ent.ARENID  
                JOIN ARCLIENT clt ON account.ARACCLTID = clt.ARCLID   
                JOIN ARRELATIONSHIP arrela ON account.ARACRPRELID = arrela.ARRELID   
                LEFT JOIN ARCONLVL con on con.ARCONLID = arrela.ARRELCONLVL 
                LEFT JOIN ARROLE ar on ar.ARRLID=arrela.ARRELROLEID
				LEFT JOIN ZZUTILITIES zzu ON zzu.ZZUTACID = account.ARACID
				WHERE (account.ARACCANCID IS NULL OR account.ARACCANCID ='') 
				AND arrela.ARRELSTATUSID NOT IN ('BANKRUPT','DECEASED','INCARCERATED','MILDEPLY') 
                AND	arrela.ARRELPHASE NOT IN ('AUDIT','LEGAL','LETTER','PRECOLLECT')
				AND (account.ARACDISPUTE!='Y' OR account.ARACDISPUTE IS NULL)
				AND arrela.ARRELPHSTYP='ACTIVE'
				AND arrela.ARRELRESP='Y'
				AND con.ARCONLPHONE='Y'
				AND arrela.ARRELID=arrela.ARRELLEAD
				AND arrela.ARRELRLCLASSID='ARACCTHOLDR'
				AND ar.ARRLPOOL='Y'
				AND ((ent.ARENPH IS NOT NULL AND ent.ARENPH!=''
				AND (ent.ARENPF IN ('C', 'G', 'N', 'U','') OR ent.ARENPF IS NULL))
				OR (ent.ARENPH2 IS NOT NULL AND ent.ARENPH2!=''
				AND (ent.ARENPF2 IN ('C', 'G', 'N', 'U','') OR ent.ARENPF2 IS NULL)))";

            using (OdbcCommand cmd = new OdbcCommand(query, conn, null))
            {

                if (conn.State != ConnectionState.Open)
                    conn.Open();

                cmd.CommandTimeout = 300000000;


                using (var reader = cmd.ExecuteReader())
                {
                    acc.Load(reader);
                }




            }

            //string csv = "Account Number,First Name,Last Name,Primary Phone #,Alternate Phone,Service Address 1,Service Address City,Service Address State,Service Address Zip,Service Account Balance,Transaction Amount,Disconnect Date,Last Bill Date,Write Off Amt,Client Reference Number\n";
            string csv = "ArtivaID,FirstName,LastName,HomePhone,AltPhone,ServiceToAddressLine1,ServiceToAddressCity,ServiceToAddressState,ServiceToAddressZip,TotalAmountDue,AmountPastDue,ProposedTerminationDate,CurrentBillDueDate,AgreementDefaultAmount,ClientAccountNumber,PlatformID\n";

            var PAPreTermNoattempts = new StringBuilder(csv);
            var PAPreTermDaytimeReqMet = new StringBuilder(csv);
            var PAPreTermEveningReqMet = new StringBuilder(csv);
            var PAPreTermBothReqsMet = new StringBuilder(csv);
            var NYPreTerm = new StringBuilder(csv);
            var PABrokenArrangement = new StringBuilder(csv);
            var NYBrokenArrangement = new StringBuilder(csv);

            var PABrokenArrangementCom = new StringBuilder(csv);
            var NYBrokenArrangementCom = new StringBuilder(csv);
            var NYPreTermCom = new StringBuilder(csv);
            var PAPreTermCom = new StringBuilder(csv);

            string ARACID = string.Empty;
            string ARENFNM = string.Empty;
            string ARENLNM = string.Empty;
            string ARENPH = string.Empty;
            string ARENPH2 = string.Empty;
            string ZZUTSVC2ADD1 = string.Empty;
            string ZZUTSVC2CTY = string.Empty;
            string ZZUTSVC2ST = string.Empty;
            string ZZUTSVC2ZIP = string.Empty;
            string ZZUTSRVACTBAL = string.Empty;
            string ZZUTTRNAMT = string.Empty;
            string ZZUTWRTOFFAMT = string.Empty;
            string ARACCLACCT = string.Empty;
            string ZZACSEGSCR = string.Empty;
            string ZZUTDSCDTE = "";
            string ZZUTLSTBILDTE = "";
            string ARCLID = string.Empty;
            string ARENBUSINESS = "";


            foreach (DataRow r in acc.Rows)
            {
                ARACID = r["ARACID"] == DBNull.Value || r["ARACID"] == null ? "" : r["ARACID"].ToString();
                ARENFNM = r["ARENFNM"] == DBNull.Value || r["ARENFNM"] == null ? "" : r["ARENFNM"].ToString();
                ARENLNM = r["ARENLNM"] == DBNull.Value || r["ARENLNM"] == null ? "" : r["ARENLNM"].ToString();
                ARENPH = r["ARENPH"] == DBNull.Value || r["ARENPH"] == null ? "" : r["ARENPH"].ToString();
                ARENPH2 = r["ARENPH2"] == DBNull.Value || r["ARENPH2"] == null ? "" : r["ARENPH2"].ToString();
                ZZUTSVC2ADD1 = r["ZZUTSVC2ADD1"] == DBNull.Value || r["ZZUTSVC2ADD1"] == null ? "" : r["ZZUTSVC2ADD1"].ToString();
                ZZUTSVC2CTY = r["ZZUTSVC2CTY"] == DBNull.Value || r["ZZUTSVC2CTY"] == null ? "" : r["ZZUTSVC2CTY"].ToString();
                ZZUTSVC2ST = r["ZZUTSVC2ST"] == DBNull.Value || r["ZZUTSVC2ST"] == null ? "" : r["ZZUTSVC2ST"].ToString();
                ZZUTSVC2ZIP = r["ZZUTSVC2ZIP"] == DBNull.Value || r["ZZUTSVC2ZIP"] == null ? "" : r["ZZUTSVC2ZIP"].ToString();
                ZZUTSRVACTBAL = r["ZZUTSRVACTBAL"] == DBNull.Value || r["ZZUTSRVACTBAL"] == null ? "" : r["ZZUTSRVACTBAL"].ToString();
                ZZUTTRNAMT = r["ZZUTTRNAMT"] == DBNull.Value || r["ZZUTTRNAMT"] == null ? "" : r["ZZUTTRNAMT"].ToString();
                ZZUTWRTOFFAMT = r["ZZUTWRTOFFAMT"] == DBNull.Value || r["ZZUTWRTOFFAMT"] == null ? "" : r["ZZUTWRTOFFAMT"].ToString();
                ARACCLACCT = r["ARACCLACCT"] == DBNull.Value || r["ARACCLACCT"] == null ? "" : r["ARACCLACCT"].ToString();
                ZZACSEGSCR = r["ZZACSEGSCR"] == DBNull.Value || r["ZZACSEGSCR"] == null ? "" : r["ZZACSEGSCR"].ToString();
                ARENBUSINESS = r["ARENBUSINESS"] == DBNull.Value || r["ARENBUSINESS"] == null ? "" : r["ARENBUSINESS"].ToString();
                ARCLID = r["ARCLID"] == DBNull.Value || r["ARCLID"] == null ? "" : r["ARCLID"].ToString();
                ZZUTDSCDTE = r["ZZUTDSCDTE"] == DBNull.Value || r["ZZUTDSCDTE"] == null ? "" : ((DateTime)r["ZZUTDSCDTE"]).ToString("MMddyyyy");
                ZZUTLSTBILDTE = r["ZZUTLSTBILDTE"] == DBNull.Value || r["ZZUTLSTBILDTE"] == null ? "" : ((DateTime)r["ZZUTLSTBILDTE"]).ToString("MMddyyyy");


                if(ARCLID == "NFPAPT")
                {
                    if(ARENBUSINESS == "N")
                    {
                        if (string.IsNullOrEmpty(ZZACSEGSCR))
                        {
                            PAPreTermNoattempts.AppendLine(ARACID + "," +
                            ARENFNM + "," +
                            ARENLNM + "," +
                            ARENPH + "," +
                            ARENPH2 + "," +
                            "\"" + ZZUTSVC2ADD1 + "\"," +
                            ZZUTSVC2CTY + "," +
                            ZZUTSVC2ST + "," +
                            ZZUTSVC2ZIP + "," +
                            ZZUTSRVACTBAL + "," +
                            ZZUTTRNAMT + "," +
                            ZZUTDSCDTE + "," +
                            ZZUTLSTBILDTE + "," +
                            ZZUTWRTOFFAMT + "," +
                            ARACCLACCT + "," + "ARTIVA_1");

                            PAPreTermNoattemptscnt++;
                        }
                        else if (ZZACSEGSCR == "D")
                        {

                            PAPreTermDaytimeReqMet.AppendLine(ARACID + "," +
                            ARENFNM + "," +
                            ARENLNM + "," +
                            ARENPH + "," +
                            ARENPH2 + "," +
                            "\"" + ZZUTSVC2ADD1 + "\"," +
                            ZZUTSVC2CTY + "," +
                            ZZUTSVC2ST + "," +
                            ZZUTSVC2ZIP + "," +
                            ZZUTSRVACTBAL + "," +
                            ZZUTTRNAMT + "," +
                            ZZUTDSCDTE + "," +
                            ZZUTLSTBILDTE + "," +
                            ZZUTWRTOFFAMT + "," +
                            ARACCLACCT + "," + "ARTIVA_1");

                            PAPreTermDaytimeReqMetcnt++;
                        }
                        else if (ZZACSEGSCR == "E")
                        {

                            PAPreTermEveningReqMet.AppendLine(ARACID + "," +
                            ARENFNM + "," +
                            ARENLNM + "," +
                            ARENPH + "," +
                            ARENPH2 + "," +
                            "\"" + ZZUTSVC2ADD1 + "\"," +
                            ZZUTSVC2CTY + "," +
                            ZZUTSVC2ST + "," +
                            ZZUTSVC2ZIP + "," +
                            ZZUTSRVACTBAL + "," +
                            ZZUTTRNAMT + "," +
                            ZZUTDSCDTE + "," +
                            ZZUTLSTBILDTE + "," +
                            ZZUTWRTOFFAMT + "," +
                            ARACCLACCT + "," + "ARTIVA_1");

                            PAPreTermEveningReqMetcnt++;
                        }
                        else if (ZZACSEGSCR == "B")
                        {

                            PAPreTermBothReqsMet.AppendLine(ARACID + "," +
                            ARENFNM + "," +
                            ARENLNM + "," +
                            ARENPH + "," +
                            ARENPH2 + "," +
                            "\"" + ZZUTSVC2ADD1 + "\"," +
                            ZZUTSVC2CTY + "," +
                            ZZUTSVC2ST + "," +
                            ZZUTSVC2ZIP + "," +
                            ZZUTSRVACTBAL + "," +
                            ZZUTTRNAMT + "," +
                            ZZUTDSCDTE + "," +
                            ZZUTLSTBILDTE + "," +
                            ZZUTWRTOFFAMT + "," +
                            ARACCLACCT + "," + "ARTIVA_1");

                            PAPreTermBothReqsMetcnt++;
                        }
                    }
                    else if (ARENBUSINESS == "Y")
                    {

                        PAPreTermCom.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        PAPreTermcntcom++;
                    }
                }

                if (ARCLID == "NFNYPT")
                    {

                    if(ARENBUSINESS == "N")
                    {
                        NYPreTerm.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        NYPreTermcnt++;
                    } else if (ARENBUSINESS == "Y")
                    {

                        NYPreTermCom.AppendLine(ARACID + "," +
                         ARENFNM + "," +
                         ARENLNM + "," +
                         ARENPH + "," +
                         ARENPH2 + "," +
                         "\"" + ZZUTSVC2ADD1 + "\"," +
                         ZZUTSVC2CTY + "," +
                         ZZUTSVC2ST + "," +
                         ZZUTSVC2ZIP + "," +
                         ZZUTSRVACTBAL + "," +
                         ZZUTTRNAMT + "," +
                         ZZUTDSCDTE + "," +
                         ZZUTLSTBILDTE + "," +
                         ZZUTWRTOFFAMT + "," +
                         ARACCLACCT + "," + "ARTIVA_1");

                        NYPreTermcntcom++;
                    }
                        
                    }

                if (ARCLID == "NFPABA")
                    {

                    if(ARENBUSINESS == "N")
                    {
                        PABrokenArrangement.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        PABrokenArrangementcnt++;

                    } else if (ARENBUSINESS == "Y")
                    {
                        PABrokenArrangementCom.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        PABrokenArrangementcntcom++;

                    }
                        
                    }

                if (ARCLID == "NFNYBA")
                    {

                    if(ARENBUSINESS == "N")
                    {
                        NYBrokenArrangement.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        NYBrokenArrangementcnt++;

                    }
                    else if (ARENBUSINESS == "Y")
                    {
                        NYBrokenArrangementCom.AppendLine(ARACID + "," +
                        ARENFNM + "," +
                        ARENLNM + "," +
                        ARENPH + "," +
                        ARENPH2 + "," +
                        "\"" + ZZUTSVC2ADD1 + "\"," +
                        ZZUTSVC2CTY + "," +
                        ZZUTSVC2ST + "," +
                        ZZUTSVC2ZIP + "," +
                        ZZUTSRVACTBAL + "," +
                        ZZUTTRNAMT + "," +
                        ZZUTDSCDTE + "," +
                        ZZUTLSTBILDTE + "," +
                        ZZUTWRTOFFAMT + "," +
                        ARACCLACCT + "," + "ARTIVA_1");

                        NYBrokenArrangementcntcom++;

                    }

                    }
                



            }

            PAPreTermNoattemptsf = "National_Fuel_1P_PA_PreTerm_NA_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PAPreTermDaytimeReqMetf = "National_Fuel_1P_PA_PreTerm_DAY_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PAPreTermEveningReqMetf = "National_Fuel_1P_PA_PreTerm_EVE_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PAPreTermBothReqsMetf = "National_Fuel_1P_PA_PreTerm_BTH_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            NYPreTermf = "National_Fuel_1P_NY_PreTerm_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PABrokenArrangementf = "National_Fuel_1P_PA_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            NYBrokenArrangementf = "National_Fuel_1P_NY_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";

             NYPreTermfcom = "National_Fuel_1P_COM_NY_PreTerm_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PAPreTermfcom = "National_Fuel_1P_COM_PA_PreTerm_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            PABrokenArrangementfcom = "National_Fuel_1P_COM_PA_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";
            NYBrokenArrangementfcom = "National_Fuel_1P_COM_NY_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv";

            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_PA_PreTerm_NA_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", PAPreTermNoattempts.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_PA_PreTerm_DAY_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", PAPreTermDaytimeReqMet.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_PA_PreTerm_EVE_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", PAPreTermEveningReqMet.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_PA_PreTerm_BTH_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", PAPreTermBothReqsMet.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_NY_PreTerm_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", NYPreTerm.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_PA_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", PABrokenArrangement.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + "National_Fuel_1P_NY_BrokenArrg_" + DateTime.Today.ToString("yyyyMMdd") + ".csv", NYBrokenArrangement.ToString());

            File.AppendAllText(Variables.FullOutboundDirectory + NYPreTermfcom, NYPreTermCom.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + PAPreTermfcom, PAPreTermCom.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + PABrokenArrangementfcom, PABrokenArrangementCom.ToString());
            File.AppendAllText(Variables.FullOutboundDirectory + NYBrokenArrangementfcom, NYBrokenArrangementCom.ToString());


            //upload outbound file

            
            if (!string.IsNullOrEmpty(Variables.FTP))
            {
                string ftpURL = "";
                string ftpUser = "";
                string ftpPass = "";
                int ftpPort = 0;
                string ftpDir = Variables.FTP;
                string ftpKey = "";

                using (var connection = new SqlConnection("Server=dfw2-etl-001;Database=ArtivaJobEngine;User Id=WAREHOUSEMAN;Password=p3RV@$1V3;"))
                {
                    using (var command = new SqlCommand("SELECT [Host],[Username],[Password],[Port],[HostKey]  FROM [ArtivaJobEngine].[dbo].[FTPInformation] WHERE ID = 52", connection))
                    {
                        connection.Open();
                        using (var reader = command.ExecuteReader())
                        {
                            reader.Read();
                            ftpURL = reader.GetString(0);
                            ftpUser = reader.GetString(1);
                            ftpPass = reader.GetString(2);
                            ftpPort = reader.GetInt32(3);
                            ftpKey = reader.GetString(4);
                        }
                    }
                }

                Session session = new Session();
                TransferOptions transferOptions = new TransferOptions();
                transferOptions.TransferMode = TransferMode.Binary;
                transferOptions.ResumeSupport.State = TransferResumeSupportState.Off;
                transferOptions.FilePermissions = null;
                transferOptions.PreserveTimestamp = false;

                SessionOptions sessionOptions = new SessionOptions();
                sessionOptions.Protocol = Protocol.Sftp;
                sessionOptions.HostName = ftpURL;
                sessionOptions.UserName = ftpUser;
                sessionOptions.Password = ftpPass;
                sessionOptions.PortNumber = ftpPort;
                sessionOptions.SshHostKeyFingerprint = ftpKey;

                session.ExecutablePath = _appDirectory + "winscp.exe";
                session.SessionLogPath = Variables.FullLogDirectory + "PutOBLiveVoxFiles.log";
                session.Open(sessionOptions);

                DirectoryInfo di = new DirectoryInfo(Variables.FullOutboundDirectory);
                FileInfo[] fi1 = di.GetFiles("*_PreTerm_*.csv");
                FileInfo[] fi2 = di.GetFiles("*_BrokenArrg_*.csv");
                FileInfo[] fi = fi1.Concat(fi2).ToArray();

                for (int i = 0; i < fi.Length; i++)
                {
                    
                    TransferOperationResult transResult = session.PutFiles(Variables.FullOutboundDirectory + fi[i].Name, ftpDir, false, transferOptions);
                    transResult.Check();
                    File.Move(fi[i].FullName, Variables.FullArchiveDirectory + fi[i].Name);
                    

                }




                session.Dispose();

            }
            
            

        }
        catch (Exception e)
        {

            bool cancel = false;
            ComponentMetaData.FireError(10, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0, out cancel);
        }
    }

    private string getFormateddate(string str)
    {
        if (string.IsNullOrEmpty(str))
            return "";
        str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
        str = str.Length < 8 ? str.Insert(2, "0") : str;

        return str;
    }
    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(getFormateddate(d), "yyyyMMdd", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }


    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output0Buffer.AddRow();
        Output0Buffer.Data = recordString.ToUpper();
    }

    private void AddMtRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;


        CollateralBuffer.AddRow();
        CollateralBuffer.Data = recordString.ToUpper();
    }


}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionBuffer: ScriptBuffer

{
    public ExceptionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class PlacementBuffer: ScriptBuffer

{
    public PlacementBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class LegalBuffer: ScriptBuffer

{
    public LegalBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class CollateralBuffer: ScriptBuffer

{
    public CollateralBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class NotesBuffer: ScriptBuffer

{
    public NotesBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ComakerBuffer: ScriptBuffer

{
    public ComakerBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public ExceptionBuffer ExceptionBuffer;

    public PlacementBuffer PlacementBuffer;

    public LegalBuffer LegalBuffer;

    public CollateralBuffer CollateralBuffer;

    public NotesBuffer NotesBuffer;

    public ComakerBuffer ComakerBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != ExceptionBuffer)
        {
            ExceptionBuffer.SetEndOfRowset();
            ExceptionBuffer = null;
        }

        if (null != PlacementBuffer)
        {
            PlacementBuffer.SetEndOfRowset();
            PlacementBuffer = null;
        }

        if (null != LegalBuffer)
        {
            LegalBuffer.SetEndOfRowset();
            LegalBuffer = null;
        }

        if (null != CollateralBuffer)
        {
            CollateralBuffer.SetEndOfRowset();
            CollateralBuffer = null;
        }

        if (null != NotesBuffer)
        {
            NotesBuffer.SetEndOfRowset();
            NotesBuffer = null;
        }

        if (null != ComakerBuffer)
        {
            ComakerBuffer.SetEndOfRowset();
            ComakerBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exception"))
            {
                ExceptionBuffer = new ExceptionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Placement"))
            {
                PlacementBuffer = new PlacementBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Legal"))
            {
                LegalBuffer = new LegalBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Collateral"))
            {
                CollateralBuffer = new CollateralBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Notes"))
            {
                NotesBuffer = new NotesBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Comaker"))
            {
                ComakerBuffer = new ComakerBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ARTIVA
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ARTIVA").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String EmailSubject
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EmailSubject"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String EmailTo
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["EmailTo"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FTP
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FTP"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullArchiveDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullArchiveDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullLogDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullLogDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String FullOutboundDirectory
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["FullOutboundDirectory"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0721bb5d52684600a21a98c30ea8893f.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{225DD62C-FC95-4D7A-B72A-356AC03734FE}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0721bb5d52684600a21a98c30ea8893f</RootNamespace>
    <AssemblyName>SC_0721bb5d52684600a21a98c30ea8893f</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="WinSCPnet, Version=1.1.4.3970, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="devenv.exe" DebugInfoCommandLine="/vstaHostDebugUri:&quot;vstadebuge0c940cd-73bf-4d58-9077-6a5c621d5306/4bb861a7-9eca-414a-a9b5-65cb1b67ddb1&quot;" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Settings.get_Default():SC_0721bb5d52684600a21a98c30ea8893f.Properties.Sett" +
    "ings")]

namespace SC_0721bb5d52684600a21a98c30ea8893f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_0721bb5d52684600a21a98c30ea8893f</msb:CodeName>
		<msb:DisplayName>SC_0721bb5d52684600a21a98c30ea8893f</msb:DisplayName>
		<msb:ProjectId>{398B7F04-BC0A-43AA-9F65-6B79D31988EE}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0721bb5d52684600a21a98c30ea8893f.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0721bb5d52684600a21a98c30ea8893f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0721bb5d52684600a21a98c30ea8893f")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0721bb5d52684600a21a98c30ea8893f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0721bb5d52684600a21a98c30ea8893f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_0721bb5d52684600a21a98c30ea8893f.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
cG8nAAAKfigAAAouIREhcvkOAHBvJwAACiwTESFy+Q4AcG8nAAAKbykAAAorBXJpAABwExARIXIJ
DwBwbycAAAp+KAAACi4hESFyCQ8AcG8nAAAKLBMRIXIJDwBwbycAAApvKQAACisFcmkAAHATEREh
ciMPAHBvJwAACn4oAAAKLiERIXIjDwBwbycAAAosExEhciMPAHBvJwAACm8pAAAKKwVyaQAAcBMS
ESFyOw8AcG8nAAAKfigAAAouIREhcjsPAHBvJwAACiwTESFyOw8AcG8nAAAKbykAAAorBXJpAABw
ExMRIXJRDwBwbycAAAp+KAAACi4hESFyUQ8AcG8nAAAKLBMRIXJRDwBwbycAAApvKQAACisFcmkA
AHATFBEhcmkPAHBvJwAACn4oAAAKLiERIXJpDwBwbycAAAosExEhcmkPAHBvJwAACm8pAAAKKwVy
aQAAcBMVESFyhQ8AcG8nAAAKfigAAAouIREhcoUPAHBvJwAACiwTESFyhQ8AcG8nAAAKbykAAAor
BXJpAABwExYRIXKbDwBwbycAAAp+KAAACi4hESFymw8AcG8nAAAKLBMRIXKbDwBwbycAAApvKQAA
CisFcmkAAHATFxEhcrcPAHBvJwAACn4oAAAKLiERIXK3DwBwbycAAAosExEhcrcPAHBvJwAACm8p
AAAKKwVyaQAAcBMYESFyzQ8AcG8nAAAKfigAAAouIREhcs0PAHBvJwAACiwTESFyzQ8AcG8nAAAK
bykAAAorBXJpAABwExkRIXLjDwBwbycAAAp+KAAACi4hESFy4w8AcG8nAAAKLBMRIXLjDwBwbycA
AApvKQAACisFcmkAAHATHREhcv0PAHBvJwAACn4oAAAKLiERIXL9DwBwbycAAAosExEhcv0PAHBv
JwAACm8pAAAKKwVyaQAAcBMcESFyCxAAcG8nAAAKfigAAAouLxEhcgsQAHBvJwAACiwhESFyCxAA
cG8nAAAKpRUAAAETIhIiciEQAHAoKgAACisFcmkAAHATGhEhcjMQAHBvJwAACn4oAAAKLi8RIXIz
EABwbycAAAosIREhcjMQAHBvJwAACqUVAAABEyISInIhEABwKCoAAAorBXJpAABwExsRHHJPEABw
KCsAAAo5VAUAABEdcl0QAHAoKwAACjk4BAAAERkoLAAACjn+AAAABx8ejTAAAAElFhEMoiUXcmEQ
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
ChMiEiJy/xAAcCgqAAAKchERAHAoMQAAChEEbykAAAooMgAACgJ7GgAABG9BAAAGcuERAHAoLwAA
ChMiEiJy/xAAcCgqAAAKchERAHAoMQAAChEFbykAAAooMgAACgJ7GgAABG9BAAAGchsSAHAoLwAA
ChMiEiJy/xAAcCgqAAAKchERAHAoMQAAChEGbykAAAooMgAACgJ7GgAABG9BAAAGclsSAHAoLwAA
ChMiEiJy/xAAcCgqAAAKchERAHAoMQAAChEHbykAAAooMgAACgJ7GgAABG9BAAAGAnsVAAAEKDMA
AAoRCm8pAAAKKDIAAAoCexoAAARvQQAABgJ7FgAABCgzAAAKEQtvKQAACigyAAAKAnsaAAAEb0EA
AAYCexcAAAQoMwAAChEIbykAAAooMgAACgJ7GgAABG9BAAAGAnsYAAAEKDMAAAoRCW8pAAAKKDIA
AAoCexoAAARvPgAABigsAAAKOgsCAAByaQAAcBMkcmkAAHATJXJpAABwEyYWEycCexoAAARvPgAA
BhMocmkAAHATKXKvEwBwczQAAAoTMHJcFABwETBzNQAAChMxETBvEwAAChExbzYAAAoTMhEybzcA
AAomETIWbzgAAAoTJBEyF284AAAKEyURMhhvOAAAChMmETIZbzkAAAoTJxEyGm84AAAKEyneDBEy
LAcRMm8hAAAK3N4METEsBxExbyEAAArc3gwRMCwHETBvIQAACtxzOgAAChMqczsAAAoTKxErFm88
AAAKEStvPQAAChhvPgAAChErFG8/AAAKESsWb0AAAApzQQAAChMsESwWb0IAAAoRLBEkb0MAAAoR
LBElb0QAAAoRLBEmb0UAAAoRLBEnb0YAAAoRLBEpb0cAAAoRKn4CAAAEckEVAHAoMwAACm9IAAAK
ESoCexoAAARvQAAABnJXFQBwKDMAAApvSQAAChEqESxvSgAACgJ7GgAABG9BAAAGc0sAAAolcoMV
AHBvTAAAChMtcqMVAHBvTAAAChMuES0RLigBAAArKAIAACsTLxYTMytaESoCexoAAARvQQAABhEv
ETOab08AAAooMwAAChEoFhErb1AAAApvUQAAChEvETOab1IAAAoCexoAAARvPwAABhEvETOab08A
AAooMwAACihTAAAKETMXWBMzETMRL45pMp4RKm9UAAAK3jkTNBYTNQIoVQAACh8KcskVAHARNG9W
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
+g0GACgAuz0AAAAAhgD9Dd4AKADDPQAAAACGGLkLBgAoAOM9AAAAAMYBmA0GACgA6D0AAAAAgQB6
AQYAKACsPgAAAADGALsP5QIoAOM9AAAAAMYBrw0GACwAA0AAAAAAhhi5C/MCLAASQAAAAACGCNoA
JQItADNAAAAAAIYYuQvzAi0AQkAAAAAAhgjfDRwALgBoQAAAAACGCFAJHAAuAI5AAAAAAIYIAgEc
AC4AtEAAAAAAhgiPEBwALgDaQAAAAACGCKgQHAAuAABBAAAAAIYIdRAcAC4AJkEAAAAAgxi5CwYA
LgAuQQAAAACTCBIL+gIuAFpBAAAAAJMIAgMAAy4AYUEAAAAAkwgOAwYDLgBpQQAAAACWCA8ODQMv
AHBBAAAAAIYYuQsGAC8AeEEAAAAAkRi/C+ECLwAAAAEAxgsAAAEAwQEAAAEArwEAAAEArwEAAAEA
CwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA2AUAAAEACwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA2AUA
AAEACwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA2AUAAAEACwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA
2AUAAAEACwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA2AUAAAEACwsAAAIABA0AAAMAnAkAAAEA2AUA
AAEA2AUAAAEACwsAAAIABA0AAAMAnAkAAAEA2AUAAAEA2AUAAAEAng0AAAIAygsAAAMAhA0AAAQA
nAkAAAEACw8AAAEACw8AAAEA2AUJALkLAQARALkLBgAZALkLCgApALkLEAAxALkLEAA5ALkLEABB
ALkLEABJALkLEABRALkLEABZALkLEABhALkLEABpALkLBgBBAbkLBgBZAbkLFQBpAbkLBgApAbsF
BgA5Ab0GHABxALkLEABxAV4IBgApAcYFBgBxAYoDBgB5AakDBgCJAdIGHACBAcMNJACRAbkLBgCR
ATwHKgB5ALkLBgCJALkLkABxAckDmgCxAagPAQCJAFkKoAB5AHEBpQCxAKkDBgCBALkLEACBAe0Q
rAB5AKYNrwDJAasLtQCZABUPugChAJkHvgDRAdIFwwAxAdIGHACpANIGyACBAcsQzQCBAeUQ0wCB
ALgC2ACZAMcP3gCpAFYQ4gCBAcMN5wCBAcMN7gDZAdwP9gCBAcMN/ADZALkLEADhALkLAgHhAFkK
CQHhAWwB3gDhAdsGDgHhAcgAEwG5ALkLBgDBALkLBgDBAP0BGAHBAF8PHwHxAdMDJQHBADINLAHB
AO0JMwHJALkLBgDJAIwHOAHJAIcCEADJAHoCEADJALYBEADJABQKAQDJACEPEAC5AO8GEAC5AAIH
EAC5AF4IPwERArkLEAARAtUMRQEZAsMNTAEZAmAQagEpAmQCHAC5AN4MeAE5AiAHBgApAm0CHADZ
Ad4F9gC5AKkDBgApASEBgwHxAA4CHADxAN4BHABBApULiQGBARUHlAGBAeUGmAGBAdcQzQCBAVgP
ngEBAbkLEACpAMoNsgEMALkLyAEUALkLBgAUAHYByAFZArEG1gGBAQkO5wGBAcMB7gGBAcsB0wCB
ATwLHAARAbkL9AERAaIHAAIRAYQHAQBpArkLEAARATYQBgARAfoNBgARAf0N3gApAbkLBgApAeUA
CgIpARgNEgIxAbkLBgBBAscIGAJxApQCHgJ5AiYLJQIpAb8MKwKBApkHMQIpARkQOAKJAuoPPgKh
Ak0CRQKhAmgQTgJJAbkLVAJhAbkLBgAuAAsAMQMuABMAOgMuABsAWQMuACMAYgMuACsAiwMuADMA
iwMuADsAiwMuAEMAYgMuAEsAkQMuAFMAiwMuAFsAqANDAGMA8AOjAWsA8APJAnMAWQPpAnMAWQPB
BHsA8AMgADgApAEGAgMAAQAEAAMABQAFAAYABwAHAAkACAALAAkADQALAA8ADAAQAA0AFgAOABgA
AAAyARIDAAB4BxYDAAAyARIDAAB4BxYDAAAyARIDAAB4BxYDAAAyARIDAAB4BxYDAAAyARIDAAB4
BxYDAAAyARIDAAB4BxYDAAAyARIDAAB4BxYDAADeABoDAADjDRIDAABUCRIDAAAGARIDAACTEBID
AACsEBIDAAB5EBIDAAAWCyADAAAiAyYDAAATDiwDAQALAAMAAQAMAAUAAQARAAcAAQASAAkAAQAX
AAsAAQAYAA0AAQAdAA8AAQAeABEAAQAjABMAAQAkABUAAQApABcAAQAqABkAAQAvABsAAQAwAB0A
AgA6AB8AAgA8ACEAAgA9ACMAAgA+ACUAAgA/ACcAAgBAACkAAgBBACsAAgBDAC0AAgBEAC8AAQBF
AC8AAgBGADEAwQHOAQSAAAABAAAAGB41lAAAAAAAAOMFAAAEAAAAAAAAAAAAAABcAjcBAAAAAAsA
AAAAAAAAAAAAAGUCOw8AAAAABAAAAAAAAAAAAAAAXAIMAQAAAAABAAMABwCxHQAAAABuAvANAAAA
AAEAAQAAAAAAAAAAAHcCkAMAAAAACwAAAAAAAAAAAAAAZQKHDwAAAAALAAAAAAAAAAAAAABlAqYJ
AAAAAAQAAAAAAAAAAAAAAFwCqwcAAAAAAQABAAAAAAAAAAAAgAL2DAAAAAAEAAAAAAAAAAAAAABc
AvYCAAAAAAsAAAAAAAAAAAAAAGUCyQkAAAAAAwACAAcAAAAAAAAAiQKMDQAAAAAAAAAAAQAAAD4M
AAAAAAAADQAKAQAAAAAPAAoBmwBlAZ0AZQHFAOIBAQCFAAIAhQAAAABJRFRTQ29tcG9uZW50TWV0
YURhdGExMDAASURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24x
MDAASURUU1J1bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRT
VmFyaWFibGVzMTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAE51bGxhYmxlYDEASUVudW1lcmFi
bGVgMQBMaXN0YDEAR2V0SW50MzIAPE1vZHVsZT4AZ2V0X0FSVElWQQBHZXRPdXRwdXRJRABTeXN0
ZW0uSU8AV2luU0NQAGdldF9GVFAAVABTeXN0ZW0uRGF0YQBzZXRfRGF0YQBnZXRfQ29tcG9uZW50
TWV0YURhdGEAbXNjb3JsaWIAU3lzdGVtLkRhdGEuT2RiYwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2Vu
ZXJpYwBSZWFkAExvYWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQARGJDb21tYW5kAE9kYmNDb21t
YW5kAFNxbENvbW1hbmQAcmVjb3JkAHNldF9QYXNzd29yZABSZXBsYWNlAElzTnVsbE9yV2hpdGVT
cGFjZQBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAc2V0X1RyYW5zZmVyTW9kZQBnZXRf
TWVzc2FnZQBEYXRhVGFibGUARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAGdldF9OYW1lAGdldF9GdWxsTmFtZQBzZXRfVXNlck5h
bWUAc2V0X0hvc3ROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAERhdGVUaW1lAEFwcGVu
ZExpbmUAQ29tbW9uRW5naW5lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUA
U3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAEdlbmVy
YWxQdXJwb3NlUmVjb3JkQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBPcGVyYXRpb25SZXN1bHRCYXNlAENsb3NlAFJHUy5BcnRpdmFHZW5lcmFs
UHVycG9zZQBEaXNwb3NlAGdldERhdGUAZ2V0Rm9ybWF0ZWRkYXRlAGdldF9TdGF0ZQBzZXRfU3Rh
dGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29ubmVjdGlvblN0YXRlAFRyYW5zZmVyUmVzdW1lU3Vw
cG9ydFN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVB
dHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFt
ZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVz
Y3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJs
eVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENv
bXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAVmFsdWUAdmFs
dWUATW92ZQBTQ18wNzIxYmI1ZDUyNjg0NjAwYTIxYTk4YzMwZWE4ODkzZgBOWVByZVRlcm1mAFBB
UHJlVGVybU5vYXR0ZW1wdHNmAFBBUHJlVGVybURheXRpbWVSZXFNZXRmAFBBUHJlVGVybUV2ZW5p
bmdSZXFNZXRmAFBBUHJlVGVybUJvdGhSZXFzTWV0ZgBQQUJyb2tlbkFycmFuZ2VtZW50ZgBOWUJy
b2tlbkFycmFuZ2VtZW50ZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFdyaXRlU3RyaW5nAGdl
dF9Db25uZWN0aW9uU3RyaW5nAFRvU3RyaW5nAEdldFN0cmluZwBTdWJzdHJpbmcAc2V0X0V4ZWN1
dGFibGVQYXRoAHNldF9TZXNzaW9uTG9nUGF0aABnZXRfTGVuZ3RoAENoZWNrAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTZW5kTWFpbABTQ18wNzIxYmI1ZDUyNjg0NjAwYTIxYTk4YzMwZWE4ODkzZi5k
bGwAREJOdWxsAHNldF9EYXRhX0lzTnVsbABTZXROdWxsAHNldF9Qcm90b2NvbABnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AUEFQcmVUZXJtZmNvbQBOWVByZVRlcm1mY29tAFBBQnJva2VuQXJyYW5n
ZW1lbnRmY29tAE5ZQnJva2VuQXJyYW5nZW1lbnRmY29tAFBBUHJlVGVybWNudGNvbQBOWVByZVRl
cm1jbnRjb20AUEFCcm9rZW5BcnJhbmdlbWVudGNudGNvbQBOWUJyb2tlbkFycmFuZ2VtZW50Y250
Y29tAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBjb25uAFNlc3Npb24AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AT2RiY1RyYW5zYWN0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24A
RGJDb25uZWN0aW9uAE9kYmNDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ASW52YWxpZE9wZXJhdGlv
bkV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AZ2V0X0VtYWlsVG8ARmlsZUluZm8AQ3VsdHVy
ZUluZm8ARmlsZVN5c3RlbUluZm8ARGlyZWN0b3J5SW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1h
cABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RFRTUGlwZWxpbmVXcmFwAHNldF9QcmVzZXJ2ZVRpbWVzdGFtcABTeXN0ZW0uTGlucQBDaGFyAHNl
dF9Qb3J0TnVtYmVyAElEYXRhUmVhZGVyAERiRGF0YVJlYWRlcgBPZGJjRGF0YVJlYWRlcgBTcWxE
YXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIASUZvcm1hdFByb3ZpZGVyAFN0cmluZ0J1aWxkZXIARW1h
aWxTZW5kZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBMZWdhbEJ1ZmZlcgBDb2xsYXRl
cmFsQnVmZmVyAEV4Y2VwdGlvbkJ1ZmZlcgBDb21ha2VyQnVmZmVyAE5vdGVzQnVmZmVyAFBsYWNl
bWVudEJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVjdGlv
bk1hbmFnZXIAVG9VcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBGaXJlRXJyb3IASUVudW1l
cmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAc3RyAE91dHB1dElEcwBTeXN0ZW0uRGlh
Z25vc3RpY3MAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlLkRhdGEuUmVjb3JkcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfMDcyMWJiNWQ1MjY4NDYw
MGEyMWE5OGMzMGVhODg5M2YuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNDXzA3MjFiYjVkNTI2ODQ2MDBhMjFhOThjMzBlYTg4OTNmLlByb3BlcnRpZXMAZ2V0
X1JlYWRPbmx5VmFyaWFibGVzAEdldEZpbGVzAFB1dEZpbGVzAERhdGVUaW1lU3R5bGVzAENvbW1v
bkNsYXNzZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHNl
dF9GaWxlUGVybWlzc2lvbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAFNlc3Npb25P
cHRpb25zAFRyYW5zZmVyT3B0aW9ucwBCdWZmZXJzAEZpbGVIZWxwZXJzAEZpbmlzaE91dHB1dHMA
Z2V0X1Jvd3MAQ3JlYXRlTmV3T3V0cHV0Um93cwBDb25jYXQAVHJ5UGFyc2VFeGFjdABPYmplY3QA
Z2V0X0VtYWlsU3ViamVjdABXaW5TQ1BuZXQAU2V0RW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1
bHQAVHJhbnNmZXJPcGVyYXRpb25SZXN1bHQATllQcmVUZXJtY250AFBBUHJlVGVybU5vYXR0ZW1w
dHNjbnQAUEFQcmVUZXJtRGF5dGltZVJlcU1ldGNudABQQVByZVRlcm1FdmVuaW5nUmVxTWV0Y250
AFBBUHJlVGVybUJvdGhSZXFzTWV0Y250AFBBQnJva2VuQXJyYW5nZW1lbnRjbnQATllCcm9rZW5B
cnJhbmdlbWVudGNudABTeXN0ZW0uRGF0YS5TcWxDbGllbnQAVXNlckNvbXBvbmVudABQYXJlbnRD
b21wb25lbnQAU2NyaXB0Q29tcG9uZW50AGdldF9DdXJyZW50AHNldF9Tc2hIb3N0S2V5RmluZ2Vy
cHJpbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABJbnNlcnQAZ2V0X1Jlc3VtZVN1cHBv
cnQAVHJhbnNmZXJSZXN1bWVTdXBwb3J0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0
AHNldF9Db21tYW5kVGltZW91dABQcmltZU91dHB1dABNb3ZlTmV4dABTeXN0ZW0uVGV4dABBcHBl
bmRBbGxUZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQA
Z2V0X0V2YWx1YXRvckNvbnRleHQARGF0YVJvdwBBZGRSb3cAQWRkTXRSb3cAQWRkUGxhY2VtZW50
Um93AGdldF9Ub2RheQBUb0FycmF5AGdldF9Bc3NlbWJseQBnZXRfRnVsbE91dGJvdW5kRGlyZWN0
b3J5AGdldF9GdWxsQXJjaGl2ZURpcmVjdG9yeQBnZXRfRnVsbExvZ0RpcmVjdG9yeQBfYXBwRGly
ZWN0b3J5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkASXNOdWxsT3JFbXB0eQAAABdGAGkAbABl
ACAATgBhAG0AZQA6ACAAAB07ACAARgBpAGwAZQAgAEMAbwB1AG4AdAA6ACAAACM8AGIAcgAgAC8A
PgBGAGkAbABlACAATgBhAG0AZQA6ACAAAA08AGIAcgAgAC8APgAAAQCMSVMARQBMAEUAQwBUACAA
RABJAFMAVABJAE4AQwBUACAAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMASQBEACwAQQBSAEUATgBG
AE4ATQAsAEEAUgBFAE4ATABOAE0ALABBAFIARQBOAFAASAAsAEEAUgBFAE4AUABIADIALABaAFoA
VQBUAFMAVgBDADIAQQBEAEQAMQAsAFoAWgBVAFQAUwBWAEMAMgBDAFQAWQAsAFoAWgBVAFQAUwBW
AEMAMgBTAFQALAANAAoAWgBaAFUAVABTAFYAQwAyAFoASQBQACwAWgBaAFUAVABTAFIAVgBBAEMA
VABCAEEATAAsAFoAWgBVAFQAVABSAE4AQQBNAFQALABaAFoAVQBUAEQAUwBDAEQAVABFACwAWgBa
AFUAVABMAFMAVABCAEkATABEAFQARQAsAFoAWgBVAFQAVwBSAFQATwBGAEYAQQBNAFQALABBAFIA
QQBDAEMATABBAEMAQwBUACwAWgBaAEEAQwBTAEUARwBTAEMAUgAsAGMAbAB0AC4AQQBSAEMATABJ
AEQALABlAG4AdAAuAEEAUgBFAE4AQgBVAFMASQBOAEUAUwBTACAADQAKAEYAUgBPAE0AIAAlAFMA
VABBAFIAVABUAEEAQgBMAEUAIABBAFIAQwBMAEkARQBOAFQAIABJAE4ATgBFAFIAIABKAE8ASQBO
ACAAQQBSAEEAQwBDAE8AVQBOAFQAIABhAGMAYwBvAHUAbgB0ACAAbwBuACAAQQBSAEMATABJAEQA
IAA9ACAAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMAQwBMAFQASQBEACAAQQBOAEQAIABBAFIAQwBM
AEkARAAgAEkATgAgACgAJwBOAEYAUABBAFAAVAAnACwAJwBOAEYATgBZAFAAVAAnACwAJwBOAEYA
UABBAEIAQQAnACwAJwBOAEYATgBZAEIAQQAnACkADQAKACAAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAASgBPAEkATgAgAEEAUgBFAE4AVABJAFQAWQAgAGUAbgB0ACAATwBOACAAYQBjAGMA
bwB1AG4AdAAuAEEAUgBBAEMAUgBQAEkARAAgAD0AIABlAG4AdAAuAEEAUgBFAE4ASQBEACAAIAAN
AAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABKAE8ASQBOACAAQQBSAEMATABJAEUA
TgBUACAAYwBsAHQAIABPAE4AIABhAGMAYwBvAHUAbgB0AC4AQQBSAEEAQwBDAEwAVABJAEQAIAA9
ACAAYwBsAHQALgBBAFIAQwBMAEkARAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IAAgACAAIABKAE8ASQBOACAAQQBSAFIARQBMAEEAVABJAE8ATgBTAEgASQBQACAAYQByAHIAZQBs
AGEAIABPAE4AIABhAGMAYwBvAHUAbgB0AC4AQQBSAEEAQwBSAFAAUgBFAEwASQBEACAAPQAgAGEA
cgByAGUAbABhAC4AQQBSAFIARQBMAEkARAAgACAAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAg
ACAAIAAgACAAIABMAEUARgBUACAASgBPAEkATgAgAEEAUgBDAE8ATgBMAFYATAAgAGMAbwBuACAA
bwBuACAAYwBvAG4ALgBBAFIAQwBPAE4ATABJAEQAIAA9ACAAYQByAHIAZQBsAGEALgBBAFIAUgBF
AEwAQwBPAE4ATABWAEwAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIABMAEUA
RgBUACAASgBPAEkATgAgAEEAUgBSAE8ATABFACAAYQByACAAbwBuACAAYQByAC4AQQBSAFIATABJ
AEQAPQBhAHIAcgBlAGwAYQAuAEEAUgBSAEUATABSAE8ATABFAEkARAANAAoACQAJAAkACQBMAEUA
RgBUACAASgBPAEkATgAgAFoAWgBVAFQASQBMAEkAVABJAEUAUwAgAHoAegB1ACAATwBOACAAegB6
AHUALgBaAFoAVQBUAEEAQwBJAEQAIAA9ACAAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMASQBEAA0A
CgAJAAkACQAJAFcASABFAFIARQAgACgAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMAQwBBAE4AQwBJ
AEQAIABJAFMAIABOAFUATABMACAATwBSACAAYQBjAGMAbwB1AG4AdAAuAEEAUgBBAEMAQwBBAE4A
QwBJAEQAIAA9ACcAJwApACAADQAKAAkACQAJAAkAQQBOAEQAIABhAHIAcgBlAGwAYQAuAEEAUgBS
AEUATABTAFQAQQBUAFUAUwBJAEQAIABOAE8AVAAgAEkATgAgACgAJwBCAEEATgBLAFIAVQBQAFQA
JwAsACcARABFAEMARQBBAFMARQBEACcALAAnAEkATgBDAEEAUgBDAEUAUgBBAFQARQBEACcALAAn
AE0ASQBMAEQARQBQAEwAWQAnACkAIAANAAoAIAAgACAAIAAgACAAIAAgACAAIAAgACAAIAAgACAA
IABBAE4ARAAJAGEAcgByAGUAbABhAC4AQQBSAFIARQBMAFAASABBAFMARQAgAE4ATwBUACAASQBO
ACAAKAAnAEEAVQBEAEkAVAAnACwAJwBMAEUARwBBAEwAJwAsACcATABFAFQAVABFAFIAJwAsACcA
UABSAEUAQwBPAEwATABFAEMAVAAnACkADQAKAAkACQAJAAkAQQBOAEQAIAAoAGEAYwBjAG8AdQBu
AHQALgBBAFIAQQBDAEQASQBTAFAAVQBUAEUAIQA9ACcAWQAnACAATwBSACAAYQBjAGMAbwB1AG4A
dAAuAEEAUgBBAEMARABJAFMAUABVAFQARQAgAEkAUwAgAE4AVQBMAEwAKQANAAoACQAJAAkACQBB
AE4ARAAgAGEAcgByAGUAbABhAC4AQQBSAFIARQBMAFAASABTAFQAWQBQAD0AJwBBAEMAVABJAFYA
RQAnAA0ACgAJAAkACQAJAEEATgBEACAAYQByAHIAZQBsAGEALgBBAFIAUgBFAEwAUgBFAFMAUAA9
ACcAWQAnAA0ACgAJAAkACQAJAEEATgBEACAAYwBvAG4ALgBBAFIAQwBPAE4ATABQAEgATwBOAEUA
PQAnAFkAJwANAAoACQAJAAkACQBBAE4ARAAgAGEAcgByAGUAbABhAC4AQQBSAFIARQBMAEkARAA9
AGEAcgByAGUAbABhAC4AQQBSAFIARQBMAEwARQBBAEQADQAKAAkACQAJAAkAQQBOAEQAIABhAHIA
cgBlAGwAYQAuAEEAUgBSAEUATABSAEwAQwBMAEEAUwBTAEkARAA9ACcAQQBSAEEAQwBDAFQASABP
AEwARABSACcADQAKAAkACQAJAAkAQQBOAEQAIABhAHIALgBBAFIAUgBMAFAATwBPAEwAPQAnAFkA
JwANAAoACQAJAAkACQBBAE4ARAAgACgAKABlAG4AdAAuAEEAUgBFAE4AUABIACAASQBTACAATgBP
AFQAIABOAFUATABMACAAQQBOAEQAIABlAG4AdAAuAEEAUgBFAE4AUABIACEAPQAnACcADQAKAAkA
CQAJAAkAQQBOAEQAIAAoAGUAbgB0AC4AQQBSAEUATgBQAEYAIABJAE4AIAAoACcAQwAnACwAIAAn
AEcAJwAsACAAJwBOACcALAAgACcAVQAnACwAJwAnACkAIABPAFIAIABlAG4AdAAuAEEAUgBFAE4A
UABGACAASQBTACAATgBVAEwATAApACkADQAKAAkACQAJAAkATwBSACAAKABlAG4AdAAuAEEAUgBF
AE4AUABIADIAIABJAFMAIABOAE8AVAAgAE4AVQBMAEwAIABBAE4ARAAgAGUAbgB0AC4AQQBSAEUA
TgBQAEgAMgAhAD0AJwAnAA0ACgAJAAkACQAJAEEATgBEACAAKABlAG4AdAAuAEEAUgBFAE4AUABG
ADIAIABJAE4AIAAoACcAQwAnACwAIAAnAEcAJwAsACAAJwBOACcALAAgACcAVQAnACwAJwAnACkA
IABPAFIAIABlAG4AdAAuAEEAUgBFAE4AUABGADIAIABJAFMAIABOAFUATABMACkAKQApAAGCBUEA
cgB0AGkAdgBhAEkARAAsAEYAaQByAHMAdABOAGEAbQBlACwATABhAHMAdABOAGEAbQBlACwASABv
AG0AZQBQAGgAbwBuAGUALABBAGwAdABQAGgAbwBuAGUALABTAGUAcgB2AGkAYwBlAFQAbwBBAGQA
ZAByAGUAcwBzAEwAaQBuAGUAMQAsAFMAZQByAHYAaQBjAGUAVABvAEEAZABkAHIAZQBzAHMAQwBp
AHQAeQAsAFMAZQByAHYAaQBjAGUAVABvAEEAZABkAHIAZQBzAHMAUwB0AGEAdABlACwAUwBlAHIA
dgBpAGMAZQBUAG8AQQBkAGQAcgBlAHMAcwBaAGkAcAAsAFQAbwB0AGEAbABBAG0AbwB1AG4AdABE
AHUAZQAsAEEAbQBvAHUAbgB0AFAAYQBzAHQARAB1AGUALABQAHIAbwBwAG8AcwBlAGQAVABlAHIA
bQBpAG4AYQB0AGkAbwBuAEQAYQB0AGUALABDAHUAcgByAGUAbgB0AEIAaQBsAGwARAB1AGUARABh
AHQAZQAsAEEAZwByAGUAZQBtAGUAbgB0AEQAZQBmAGEAdQBsAHQAQQBtAG8AdQBuAHQALABDAGwA
aQBlAG4AdABBAGMAYwBvAHUAbgB0AE4AdQBtAGIAZQByACwAUABsAGEAdABmAG8AcgBtAEkARAAK
AAANQQBSAEEAQwBJAEQAAA9BAFIARQBOAEYATgBNAAAPQQBSAEUATgBMAE4ATQAADUEAUgBFAE4A
UABIAAAPQQBSAEUATgBQAEgAMgAAGVoAWgBVAFQAUwBWAEMAMgBBAEQARAAxAAAXWgBaAFUAVABT
AFYAQwAyAEMAVABZAAAVWgBaAFUAVABTAFYAQwAyAFMAVAAAF1oAWgBVAFQAUwBWAEMAMgBaAEkA
UAAAG1oAWgBVAFQAUwBSAFYAQQBDAFQAQgBBAEwAABVaAFoAVQBUAFQAUgBOAEEATQBUAAAbWgBa
AFUAVABXAFIAVABPAEYARgBBAE0AVAAAFUEAUgBBAEMAQwBMAEEAQwBDAFQAABVaAFoAQQBDAFMA
RQBHAFMAQwBSAAAZQQBSAEUATgBCAFUAUwBJAE4ARQBTAFMAAA1BAFIAQwBMAEkARAAAFVoAWgBV
AFQARABTAEMARABUAEUAABFNAE0AZABkAHkAeQB5AHkAABtaAFoAVQBUAEwAUwBUAEIASQBMAEQA
VABFAAANTgBGAFAAQQBQAFQAAANOAAADLAAABSwAIgAABSIALAAAEywAQQBSAFQASQBWAEEAXwAx
AAADRAAAA0UAAANCAAADWQAADU4ARgBOAFkAUABUAAANTgBGAFAAQQBCAEEAAA1OAEYATgBZAEIA
QQAAP04AYQB0AGkAbwBuAGEAbABfAEYAdQBlAGwAXwAxAFAAXwBQAEEAXwBQAHIAZQBUAGUAcgBt
AF8ATgBBAF8AABF5AHkAeQB5AE0ATQBkAGQAAAkuAGMAcwB2AABBTgBhAHQAaQBvAG4AYQBsAF8A
RgB1AGUAbABfADEAUABfAFAAQQBfAFAAcgBlAFQAZQByAG0AXwBEAEEAWQBfAABBTgBhAHQAaQBv
AG4AYQBsAF8ARgB1AGUAbABfADEAUABfAFAAQQBfAFAAcgBlAFQAZQByAG0AXwBFAFYARQBfAABB
TgBhAHQAaQBvAG4AYQBsAF8ARgB1AGUAbABfADEAUABfAFAAQQBfAFAAcgBlAFQAZQByAG0AXwBC
AFQASABfAAA5TgBhAHQAaQBvAG4AYQBsAF8ARgB1AGUAbABfADEAUABfAE4AWQBfAFAAcgBlAFQA
ZQByAG0AXwAAP04AYQB0AGkAbwBuAGEAbABfAEYAdQBlAGwAXwAxAFAAXwBQAEEAXwBCAHIAbwBr
AGUAbgBBAHIAcgBnAF8AAD9OAGEAdABpAG8AbgBhAGwAXwBGAHUAZQBsAF8AMQBQAF8ATgBZAF8A
QgByAG8AawBlAG4AQQByAHIAZwBfAABBTgBhAHQAaQBvAG4AYQBsAF8ARgB1AGUAbABfADEAUABf
AEMATwBNAF8ATgBZAF8AUAByAGUAVABlAHIAbQBfAABBTgBhAHQAaQBvAG4AYQBsAF8ARgB1AGUA
bABfADEAUABfAEMATwBNAF8AUABBAF8AUAByAGUAVABlAHIAbQBfAABHTgBhAHQAaQBvAG4AYQBs
AF8ARgB1AGUAbABfADEAUABfAEMATwBNAF8AUABBAF8AQgByAG8AawBlAG4AQQByAHIAZwBfAABH
TgBhAHQAaQBvAG4AYQBsAF8ARgB1AGUAbABfADEAUABfAEMATwBNAF8ATgBZAF8AQgByAG8AawBl
AG4AQQByAHIAZwBfAACAq1MAZQByAHYAZQByAD0AZABmAHcAMgAtAGUAdABsAC0AMAAwADEAOwBE
AGEAdABhAGIAYQBzAGUAPQBBAHIAdABpAHYAYQBKAG8AYgBFAG4AZwBpAG4AZQA7AFUAcwBlAHIA
IABJAGQAPQBXAEEAUgBFAEgATwBVAFMARQBNAEEATgA7AFAAYQBzAHMAdwBvAHIAZAA9AHAAMwBS
AFYAQAAkADEAVgAzADsAAYDjUwBFAEwARQBDAFQAIABbAEgAbwBzAHQAXQAsAFsAVQBzAGUAcgBu
AGEAbQBlAF0ALABbAFAAYQBzAHMAdwBvAHIAZABdACwAWwBQAG8AcgB0AF0ALABbAEgAbwBzAHQA
SwBlAHkAXQAgACAARgBSAE8ATQAgAFsAQQByAHQAaQB2AGEASgBvAGIARQBuAGcAaQBuAGUAXQAu
AFsAZABiAG8AXQAuAFsARgBUAFAASQBuAGYAbwByAG0AYQB0AGkAbwBuAF0AIABXAEgARQBSAEUA
IABJAEQAIAA9ACAANQAyAAAVdwBpAG4AcwBjAHAALgBlAHgAZQAAK1AAdQB0AE8AQgBMAGkAdgBl
AFYAbwB4AEYAaQBsAGUAcwAuAGwAbwBnAAAfKgBfAFAAcgBlAFQAZQByAG0AXwAqAC4AYwBzAHYA
ACUqAF8AQgByAG8AawBlAG4AQQByAHIAZwBfACoALgBjAHMAdgAAHVAAcgBvAGMAZQBzAHMAIABW
AGEAbAB1AGUAcwAABQoACgAAAzAAAAtlAG4ALQBVAFMAAQtDAE8ATQBBAEsAAAMuAAADLwAAPVIA
OgBcAFAAcgBvAGcAcgBhAG0AIABGAGkAbABlAHMAIAAoAHgAOAA2ACkAXABXAGkAbgBTAEMAUABc
AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8AdQB0AHAAdQB0
ACAAMAAAE0UAeABjAGUAcAB0AGkAbwBuAAATUABsAGEAYwBlAG0AZQBuAHQAAAtMAGUAZwBhAGwA
ABVDAG8AbABsAGEAdABlAHIAYQBsAAALTgBvAHQAZQBzAAAPQwBvAG0AYQBrAGUAcgAADUEAUgBU
AEkAVgBBAAAZRQBtAGEAaQBsAFMAdQBiAGoAZQBjAHQAAA9FAG0AYQBpAGwAVABvAAAHRgBUAFAA
AClGAHUAbABsAEEAcgBjAGgAaQB2AGUARABpAHIAZQBjAHQAbwByAHkAACFGAHUAbABsAEwAbwBn
AEQAaQByAGUAYwB0AG8AcgB5AAArRgB1AGwAbABPAHUAdABiAG8AdQBuAGQARABpAHIAZQBjAHQA
bwByAHkAAHFTAEMAXwAwADcAMgAxAGIAYgA1AGQANQAyADYAOAA0ADYAMAAwAGEAMgAxAGEAOQA4
AGMAMwAwAGUAYQA4ADgAOQAzAGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAAL9kAc79j8kOph7ouNs2DWAAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgKkDIAAO
AwcBDgUAAQ4dDg0gBQEODhUSgM0BDg4OVwc2Ej0SQRJBEkESQRJBEkESQRJBEkESQRJBDg4ODg4O
Dg4ODg4ODg4ODg4OEkUSSRJNElERVRJZDg4OCA4OEl0SYRJlHRJpHRJpHRJpEm0ScRJ1CBJ5Agkg
AwEOEjkSgNEFIAARgNUEIAASSQYgAQESgN0CBg4FIAASgOEEIAASTQMgABwEIAEcDgQGEoDpBCAB
Dg4FAAICDg4EAAECDgUgARJBDgMgAAIEAAARVQYAAw4ODg4HAAQODg4ODgUAAgEODgUAAg4ODgYg
AgEOEm0EIAASdQQgAQ4IBCABCAgGIAEBEYD1BSAAEoD5BiABARGA/QYgAQESgQEEIAEBAgYgAQER
gQUFIAEBEmUGIAEdEmkOGBABAhUSgREBHgAVEoERAR4AFRKBEQEeAAQKARJpDRABAR0eABUSgREB
HgAKIAQSgRkODgISYQUgABKBIQogBgEIDg4OCBACAyAACAUgAg4ICAUgAg4IDg0HAxKAgRFVFRF9
ARFVDgAFAg4OEoElEYEpEBFVBhURfQERVQUgAQETAAcVEoDNAR4ACxABAQ4VEoERAR4ABAoBHgAG
IAEdDh0DBSACDg4OCyADARKAjR0IEoCRBSACAQgcAwcBCAcAAggSgJEOBSABHQgIBSAAEoE5BiAB
EoE9DgUgABKAnQUgABKBQQYgARKBRRwFAAASgUkGIAEcEoFNCAABEoFREYFVBSAAEoFZByACAQ4S
gVkIt3pcVhk04IkIiYRdzYCAzJEIInHsSjxW0L8I+gztSkVRp4IIH3GBs9WdjEAIPgwI1ZzD1lcD
BhI5AgYIAwYSLAMGEjADBhIMAwYSEAMGEhQDBhIYAwYSHAMGEiADBhIkBAYSgJUEBhKApQQGEoCB
AwYSOAkgARURfQERVQ4GMAEBAR4AAwAAAQ0gBAEIHQgdEoCNEoCRBiABARKAlQUAABKApQUAABKA
gQYAAQESgIEEAAASOAMoAA4DKAACBSgAEoCdBQgAEoClBQgAEoCBBAgAEjgIAQAIAAAAAAAeAQAB
AFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzA3MjFiYjVkNTI2ODQ2
MDBhMjFhOThjMzBlYTg4OTNmAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjAAAEcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNAQBAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAFh/AAAAAAAAAAAAAHJ/AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABkfwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAA
AAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYgAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIA
UwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABADWUGB4AAAEANZQYHj8AAAAAAAAABAAA
AAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQA
cgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBu
AGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAA
AAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBz
AGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUAMgA2ADgANAA2ADAA
MABhADIAMQBhADkAOABjADMAMABlAGEAOAA4ADkAMwBmAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBz
AGkAbwBuAAAAAAAxAC4AMAAuADcANwAwADQALgAzADcAOQA0ADEAAAAAAHAAKAABAEkAbgB0AGUA
cgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUAMgA2ADgANAA2ADAAMABh
ADIAMQBhADkAOABjADMAMABlAGEAOAA4ADkAMwBmAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwA
QwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADAAAAAq
AAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcA
aQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAwADcAMgAxAGIAYgA1AGQANQAyADYAOAA0
ADYAMAAwAGEAMgAxAGEAOQA4AGMAMwAwAGUAYQA4ADgAOQAzAGYALgBkAGwAbAAAAGgAJAABAFAA
cgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAA3ADIAMQBiAGIANQBkADUAMgA2ADgANAA2
ADAAMABhADIAMQBhADkAOABjADMAMABlAGEAOAA4ADkAMwBmAAAAQgAPAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcAMAA0AC4AMwA3ADkANAAxAAAAAABGAA8AAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADcAMAA0AC4AMwA3ADkA
NAAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAcAAADAAAAIQ/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_0721bb5d52684600a21a98c30ea8893f</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::FullArchiveDirectory,User::FullLogDirectory,User::FullOutboundDirectory,$Package::FTP,$Project::EmailSubject,$Project::EmailTo</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">030ea40dc3fee3f5884280bf3c6ef235</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">2f49c7570e0439a8096f1d7acfb520c644ae4901</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Process_Files\Script Component.Connections[ARTIVA]"
                  connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                  connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                  name="ARTIVA" />
              </connections>
              <outputs>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Output 0].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Output 0].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Exception]"
                  hasSideEffects="true"
                  name="Exception">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Exception].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Exception].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Placement]"
                  hasSideEffects="true"
                  name="Placement">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Placement].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Placement].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Legal]"
                  hasSideEffects="true"
                  name="Legal">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Legal].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Legal].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Collateral]"
                  hasSideEffects="true"
                  name="Collateral">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Collateral].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Collateral].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Notes]"
                  hasSideEffects="true"
                  name="Notes">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Notes].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Notes].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Process_Files\Script Component.Outputs[Comaker]"
                  hasSideEffects="true"
                  name="Comaker">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Process_Files\Script Component.Outputs[Comaker].Columns[Data]"
                      codePage="1252"
                      dataType="str"
                      length="8000"
                      lineageId="Package\Process_Files\Script Component.Outputs[Comaker].Columns[Data]"
                      name="Data" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Process_Files"
          TopLeft="60,60" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Process_Files">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Process_Files\Script Component"
          TopLeft="200.5,52.5" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>