<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/10/2020 8:31:00 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{E2ABAF1F-2008-48CF-91B1-D533B91259FC}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Placements_New"
  DTS:PackageType="5"
  DTS:VersionBuild="66"
  DTS:VersionGUID="{786F0FD2-B377-4760-907E-FEF17A9B8A46}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[artiva_import_file]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{E1BBC4CE-2E89-49C4-B119-13C73E4EF6C2}"
      DTS:ObjectName="artiva_import_file">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullOutboundDirectory] + "ArtivaNB-" + @[$Project::Namespace] + "-" + @[$Project::ClientName] + "-" +  @[User::PathInputFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\ArtivaNB-THIRDPROD-Integra Credit-0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RowData"
              DTS:DTSID="{15C359A6-170F-481A-B96C-A6BE7DF08A8E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{44A7B4E7-DCF3-4C7F-A4D8-C17595A2E673}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{A207B8B4-E5C4-4318-9484-90F16D0AC513}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Input Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{B76DBF20-E1A1-4E71-899E-92AD3E8DF4CF}"
      DTS:ObjectName="Input Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory]  + @[User::PathInputFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Reference Number"
              DTS:DTSID="{08527680-7666-403E-9C01-92084EB346E7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Loan Number"
              DTS:DTSID="{BB49044A-FB0D-48EE-A1E0-71243FDCBE81}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Principal Balance Due"
              DTS:DTSID="{EEEB8552-BEB3-48AA-8AB9-7C4B7CB96F8D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Interest Balance Due"
              DTS:DTSID="{F751E304-1557-4B5A-AC94-893F6216B968}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Other Balance Due"
              DTS:DTSID="{45BB61CC-9D8A-4303-BCC5-E05D4D2EBE29}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Service Date"
              DTS:DTSID="{AB5B0A7F-4EF3-419C-A5A2-0C8D9FD9A53E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Delinquency Date"
              DTS:DTSID="{0A2B82EB-DC43-4CE9-B584-579D308F84A5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Chargeoff Date"
              DTS:DTSID="{D7BC2B49-CD9A-49D7-8B53-4905587F3F76}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Description of Debt"
              DTS:DTSID="{CD24FBE1-C137-4C52-9CE0-886C0014D988}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Last Payment Date"
              DTS:DTSID="{60B0A354-17D9-476F-8000-6C8B42A38FDF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Last Payment Amount"
              DTS:DTSID="{A6E61D4C-CD8D-4F36-A171-F64D26D957C6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer First Name"
              DTS:DTSID="{EEA14DAF-EDA4-475E-8BAD-7F089B572D31}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Last Name"
              DTS:DTSID="{985E6461-8501-4C74-A724-D5EE60A678DC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Address"
              DTS:DTSID="{9F36EE76-AF30-4B26-91DD-7E8924BE0D46}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Address 2"
              DTS:DTSID="{1D02037F-12B6-4D95-A7E5-88D608134B23}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer City"
              DTS:DTSID="{30A147C4-ADC3-4718-8B5D-CCA77A426254}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer State"
              DTS:DTSID="{8600DD66-93A2-4C8E-A26E-89CB88491937}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Zip"
              DTS:DTSID="{A6CEE306-5B2B-40A2-A8B1-DB2082ADA016}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Home Phone Number"
              DTS:DTSID="{EA493738-1D80-4519-8555-496C21115FA8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer POE Phone Number"
              DTS:DTSID="{35D0AF86-F0C2-4DED-BB4D-E98EC8B6A61B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Mobile Number"
              DTS:DTSID="{0AC26C54-437A-4ED1-86E0-5A243232D2A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Email Address"
              DTS:DTSID="{F28BCBF4-F695-4CE5-BEA9-3E29FCFA3BBC}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Due"
              DTS:DTSID="{25F4493E-D007-4358-ADA5-E05C995FD5E7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Interest Accrued"
              DTS:DTSID="{B064D866-21D2-4031-86AE-74559B9C532F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Non Interest Charges"
              DTS:DTSID="{728FA524-8BB6-44C5-99D5-0CD67FBDBCCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt of Pmts Made on Debt"
              DTS:DTSID="{6954929D-EE4C-4738-87C0-7E1B5BD2D976}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Original Lender Name"
              DTS:DTSID="{BBAE244A-AF7D-4728-A0F2-CA040A45ECCA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SSN"
              DTS:DTSID="{BE0381E2-0117-43B3-A8DC-58D18BC89B59}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date Of Birth"
              DTS:DTSID="{F3BC0BEE-CF5A-42C0-A717-FC9AA8B2B3AA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="200"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Bank Name"
              DTS:DTSID="{8D1121ED-7DFB-4AB1-9D8E-927EEF862DF1}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="100"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="bank_account_1st_4_digits"
              DTS:DTSID="{42035F79-97ED-4595-AF82-907E1616399F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[NYCOHOLD]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{8B5F8DE2-BFD1-49BC-AA67-10BA619A8C5D}"
      DTS:ObjectName="NYCOHOLD">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::NYCOHOLDReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-NYCOHOLDReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{A207B8B4-E5C4-4318-9484-90F16D0AC513}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{FB9F451E-28E2-472D-A818-98C782AED42E}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0BE00DDC-FDE8-4DE6-92EA-5DDF6896B904}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*IntegraPlacement_*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{5F662901-6EC1-4793-8570-9A7D73E3B150}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{B4C79E9D-0256-43B9-89E4-1EE9C3EC5CDF}"
      DTS:ObjectName="WorksheetIndex">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F10131DC-9678-4DBD-B96B-B0DEE12AA7DB}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FB9CE624-FBAD-4FE2-868E-0F88A47647EA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D2AD1071-AE49-4636-B586-563B1F16409C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::PathInputFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{439BBB04-0326-4545-BE0A-87EBB00A1D70}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C7C01F4F-BC2D-45E4-B79E-D9880795D3DC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{72633CD0-8433-4309-A6FD-4A4A45A10C2C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::PathInputFile]  + &quot;-NYCOHOLDReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NYCOHOLDReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-NYCOHOLDReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33F10AAF-F55A-4097-A980-B8612C589ECF}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathInputFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8541560C-91F2-409F-840E-A88D382125F0}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessType">
      <DTS:VariableValue
        DTS:DataType="8">Placement</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Downloaded File"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{8D45E0DD-7CB1-4B68-B833-94435BD1B097}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Downloaded File">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{55D9B178-195C-4987-B4C2-685F80501C20}"
        DTS:ObjectName="{55D9B178-195C-4987-B4C2-685F80501C20}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Inbound\" />
            <FEFEProperty
              FileSpec="*IntegraPlacement_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Downloaded File\Process placement File"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{02ADBDB3-E8CD-49E6-A12F-D09F9A3645B6}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process placement File">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Artiva File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[artiva_import_file]"
                      connectionManagerRefId="Package.ConnectionManagers[artiva_import_file]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].Columns[RowData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="RowData"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          name="RowData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Input Source]"
                      connectionManagerRefId="Package.ConnectionManagers[Input Source]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Reference Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]"
                          name="Client Reference Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Loan Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]"
                          name="Client Loan Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Principal Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]"
                          name="Principal Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Interest Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]"
                          name="Interest Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Other Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]"
                          name="Other Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Service Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]"
                          name="Service Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Delinquency Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]"
                          name="Delinquency Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Chargeoff Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]"
                          name="Chargeoff Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description of Debt]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]"
                          name="Description of Debt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]"
                          name="Client Last Payment Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Amount]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]"
                          name="Client Last Payment Amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer First Name]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]"
                          name="Customer First Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Last Name]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]"
                          name="Customer Last Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address]"
                          length="500"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]"
                          name="Customer Address"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address 2]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]"
                          name="Customer Address 2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer City]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]"
                          name="Customer City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer State]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]"
                          name="Customer State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Zip]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]"
                          name="Customer Zip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Home Phone Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]"
                          name="Customer Home Phone Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer POE Phone Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]"
                          name="Customer POE Phone Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Mobile Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]"
                          name="Customer Mobile Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Email Address]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]"
                          name="Customer Email Address"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]"
                          name="Total Amt Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Interest Accrued]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]"
                          name="Total Amt Interest Accrued"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Non Interest Charges]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]"
                          name="Total Amt Non Interest Charges"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt of Pmts Made on Debt]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]"
                          name="Total Amt of Pmts Made on Debt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Original Lender Name]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]"
                          name="Original Lender Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[SSN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          length="100"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[SSN]"
                          name="SSN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Date Of Birth]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Date Of Birth]"
                          length="20"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Date Of Birth]"
                          name="Date Of Birth"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Bank Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Bank Name]"
                          length="200"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Bank Name]"
                          name="Bank Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[bank_account_1st_4_digits]"
                          length="100"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]"
                          name="bank_account_1st_4_digits"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Reference Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Reference Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Loan Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Loan Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Principal Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Principal Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Interest Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Interest Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Other Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Other Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Service Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Service Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Delinquency Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Delinquency Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Chargeoff Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Chargeoff Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description of Debt]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Description of Debt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Last Payment Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Last Payment Amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer First Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer First Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Last Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Last Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Customer Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address 2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Address 2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Zip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Home Phone Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Home Phone Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer POE Phone Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer POE Phone Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Mobile Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Mobile Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Email Address]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Email Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Interest Accrued]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Interest Accrued" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Non Interest Charges]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Non Interest Charges" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt of Pmts Made on Debt]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt of Pmts Made on Debt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Original Lender Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Original Lender Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[SSN]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Date Of Birth]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="Date Of Birth" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Bank Name]"
                          codePage="1252"
                          dataType="str"
                          length="200"
                          name="Bank Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[bank_account_1st_4_digits]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="bank_account_1st_4_digits" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Nycohold"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Nycohold">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[NYCOHOLD]"
                      connectionManagerRefId="Package.ConnectionManagers[NYCOHOLD]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Process records"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Process records"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0cc6f3f9bf4547ec9496e5e2650ced01")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0cc6f3f9bf4547ec9496e5e2650ced01")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using SC_0cc6f3f9bf4547ec9496e5e2650ced01;
using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;
using System.Linq;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : BaseService
{
    private bool _exceptionReportCreated = false;
    private bool _nycoholdReportCreated = false;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    private Dictionary<string, string> clients;
    private Dictionary<string, string> clientids;
    public override void PreExecute()
    {
        base.PreExecute();
        clients = new Dictionary<string, string> { { "integra_credit_one", "Integra Credit One, LLC" },
            { "integra_credit_two", "Integra Credit Two, LLC" }, { "integra_credit_three", "Integra Credit Three, LLC" },
            { "integra_credit_four", "Integra Credit Four, LLC" }, { "integra_credit_five", "Integra Credit Five, LLC" } };
        clientids = new Dictionary<string, string> { { "integra_credit_one", "INTEG1" },
            { "integra_credit_two", "INTEG2" }, { "integra_credit_three", "INTEG3" },
            { "integra_credit_four", "INTEG4" }, { "integra_credit_five", "INTEG5" } };

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
        if(!_nycoholdReportCreated)
            System.IO.File.Delete(Connections.HYCOHOLDConnection.ConnectionString);
    }


    private int nycoholdcount;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if(!(Row.ClientReferenceNumber.Trim().Distinct().Count() == 1 || Row.ClientReferenceNumber=="NULL" || Row.ClientReferenceNumber == ""))
        {

            try
            {
                if (Row.DelinquencyDate=="NULL" || Row.DelinquencyDate == "" || Row.DelinquencyDate == "00/00/0000")
                {
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = "Delinquency Date is Required. Invalid deliquency date for client reference number:  " + Row.ClientReferenceNumber + ". Need to get distro.";
                    _exceptionReportCreated = true;
                    return;
                }
                
                if (Row.OriginalLenderName=="NULL" || Row.OriginalLenderName == "" || !clients.ContainsKey(Row.OriginalLenderName.Trim()))
                {
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = "Original lender incorrect or missing value for client reference number:  " + Row.ClientLoanNumber + ".";
                    _exceptionReportCreated = true;
                    return;
                }


                PartyInformation_20 Record20 = new PartyInformation_20();
                AccountInformation_10 Record10 = new AccountInformation_10();
                PlacementInformation_100 Record100 = new PlacementInformation_100();
                OriginalOrFormerCreditor_102 Record102 = new OriginalOrFormerCreditor_102();
                ClientBankingInformation_807 Record807 = new ClientBankingInformation_807();
                var rec203s = new List<AccountFreeFormText_203>();

                #region Record 10
                Record10.ListedDate = DateTime.Today;                
                Record10.ClientID = clientids[Row.OriginalLenderName];
                Record10.DebtDescription = Row.DescriptionofDebt.Trim().Distinct().Count() == 1 || Row.DescriptionofDebt=="NULL" || Row.DescriptionofDebt=="" ? "" : Row.DescriptionofDebt.Replace("_"," ");
               
                Record10.SOLAgreementType = "WRITTEN";
                
                string cln = Row.ClientLoanNumber.Trim().Distinct().Count() == 1 || Row.ClientLoanNumber=="NULL" || Row.ClientLoanNumber == "" ? "" : Row.ClientLoanNumber;
                string cstate = Row.CustomerState.Trim().Distinct().Count() == 1 || Row.CustomerState=="NULL" || Row.CustomerState == "" ? "" : Row.CustomerState;

                Record10.ClientReferenceNumber = cln;
                Record10.SOLState = cstate;
                Record10.PrincipalInitalBalance = Row.PrincipalBalanceDue.Trim().Distinct().Count() == 1 || Row.PrincipalBalanceDue=="NULL" || Row.PrincipalBalanceDue == "" ? 0 : Convert.ToDecimal(Row.PrincipalBalanceDue);
                Record10.InterestInitialBalance = Row.InterestBalanceDue.Trim().Distinct().Count() == 1 || Row.InterestBalanceDue=="NULL" || Row.InterestBalanceDue == "" ? 0 : Convert.ToDecimal(Row.InterestBalanceDue);
                Record10.OtherInitialBalance = Row.OtherBalanceDue.Trim().Distinct().Count() == 1 || Row.OtherBalanceDue=="NULL" || Row.OtherBalanceDue == "" ? 0 : Convert.ToDecimal(Row.OtherBalanceDue);


                Record10.ServiceDate = Row.ServiceDate.Trim().Distinct().Count() == 1 || Row.ServiceDate=="NULL" || Row.ServiceDate == "" ? (DateTime?)null : getDate(Row.ServiceDate);

                DateTime? dq = Row.DelinquencyDate.Trim().Distinct().Count() == 1 || Row.DelinquencyDate=="NULL" || Row.DelinquencyDate == "" ? (DateTime?)null : getDate(Row.DelinquencyDate);

                Record10.DelinquencyDate = dq;
                Record10.SOLDate = dq;
                Record10.ChargeOffDate = Row.ChargeoffDate.Trim().Distinct().Count() == 1 || Row.ChargeoffDate=="NULL" || Row.ChargeoffDate == "" ? (DateTime?)null : getDate(Row.ChargeoffDate);
                Record10.ClientLastPayDate = Row.ClientLastPaymentDate.Trim().Distinct().Count() == 1 || Row.ClientLastPaymentDate=="NULL" || Row.ClientLastPaymentDate == "" ? (DateTime?)null : getDate(Row.ClientLastPaymentDate);
                Record10.ClientLastPayAmount = Row.ClientLastPaymentAmount.Trim().Distinct().Count() == 1 || Row.ClientLastPaymentAmount=="NULL" || Row.ClientLastPaymentAmount == "" ? 0 : Convert.ToDecimal(Row.ClientLastPaymentAmount);
                Record10.TotalAmountDueAsOfChargeOff = Row.TotalAmtDue.Trim().Distinct().Count() == 1 || Row.TotalAmtDue=="NULL" || Row.TotalAmtDue == "" ? 0 : Convert.ToDecimal(Row.TotalAmtDue);

                Record10.TotalAmountOfInterestAccuredSinceChargeOff = Row.TotalAmtInterestAccrued.Trim().Distinct().Count() == 1 || Row.TotalAmtInterestAccrued=="NULL" || Row.TotalAmtInterestAccrued == "" ? 0 : Convert.ToDecimal(Row.TotalAmtInterestAccrued);
                Record10.TotalAmountOfNonInterestChargesAndFeesAccuredSinceChargeOff = Row.TotalAmtNonInterestCharges.Trim().Distinct().Count() == 1 || Row.TotalAmtNonInterestCharges=="NULL" || Row.TotalAmtNonInterestCharges == "" ? 0 : Convert.ToDecimal(Row.TotalAmtNonInterestCharges);
                Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff = Row.TotalAmtofPmtsMadeonDebt.Trim().Distinct().Count() == 1 || Row.TotalAmtofPmtsMadeonDebt=="NULL" || Row.TotalAmtofPmtsMadeonDebt == "" ? 0 : Convert.ToDecimal(Row.TotalAmtofPmtsMadeonDebt);


                #endregion

                #region Record 20

                Record20.FirstName = Row.CustomerFirstName.Trim().Distinct().Count() == 1 || Row.CustomerFirstName=="NULL" || Row.CustomerFirstName == "" ? "" : Row.CustomerFirstName;
                Record20.LastName = Row.CustomerLastName.Trim().Distinct().Count() == 1 || Row.CustomerLastName=="NULL" || Row.CustomerLastName == "" ? "" : Row.CustomerLastName;
                                
                Record20.AddressLine = Row.CustomerAddress.Trim().Distinct().Count() == 1 || Row.CustomerAddress=="NULL" || Row.CustomerAddress == "" ? "" : Row.CustomerAddress;
                Record20.AddressUnit_AptOrPOBox = Row.CustomerAddress2.Trim().Distinct().Count() == 1 || Row.CustomerAddress2=="NULL" || Row.CustomerAddress2 == "" ? "" : Row.CustomerAddress2;
                Record20.City = Row.CustomerCity.Trim().Distinct().Count() == 1 || Row.CustomerCity=="NULL" || Row.CustomerCity == "" ? "" : Row.CustomerCity;
                Record20.State = cstate;

                Record20.PostalCode = Row.CustomerZip.Trim().Distinct().Count() == 1 || Row.CustomerZip=="NULL" || Row.CustomerZip == "" ? "" : Row.CustomerZip;
                Record20.SocialSecurityNumber = Row.SSN.Trim().Distinct().Count() == 1 || Row.SSN == "NULL" || Row.SSN == "" ? "" : Row.SSN;
                Record20.DateOfBirth = Row.DateOfBirth.Trim().Distinct().Count() == 1 || Row.DateOfBirth == "NULL" || Row.DateOfBirth == "" ? (DateTime?)null : getDate(Row.DateOfBirth);

                Record20.PrimaryPhoneNumber = Row.CustomerHomePhoneNumber.Trim().Distinct().Count() == 1 || Row.CustomerHomePhoneNumber=="NULL" || Row.CustomerHomePhoneNumber == "" ? "" : Row.CustomerHomePhoneNumber;
                Record20.POEPhoneNumber = Row.CustomerPOEPhoneNumber.Trim().Distinct().Count() == 1 || Row.CustomerPOEPhoneNumber=="NULL" || Row.CustomerPOEPhoneNumber == "" ? "" : Row.CustomerPOEPhoneNumber;
                       
                Record20.AlternatePhoneNumber = Row.CustomerMobileNumber.Trim().Distinct().Count() == 1 || Row.CustomerMobileNumber=="NULL" || Row.CustomerMobileNumber == "" ? "" : Row.CustomerMobileNumber;
                Record20.AlternatePhoneFlag = String.IsNullOrEmpty(Record20.AlternatePhoneNumber) ? "" : "C";

                Record20.EmailAddress = Row.CustomerEmailAddress.Trim().Distinct().Count() == 1 || Row.CustomerEmailAddress=="NULL" || Row.CustomerEmailAddress == "" ? "" : Row.CustomerEmailAddress;
                Record20.SourceOfEmail = String.IsNullOrEmpty(Record20.EmailAddress) ? (int?)null : 1;
                Record20.RelationshipTypeKey = "PRIM";
                

                Decimal totalA = (Record10.TotalAmountDueAsOfChargeOff + Record10.TotalAmountOfInterestAccuredSinceChargeOff 
                    + Record10.TotalAmountOfNonInterestChargesAndFeesAccuredSinceChargeOff) 
                    - (Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff);
                Decimal sumB = Record10.PrincipalInitalBalance + Record10.InterestInitialBalance + Record10.OtherInitialBalance;
                Decimal val = Decimal.Compare(totalA, sumB);
                if (val!=0 && cstate=="NY")
                {
                    nycoholdcount++;
                    Record20.StatusCode = "NYCOHOLD";
                    
                    if (nycoholdcount == 1)
                    {
                        NYCOHOLDBuffer.AddRow();
                        NYCOHOLDBuffer.Data = "Client RP Account Number,Client Loan number,Current Balance,Total Amount Due as of Charge Off,Total Amt of Pmts Made on Debt since Charge Off,Difference";
                    }

                    NYCOHOLDBuffer.AddRow();
                    NYCOHOLDBuffer.Data = Row.ClientReferenceNumber + "," + Row.ClientLoanNumber + "," + totalA.ToString() + "," + Record10.TotalAmountDueAsOfChargeOff.ToString() + "," + Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff.ToString() + "," + getNonpemdas(totalA, sumB).ToString();


                    _nycoholdReportCreated = true;

                }

                #endregion

                #region Record 100                
                Record100.IncomingFileName = Variables.PathInputFile;
                Record100.DateLoaded = DateTime.Today;
                Record100.CreditorInternalConsumerNumber = Row.ClientReferenceNumber;
                Record100.BKEffectiveDate = Record10.ServiceDate;
                #endregion

                #region Record 102
                Record102.OriginalLender = clients[Row.OriginalLenderName];
                #endregion

                #region Record 807
                Record807.OriginalLoanNumber = cln;
                Record807.CheckingAccountNumber = (Row.bankaccount1st4digits.Trim().Distinct().Count() == 1 && Row.bankaccount1st4digits.Trim().StartsWith("0"))  || Row.bankaccount1st4digits == "NULL" || Row.bankaccount1st4digits == "" ? "" : Row.bankaccount1st4digits;
                #endregion

                #region 203
                add203("bank name:  ", Row.BankName.Trim().Distinct().Count() == 1 || Row.BankName == "NULL" || Row.BankName == "" ? "" : Row.BankName, rec203s);
                #endregion

                AddPlacementRow(Record10);
                AddPlacementRow(Record20);
                AddPlacementRow(Record100);
                AddPlacementRow(Record102);
                AddPlacementRow(Record807);
                for (int i = 0; i < rec203s.Count; i++)
                    AddPlacementRow(rec203s[i]);


            }
            catch (Exception ex)
            {
                bool cancel = false;
                ComponentMetaData.FireError(10, "Exception in script", ex.Message, "", 0, out cancel);
                if (ex.InnerException != null)
                {
                    ComponentMetaData.FireError(10, "Exception inner exception", ex.InnerException.Message, "", 0, out cancel);
                }
                ComponentMetaData.FireError(10, "Exception StackTrace", ex.StackTrace, "", 0, out cancel);
                return;
            }
        }

    }

    private Decimal getNonpemdas(Decimal val, Decimal subtraction)
    {

        int signval = Math.Sign(val);
        int signsubtraction = Math.Sign(subtraction);

        Decimal tot = 0m;

        if (signval == -1 && signsubtraction == 1)
        {

            if (Decimal.Negate(val) > subtraction)
                tot = Decimal.Negate(Decimal.Negate(val) - subtraction);
            else
                tot = subtraction - Decimal.Negate(val);
        }
        else if (signval == 1 && signsubtraction == -1)
        {
            tot = val - Decimal.Negate(subtraction);
        }
        else if (signval == -1 && signsubtraction == -1)
        {
            tot = Decimal.Negate(val) + Decimal.Negate(subtraction);
            tot = Decimal.Negate(tot);
        }
        else
            tot = val - subtraction;

        return tot;

    }

    private string getFormateddate(string str)
    {

        str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
        str = str.Length < 8 ? str.Insert(2, "0") : str;

        return str;
    }

    private static void AddToListRecord203(AccountFreeFormText_203 Record203, List<AccountFreeFormText_203> ListRecord203)
    {
        if (!Record203.FreeFormText.ToUpper().Contains("XXXX"))
        {
            ListRecord203.Add(Record203);
        }
    }

    private DateTime? getDate(string sDt)
    {

        string[] format = {"Mddyyyy", "MMddyyyy",
                     "Mdyyyy", "MMdyyyy"};
        var dateculture = new System.Globalization.CultureInfo("en-US");

        DateTime dt;
        if (DateTime.TryParseExact(getFormateddate(sDt), format, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out dt))
        {
            return dt;
        }
        return null;
    }

    private void WriteExceptionMessage(string msg, string data)
    {
        _exceptionReportCreated = true;
        ExceptionsBuffer.AddRow();
        ExceptionsBuffer.Data = string.Format("Line:{0}  Message:{1}  Detail:{2}", InputRecordCount, msg, data);
    }

    private void add203(string label, string data, List<AccountFreeFormText_203> rec203s)
    {
        if (string.IsNullOrEmpty(data))
            return;

        rec203s.Add(new AccountFreeFormText_203 { FreeFormText = label + data });
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output0Buffer.AddRow();
        Output0Buffer.RowData = recordString.ToUpper();
    }
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0cc6f3f9bf4547ec9496e5e2650ced01.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{364A8333-AB0A-48CD-A1C2-6331F8B6E867}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0cc6f3f9bf4547ec9496e5e2650ced01</RootNamespace>
    <AssemblyName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Mapper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public NYCOHOLDBuffer NYCOHOLDBuffer;

    public Output0Buffer Output0Buffer;

    public ExceptionsBuffer ExceptionsBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != NYCOHOLDBuffer)
        {
            NYCOHOLDBuffer.SetEndOfRowset();
            NYCOHOLDBuffer = null;
        }

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"NYCOHOLD"))
            {
                NYCOHOLDBuffer = new NYCOHOLDBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 HYCOHOLDConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"HYCOHOLDConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PathInputFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PathInputFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Mapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;


        public class BaseRecord
        {

            public override string ToString()
            {
                return BaseService.FHEngine.WriteString(new List<object>() { this });
            }
            public BaseRecord()
            { }
            public string GetHeader()
            {
                string delim = ",";// TODO:: finish this,...if needed or pass in the delimiter if we need to vary the value...or use the attribute ( GetType().GetCustomAttributes (typeof(DelimitedRecordAttribute ),false).FirstOrDefault() as DelimitedRecordAttribute )
                return string.Join(delim, GetType().GetFields().Select(p => p.Name));
            }

            [FieldHidden]
            private static Dictionary<string, string> recordLayoutExamples;
            public static string GetRecordLayoutExample(string className)
            {
                if (recordLayoutExamples == null)
                {
                    recordLayoutExamples = new Dictionary<string, string>();
                    string Template = "";
                    int FldNum = 0;
                    string ClassName = "";
                    new BaseRecord()
                            .GetType().Assembly
                            .GetTypes().Where(n => n.BaseType.Name == "BaseRecord").ToList()
                            .ForEach(rectyp =>
                            {
                                Template = "";
                                ClassName = string.Format("{0}", rectyp.Name);
                            //find the filehelpers attributes to determine if its fixed length or delimited
                            var DelimitedAttrs = rectyp.GetCustomAttributes(typeof(FileHelpers.DelimitedRecordAttribute), false);
                                var FixedAttrs = rectyp.GetCustomAttributes(typeof(FileHelpers.FixedLengthRecordAttribute), false);

                                if ((DelimitedAttrs != null && DelimitedAttrs.Length > 0) || (FixedAttrs != null && FixedAttrs.Length > 0))
                                {
                                    FldNum = 0;
                                    rectyp.GetFields()
                                    .ToList()
                                    .ForEach(fld =>
                                    {
                                        FldNum++;

                                        if (DelimitedAttrs != null && DelimitedAttrs.Length > 0)
                                        {
                                            FileHelpers.DelimitedField df = DelimitedAttrs[0] as FileHelpers.DelimitedField;
                                        //add the comma
                                        Template += FldNum == 1 ? "" : ",";
                                        //stuff the fields with 0000011111222223333344444.....999990000011111...
                                        Template += "".PadRight(5, FldNum.ToString().Last());
                                        }
                                        else
                                        {
                                            if (FixedAttrs != null && FixedAttrs.Length > 0)
                                            {
                                                var FixedFieldAttr = fld.GetCustomAttributes(typeof(FileHelpers.FieldFixedLengthAttribute), false);
                                                if (FixedFieldAttr != null && FixedFieldAttr.Length > 0)
                                                {
                                                    FileHelpers.FieldFixedLengthAttribute ff = FixedFieldAttr[0] as FileHelpers.FieldFixedLengthAttribute;
                                                //stuff the fields with 0000011111222223333344444.....999990000011111...
                                                Template += "".PadRight(ff.Length, FldNum.ToString().Last());
                                                }
                                                else
                                                {
                                                    Template += String.Format("\n\n\n\nError!  fld.GetCustomAttributes(typeof(FileHelpers.FixedLengthField), false) didnt return any data.  check the file make sure the fields all have  fixed field attr....");
                                                }
                                            }
                                        }

                                    });
                                }

                                recordLayoutExamples.Add(ClassName, Template);
                            });
                }

                return recordLayoutExamples.ContainsKey(className) ? recordLayoutExamples[className] : string.Format("could not determine record layout for class [{0}]", className);

            }

        }
        public class BaseService : UserComponent
        {

            protected string ClientId = "";
 
            protected int InputRecordCount;


            /// <summary>
            ///contains the substring of the Record Identifier from the current/last row processed 
            /// </summary>
            protected static string RecordTypeName;

            /// <summary>
            /// Contains the type of record from the current/last row processed
            /// </summary>
            protected static Type RecordType;

            protected string FileName { get; set; }

            protected List<string> DebugInfo = new List<string>();


            public List<string> FilesWritten = new List<string>();

            public IEnumerable<string> GetDebugDetails()
            {
                return DebugInfo;
            }


 

        protected string getCSV( GeneralPurposeRecordBase  record)
        {
            return FHEngine.WriteString(new List<GeneralPurposeRecordBase>() { record }).ToUpper().TrimEnd("\n".First()).TrimEnd("\r".First()).Replace("XXXXXXXXXXXXX","");
        }
  

        

            public class EmailMessage
            {
                public string To;
                public string Body;
                public string Subject;
                public string Attachments;
                public string From;
                public string NotificationCategory;
            }


     
            private static MultiRecordEngine fHEngine = null;
            public static MultiRecordEngine FHEngine
            {
                get
                {
                    if (fHEngine == null)
                    {
                        fHEngine = new FileHelpers.MultiRecordEngine(new Type[]
                              { 
                             //client entities
                             //artiva entities
                             typeof(AccountFreeFormTextMntOnly_203),  typeof(ConsumerFreeFormTextMntOnly_205), typeof(DeceasedInformation_104), typeof(DisputeAccountInformation_213), typeof(Education_811),
                             typeof(ImportantNote_INOTE),  typeof(MiscellaneousSIFInfo_204), typeof(PartyPreviousAddress_24), typeof(PendingRecall_210),
                             typeof(PossibleAddresses_706), typeof(PossiblePhonesMaintenance_208), typeof(PriorCollectionContacts_115), typeof(RequestForTitleLienRelease_217), typeof(ResponsiblePartyInfo_112),
                             typeof(RetailClubInformation_808), typeof(ClientBankingInformation_807), typeof(ClientGeneralPatientInformation_804), typeof(ClientCommercialInformation_805), typeof(PossiblePhones_208),
                             typeof(ConsumerFreeFormText_205), typeof(AccountFreeFormText_203), typeof(AccountInformation_10), typeof(Adjustment_ADJ), typeof(AssignRoute_RTE), typeof(ClientTelcomInformation_806),
                             typeof(ClientInsuranceInformation_802), typeof(LetterRequest_LET), typeof(PaymentReversal_REV), typeof(Payment_PAY), typeof(Reactivate_REACT), typeof(SegmentationScores_110),
                             typeof(SIFTracking_209), typeof(SkipPhone_214), typeof(StatusCodeUpdate_ST), typeof(CloseAccount_C), typeof(CloseInfoToClient_202), typeof(InsuredInformation_800),
                             typeof(ClientRecallInfo_201), typeof(NewInsuranceInformation_803), typeof(OriginalOrFormerCreditor_102), typeof(PartyInformation_20), typeof(PendrickNote_900), typeof(PendrickVNotes_906),
                             typeof(KeeperInfo_200), typeof(PlacementInformation_100),   typeof(UpdateCBRInfo_CBR), typeof(UpdateField_U), typeof( AdditionalBankingInformation_812), typeof( MailReturnInformation_111 ),
                             typeof(CableCellUtilityInformation_809)
                              });
                }

                    //if (fHEngine.RecordSelector == null)
                    //{
                    //    fHEngine.RecordSelector = BaseService.CustomSelector;
                    //    // fHEngine.BeforeReadRecord += FHEngineBeforeReadRecord;
                    //    fHEngine.AfterReadRecord += FHEngineAfterReadRecord;
                    //}

                    return fHEngine;
                }
                set { fHEngine = value; }
            }
 
            /// <summary>
            /// Used by FileHelpers to identify the type of record 
            /// </summary>
            /// <param name="engine">An instance of Filehelpers engine initialized with classes used by this mehtod</param>
            /// <param name="recordLine">the csv record</param>
            /// <returns>The type to be used to deserialize recordLine</returns>
            protected static Type CustomSelector(MultiRecordEngine engine, string recordLine)
            {

                if (recordLine.Length == 0)
                {
                    return null;
                }

                //ServiceBase.RecordTypeName = recordLine.Substring(0, 3);
                //if (ServiceBase.RecordTypeName != "HDR" && ServiceBase.RecordTypeName != "TLR")
                //{ //placement record            

                //    ServiceBase.RecordTypeName = recordLine.Substring(0, 13).Split(DELIMITER)[1];

                //}

                //switch (ServiceBase.RecordTypeName)
                //{
                //    case "CN":
                //        RecordType = typeof(PlacementRecord);
                //        break;
                //    case "RC":
                //        RecordType = typeof(IBRecall);
                //        break;
                //    case "CC":
                //        RecordType = typeof(Cosigner);
                //        break;
                //    case "CE":
                //        RecordType = typeof(EmployerInformation);
                //        break;
                //    case "CR":
                //        RecordType = typeof(ReferenceInformation);
                //        break;
                //    case "CP":
                //        RecordType = typeof(PhoneInformation);
                //        break;
                //    case "CA":
                //        RecordType = typeof(AutomotiveRecord);
                //        break;
                //    case "CB":
                //        RecordType = typeof(DismissedBankruptcyRecord);
                //        break;
                //    case "SL":
                //        RecordType = typeof(StudentLoanRecord);
                //        break;
                //    case "CS":
                //        RecordType = typeof(PortfolioDetailsRecord);
                //        break;
                //    case "HDR":
                //        RecordType = typeof(StandardClientHeader);
                //        break;
                //    case "TLR":
                //        RecordType = typeof(ClientPlacementTrailer);
                //        break;
                //    default:
                //        throw new ArgumentException(string.Format("Record Type Code[{0}] at [Position:35,Length:2] is not supported.  Record[{1}]", ServiceBase.RecordTypeName, recordLine), "Record Type");
                //        break;
                //}

                return RecordType;

            }

            public void Dispose()
            {

            }
        }

   
     ]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ClientReferenceNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool ClientReferenceNumber_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ClientLoanNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ClientLoanNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String PrincipalBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool PrincipalBalanceDue_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String InterestBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool InterestBalanceDue_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String OtherBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool OtherBalanceDue_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ServiceDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ServiceDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String DelinquencyDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool DelinquencyDate_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String ChargeoffDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool ChargeoffDate_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String DescriptionofDebt
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool DescriptionofDebt_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String ClientLastPaymentDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool ClientLastPaymentDate_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String ClientLastPaymentAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool ClientLastPaymentAmount_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String CustomerFirstName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool CustomerFirstName_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String CustomerLastName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool CustomerLastName_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String CustomerAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool CustomerAddress_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String CustomerAddress2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool CustomerAddress2_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String CustomerCity
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool CustomerCity_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String CustomerState
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool CustomerState_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String CustomerZip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool CustomerZip_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String CustomerHomePhoneNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool CustomerHomePhoneNumber_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String CustomerPOEPhoneNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool CustomerPOEPhoneNumber_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String CustomerMobileNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool CustomerMobileNumber_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String CustomerEmailAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool CustomerEmailAddress_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String TotalAmtDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool TotalAmtDue_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String TotalAmtInterestAccrued
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool TotalAmtInterestAccrued_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String TotalAmtNonInterestCharges
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool TotalAmtNonInterestCharges_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String TotalAmtofPmtsMadeonDebt
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool TotalAmtofPmtsMadeonDebt_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String OriginalLenderName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool OriginalLenderName_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String SSN
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[27]);
        }
    }
    public bool SSN_IsNull
    {
        get
        {
            return IsNull(27);
        }
    }

    public String DateOfBirth
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[28]);
        }
    }
    public bool DateOfBirth_IsNull
    {
        get
        {
            return IsNull(28);
        }
    }

    public String BankName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[29]);
        }
    }
    public bool BankName_IsNull
    {
        get
        {
            return IsNull(29);
        }
    }

    public String bankaccount1st4digits
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[30]);
        }
    }
    public bool bankaccount1st4digits_IsNull
    {
        get
        {
            return IsNull(30);
        }
    }

    public String Data
    {
        set
        {
            this[31] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(31);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class NYCOHOLDBuffer: ScriptBuffer

{
    public NYCOHOLDBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RowData
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</msb:CodeName>
		<msb:DisplayName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</msb:DisplayName>
		<msb:ProjectId>{378BCCD5-431B-4BD6-8D23-2F4313E8507D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0cc6f3f9bf4547ec9496e5e2650ced01.csproj"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Mapper.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Settings.get_Default():SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Sett" +
    "ings")]

namespace SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0cc6f3f9bf4547ec9496e5e2650ced01.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
A28XAAAGcg8CAHAoGgAACi0OAgNvFwAABigHAAAGKwoSC/4VAwAAGxELfTIAAAoDbxkAAAZvFwAA
CigBAAArKAIAACsXLjIDbxkAAAZyBQIAcCgaAAAKLSADbxkAAAZyDwIAcCgaAAAKLQ4CA28ZAAAG
KAcAAAYrChIL/hUDAAAbEQsTCAcRCH0zAAAKBxEIfTQAAAoHA28bAAAGbxcAAAooAQAAKygCAAAr
Fy4yA28bAAAGcgUCAHAoGgAACi0gA28bAAAGcg8CAHAoGgAACi0OAgNvGwAABigHAAAGKwoSC/4V
AwAAGxELfTUAAAoHA28fAAAGbxcAAAooAQAAKygCAAArFy4yA28fAAAGcgUCAHAoGgAACi0gA28f
AAAGcg8CAHAoGgAACi0OAgNvHwAABigHAAAGKwoSC/4VAwAAGxELfTYAAAoHA28hAAAGbxcAAAoo
AQAAKygCAAArFy4xA28hAAAGcgUCAHAoGgAACi0fA28hAAAGcg8CAHAoGgAACi0NA28hAAAGKC0A
AAorBX4uAAAKfTcAAAoHA285AAAGbxcAAAooAQAAKygCAAArFy4xA285AAAGcgUCAHAoGgAACi0f
A285AAAGcg8CAHAoGgAACi0NA285AAAGKC0AAAorBX4uAAAKfTgAAAoHA287AAAGbxcAAAooAQAA
KygCAAArFy4xA287AAAGcgUCAHAoGgAACi0fA287AAAGcg8CAHAoGgAACi0NA287AAAGKC0AAAor
BX4uAAAKfTkAAAoHA289AAAGbxcAAAooAQAAKygCAAArFy4xA289AAAGcgUCAHAoGgAACi0fA289
AAAGcg8CAHAoGgAACi0NA289AAAGKC0AAAorBX4uAAAKfToAAAoHA28/AAAGbxcAAAooAQAAKygC
AAArFy4xA28/AAAGcgUCAHAoGgAACi0fA28/AAAGcg8CAHAoGgAACi0NA28/AAAGKC0AAAorBX4u
AAAKfTsAAAoGA28jAAAGbxcAAAooAQAAKygCAAArFy4sA28jAAAGcgUCAHAoGgAACi0aA28jAAAG
cg8CAHAoGgAACi0IA28jAAAGKwVyDwIAcH08AAAKBgNvJQAABm8XAAAKKAEAACsoAgAAKxcuLANv
JQAABnIFAgBwKBoAAAotGgNvJQAABnIPAgBwKBoAAAotCANvJQAABisFcg8CAHB9PQAACgYDbycA
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
BChmAAAKKE8AAAoMKysGFTMfBxUzGwMoZgAACgQoZgAACihOAAAKDAgoZgAACgwrCAMEKE8AAAoM
CCoAEzADAEkAAAAAAAAAA29oAAAKHi8UAxYXb2kAAApyDAUAcChqAAAKLQMDKwtyDAUAcAMoawAA
ChABA29oAAAKHjIDAysMAxhyDAUAcG9sAAAKEAEDKn4Ce20AAApvbgAACnKwBQBwb28AAAotBwMC
b3AAAAoqAAAAEzAFAFoAAAADAAARGo0wAAABJRZyugUAcKIlF3LKBQBwoiUYctwFAHCiJRly6gUA
cKIKcvoFAHBzcQAACiYCAygFAAAGBihyAAAKFhIBKHMAAAosBwdzJAAACioSAv4VAwAAGwgq1gIX
fQEAAAQCewoAAARvXgAABgJ7CgAABHIGBgBwAnsQAAAEjDcAAAEDBCh0AAAKb1wAAAYqigQoSAAA
CiwBKgVzdQAACiUDBChrAAAKfW0AAApvcAAACioAEzAFAK8AAAAEAAARc3YAAAolA293AAAKKAkA
ACsKBheNOQAAASUWHyydb3kAAAoWmgZyDwIAcG8oAAAKckoGAHByDwIAcG8oAAAKcggFAHByDwIA
cG8oAAAKcpMDAHByDwIAcG8oAAAKcgwFAHByDwIAcG8oAAAKclYGAHByDwIAcG8oAAAKcloGAHBy
DwIAcG8oAAAKKHoAAAosASoCewkAAARvWAAABgJ7CQAABAZvbgAACm9WAAAGKh4CKHsAAAYqKgID
BAUoewAACipSAnt8AAAKAnt9AAAKFpRvfgAACioiAhYofwAACipSAnt8AAAKAnt9AAAKF5RvfgAA
CioiAhcofwAACipSAnt8AAAKAnt9AAAKGJRvfgAACioiAhgofwAACipSAnt8AAAKAnt9AAAKGZRv
fgAACioiAhkofwAACipSAnt8AAAKAnt9AAAKGpRvfgAACioiAhoofwAACipSAnt8AAAKAnt9AAAK
G5RvfgAACioiAhsofwAACipSAnt8AAAKAnt9AAAKHJRvfgAACioiAhwofwAACipSAnt8AAAKAnt9
AAAKHZRvfgAACioiAh0ofwAACipSAnt8AAAKAnt9AAAKHpRvfgAACioiAh4ofwAACipWAnt8AAAK
Ant9AAAKHwmUb34AAAoqJgIfCSh/AAAKKlYCe3wAAAoCe30AAAofCpRvfgAACiomAh8KKH8AAAoq
VgJ7fAAACgJ7fQAACh8LlG9+AAAKKiYCHwsofwAACipWAnt8AAAKAnt9AAAKHwyUb34AAAoqJgIf
DCh/AAAKKlYCe3wAAAoCe30AAAofDZRvfgAACiomAh8NKH8AAAoqVgJ7fAAACgJ7fQAACh8OlG9+
AAAKKiYCHw4ofwAACipWAnt8AAAKAnt9AAAKHw+Ub34AAAoqJgIfDyh/AAAKKlYCe3wAAAoCe30A
AAofEJRvfgAACiomAh8QKH8AAAoqVgJ7fAAACgJ7fQAACh8RlG9+AAAKKiYCHxEofwAACipWAnt8
AAAKAnt9AAAKHxKUb34AAAoqJgIfEih/AAAKKlYCe3wAAAoCe30AAAofE5RvfgAACiomAh8TKH8A
AAoqVgJ7fAAACgJ7fQAACh8UlG9+AAAKKiYCHxQofwAACipWAnt8AAAKAnt9AAAKHxWUb34AAAoq
JgIfFSh/AAAKKlYCe3wAAAoCe30AAAofFpRvfgAACiomAh8WKH8AAAoqVgJ7fAAACgJ7fQAACh8X
lG9+AAAKKiYCHxcofwAACipWAnt8AAAKAnt9AAAKHxiUb34AAAoqJgIfGCh/AAAKKlYCe3wAAAoC
e30AAAofGZRvfgAACiomAh8ZKH8AAAoqVgJ7fAAACgJ7fQAACh8alG9+AAAKKiYCHxoofwAACipW
Ant8AAAKAnt9AAAKHxuUb34AAAoqJgIfGyh/AAAKKlYCe3wAAAoCe30AAAofHJRvfgAACiomAh8c
KH8AAAoqVgJ7fAAACgJ7fQAACh8dlG9+AAAKKiYCHx0ofwAACipWAnt8AAAKAnt9AAAKHx6Ub34A
AAoqJgIfHih/AAAKKioCHx8DKIAAAAoqXgMsCQIfHyiBAAAKKnJeBgBwc4IAAAp6HgIogwAACioe
AiiEAAAKKiYCFgMogAAACipaAywIAhYogQAACipyXgYAcHOCAAAKeh4CKIUAAAoqHgIohgAACip+
AiiHAAAKAgJzaQAABn0GAAAEAgJzbAAABn0HAAAEKhMwBABPAAAAAAAAAARy+wYAcBpviAAACiwV
AgUCAyiJAAAKDgRzDAAABm9nAAAGBW+KAAAKLCMCAnsLAAAEF1h9CwAABAJ7CwAABBczDAJvYwAA
BgIoZAAABioGKgAAABMwAgBPAAAAAAAAAAJ7CAAABCwSAnsIAAAEb1MAAAYCFH0IAAAEAnsJAAAE
LBICewkAAARvWQAABgIUfQkAAAQCewoAAAQsEgJ7CgAABG9fAAAGAhR9CgAABCoAEzAFAJcAAAAF
AAARFgo4ggAAAAQGlA4EcsMDAHAoiwAACjMZAgUGmgIEBpQoiQAACg4Ec08AAAZ9CAAABAQGlA4E
cgsHAHAoiwAACjMZAgUGmgIEBpQoiQAACg4Ec1UAAAZ9CQAABAQGlA4Ech0HAHAoiwAACjMZAgUG
mgIEBpQoiQAACg4Ec1sAAAZ9CgAABAYXWAoGAz93////Am9mAAAGKkorBwIDb2gAAAYDb00AAAYt
8So6AiiMAAAKAgN9DAAABCqCAnsMAAAEb2AAAApvjQAACnIzBwBwb44AAApvjwAACiqCAnsMAAAE
b2AAAApvjQAACnJZBwBwb44AAApvjwAACio6AiiMAAAKAgN9DQAABCqWAnsNAAAEb5AAAApygQcA
cG+RAAAKKJIAAApvkwAACnQwAAABKpYCew0AAARvkAAACnKTBwBwb5EAAAookgAACm+TAAAKdDAA
AAEqXih3AAAGc5QAAAolAm+VAAAKb5YAAAoqHgIojAAACirqcggFAHACKJcAAApvmAAACn4bAAAE
JS0XJn4aAAAE/gaGAAAGc5kAAAolgBsAAAQoCgAAKyibAAAKKgAAABMwAwCnAAAABgAAEX4OAAAE
LXtziAAABgpzEgAACoAOAAAEBnIPAgBwfR0AAAQGFn0fAAAEBnIPAgBwfR4AAARzcAAABiiXAAAK
b5wAAApvnQAACn4cAAAEJS0XJn4aAAAE/gaHAAAGc54AAAolgBwAAAQoCwAAKygMAAArBv4GiQAA
BnOhAAAKb6IAAAp+DgAABAJvHAAACi0Mcq8HAHACKKMAAAoqfg4AAAQCbyYAAAoqHgJ7EwAABCoi
AgN9EwAABCoeAnsUAAAEKhMwBQBbAAAAAAAAACh3AAAGc6QAAAolA2+lAAAKb5YAAApvbgAACheN
OQAAASUWchMIAHAoDQAAK51vpwAACheNOQAAASUWchcIAHAoDQAAK51vpwAACnIbCABwcg8CAHBv
KAAACioAEzAEANQCAAAAAAAAfhYAAAQ6xAIAAB8yjSUAAAElFtBFAAABKKgAAAqiJRfQRwAAASio
AAAKoiUY0EgAAAEoqAAACqIlGdBJAAABKKgAAAqiJRrQSgAAASioAAAKoiUb0EsAAAEoqAAACqIl
HNBMAAABKKgAAAqiJR3QTQAAASioAAAKoiUe0E4AAAEoqAAACqIlHwnQTwAAASioAAAKoiUfCtBQ
AAABKKgAAAqiJR8L0FEAAAEoqAAACqIlHwzQUgAAASioAAAKoiUfDdBTAAABKKgAAAqiJR8O0FQA
AAEoqAAACqIlHw/QEwAAASioAAAKoiUfENBVAAABKKgAAAqiJR8R0FYAAAEoqAAACqIlHxLQVwAA
ASioAAAKoiUfE9BYAAABKKgAAAqiJR8U0BUAAAEoqAAACqIlHxXQEAAAASioAAAKoiUfFtBZAAAB
KKgAAAqiJR8X0FoAAAEoqAAACqIlHxjQWwAAASioAAAKoiUfGdBcAAABKKgAAAqiJR8a0F0AAAEo
qAAACqIlHxvQXgAAASioAAAKoiUfHNBfAAABKKgAAAqiJR8d0GAAAAEoqAAACqIlHx7QYQAAASio
AAAKoiUfH9BiAAABKKgAAAqiJR8g0GMAAAEoqAAACqIlHyHQZAAAASioAAAKoiUfItBlAAABKKgA
AAqiJR8j0GYAAAEoqAAACqIlHyTQZwAAASioAAAKoiUfJdBoAAABKKgAAAqiJR8m0GkAAAEoqAAA
CqIlHyfQEgAAASioAAAKoiUfKNAPAAABKKgAAAqiJR8p0GoAAAEoqAAACqIlHyrQawAAASioAAAK
oiUfK9BsAAABKKgAAAqiJR8s0BEAAAEoqAAACqIlHy3QbQAAASioAAAKoiUfLtBuAAABKKgAAAqi
JR8v0G8AAAEoqAAACqIlHzDQcAAAASioAAAKoiUfMdBxAAABKKgAAAqic6kAAAqAFgAABH4WAAAE
Kh4CgBYAAAQqQgNvaAAACi0CFCp+EgAABCqiAnIPAgBwfQ8AAAQCc6oAAAp9FAAABAJzqgAACn0V
AAAEAihhAAAGKq5+FwAABC0ecjcIAHDQDAAAAiioAAAKb5wAAApzqwAACoAXAAAEfhcAAAQqGn4Y
AAAEKh4CgBgAAAQqGn4ZAAAEKh4CKKwAAAoqLnOCAAAGgBkAAAQqLnOFAAAGgBoAAAQqHgNvrQAA
CipaA2+uAAAKb60AAApyqQgAcCgaAAAKKgATMAQAuAAAAAcAABFzigAABgoGAn0iAAAEAnIPAgBw
fR0AAAQCcr8IAHADb60AAAooowAACn0eAAAEBgPQcwAAASioAAAKFm+vAAAKfSAAAAQGA9B0AAAB
KKgAAAoWb68AAAp9IQAABAZ7IAAABCwJBnsgAAAEji0RBnshAAAELCwGeyEAAASOLCMCFn0fAAAE
A2+YAAAKKA4AACsG/gaLAAAGc7AAAApvsQAACn4OAAAEAnseAAAEAnsdAAAEbxMAAAoqEzAFAE4B
AAAIAAARAnsiAAAEex8AAAQKAnsiAAAEBhdYfR8AAAQCeyAAAAQ5gwAAAAJ7IAAABI4segJ7IAAA
BBaaJgJ7IgAABAJ7IgAABHsdAAAEAnsiAAAEex8AAAQXLgdyCAUAcCsFcg8CAHAoawAACn0dAAAE
AnsiAAAEAnsiAAAEex0AAARyDwIAcBsCeyIAAAR8HwAABCiyAAAKKA8AACsotAAACihrAAAKfR0A
AAQqAnshAAAEOZoAAAACeyEAAASOOY4AAAAD0CYAAAEoqAAAChZvrwAACgsHLE4HjixKBxaadSYA
AAEMAnsiAAAEAnsiAAAEex0AAARyDwIAcAhvtQAACgJ7IgAABHwfAAAEKLIAAAooDwAAKyi0AAAK
KGsAAAp9HQAABCoCeyIAAAQCeyIAAAR7HQAABHLHCABwFo0fAAABKLYAAAooawAACn0dAAAEKgAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAFBgAACN+AACAGAAAzB0AACNTdHJp
bmdzAAAAAEw2AAAgCgAAI1VTAGxAAAAQAAAAI0dVSUQAAAB8QAAAoAUAACNCbG9iAAAAAAAAAAIA
AAFXFaIJCR8AAAD6ATMAFgAAAQAAAHQAAAARAAAAKAAAAIwAAAA4AAAAtgAAABcAAAAIAAAACQAA
AE8AAABSAAAADgAAAAEAAAAJAAAAAQAAAAQAAAABAAAADwAAAAEAAAAAABcQAQAAAAAABgBqDaMY
BgD+DaMYBgCHDFYYDwAXGQAABgC0DJEUBgBNDZEUBgAuDZEUBgDlDZEUBgCKDZEUBgCjDZEUBgDl
DJEUBgAADVAPCgC+DS4KBgAlA/sGDgA3AX0YDgAhAX0YDgABAH0YDgBvAn0YDgAHBX0YBgBYAvsG
DgBHA30YBgA2AvcTBgDFCfcTBgDhD/cTBgAhFfcTDgDXCn0YCgB9Fy4KEgBdFy4KCgB/FS4KCgC5
Gy4KBgA2G/cTFgB/ALwXGgAZDUAaBgAbDKMYBgAeA/cTBgBPFZEUBgB7CvcTGgDLDEAaGgAICkAa
BgBBAvsGBgBqDFYYBgCOF8MYBgBZFWEUHgDtC/MPHgCbDPMPHgDwCkwUBgDeCDYGBgCXD/cTIgCi
CPUVBgBGHPcTJgAaAOQXBgC0D/cTBgAUF/cTBgCfGWEUBgD7AvcTGgAaCkAaBgABFvcTBgD+FPcT
BgA7FfcTJgBDAOQXJgBmAOQXFgCYALwXFgAzALwXewDCHAAAFgCpALwXBgChCBkaBgByHZEUBgBP
AvcTDgBfA30YBgCtCPcTDgBmBH0YDgDSA30YDgC0A30YDgD2AX0YDgD7BX0YDgDqA30YDgA1BH0Y
DgAPAX0YDgDCBH0YDgBDBX0YDgCmBH0YDgAkBX0YDgDBAn0YDgB0BX0YDgADBH0YDgCGBH0YDgBh
BX0YDgBNBH0YDgAfBn0YDgAPBn0YDgDYBH0YDgCiAn0YDgBjBn0YDgCXBn0YDgCyBn0YDgBSBn0Y
DgD4AH0YDgCOBX0YDgAnBH0YDgB1Bn0YDgDLBX0YDgCMAn0YDgDQAH0YDgCjAX0YDgCYA30YDgDn
AH0YDgD0BH0YDgDBAH0YDgBABn0YDgCJBn0YDgDaAn0YDgDcAX0YDgCeBX0YBgBvFZEUGgA2DEAa
GgBPDEAaAAAAAMIFAAAAAAEAAQABABAAPBQAACwAAQABAAEAEAAzFwAAbQAGAAwAAQAQAE4XAABt
AAYATwABABAAQBcAAG0ABgBVAAEAEABsFwAAbQAGAFsAAQAQAJsbAAB5AAYAYQABABAALBoAAH0A
DABpAAEAEACAGQAAfQANAGwAAQAQAMIHAAB9AA4AbwABABAA/gcAABwADwBzAAAAEADKGEUZfQAX
AH0AAAEQAPAZRRm5ABkAgQADIRAA9wYAAH0AGgCEAAMBEACOAQAAfQAdAIgAAwEQAAQCAAB9ACAA
igACABAAfggAAH0AIwCMAAEAaAeMAwEAUQeMAwEArRqPAwEAaRiPAwEA5BuXAwYALBqaAwYAgBme
AwYATheiAwYAQBemAwYAbBeqAwEALgeXAwEAqRuuAwEAqRuuAxEAihmPAwQAFgfBAAQA0xuXAxQA
LgnBABQATwqyAwEAnAfBAAQAZRW3AwYAKhS3AxEA/wm+AxEADxTDAxEAsgrIAxEATAjNAzYAvgXR
AxYASwHVAxYAZgHgAwYA2wvBAAYAYQnBAAYACBSXAwYATBrrAwYAWxrrAwYAXwLvAwYATBXBAAYA
SR3BAAYAPRvBAAYAtRrBAAYAAxTBAAYAex3BAFAgAAAAAMYAHA4GAAEAHCEAAAAAxgAnDgYAAQBs
IQAAAADGAAkd8wMBAGwvAAAAAIEASRj5AwIADDAAAAAAgQDECwIEBABhMAAAAACRAIUDBwQFAIQw
AAAAAIEAfAsTBAcA6jAAAAAAgQCLCB0ECAAgMQAAAACBAH4DIwQKAEQxAAAAAIEA+RwvBA0A/zEA
AAAAhhgXGAYADgAHMgAAAACGGBcYwgEOABIyAAAAAIYIBhYrABEAJzIAAAAAhgg9EuQBEQAwMgAA
AACGCKsWKwARAEUyAAAAAIYIwxLkAREATjIAAAAAhggzDisAEQBjMgAAAACGCKAR5AERAGwyAAAA
AIYIXw4rABEAgTIAAAAAhgjaEeQBEQCKMgAAAACGCEsOKwARAJ8yAAAAAIYIvxHkAREAqDIAAAAA
hgg8CysAEQC9MgAAAACGCBsR5AERAMYyAAAAAIYIsAsrABEA2zIAAAAAhghsEeQBEQDkMgAAAACG
CGoLKwARAPkyAAAAAIYIMhHkAREAAjMAAAAAhgj1GisAEQAXMwAAAACGCGET5AERACAzAAAAAIYI
hAsrABEANjMAAAAAhghLEeQBEQBAMwAAAACGCPIbKwARAFYzAAAAAIYIohPkAREAYDMAAAAAhgiK
CSsAEQB2MwAAAACGCP4Q5AERAIAzAAAAAIYIdQkrABEAljMAAAAAhgjiEOQBEQCgMwAAAACGCH8a
KwARALYzAAAAAIYIJRPkAREAwDMAAAAAhggyAysAEQDWMwAAAACGCD8Q5AERAOAzAAAAAIYIkB0r
ABEA9jMAAAAAhgjFE+QBEQAANAAAAACGCAIMKwARABY0AAAAAIYIhxHkAREAIDQAAAAAhgjeFSsA
EQA2NAAAAACGCCYS5AERAEA0AAAAAIYIVBYrABEAVjQAAAAAhgigEuQBEQBgNAAAAACGCDkWKwAR
AHY0AAAAAIYIfhLkAREAgDQAAAAAhgggFisAEQCWNAAAAACGCF4S5AERAKA0AAAAAIYIZhorABEA
tjQAAAAAhggFE+QBEQDANAAAAACGCHYOKwARANY0AAAAAIYI+BHkAREA4DQAAAAAhgiABysAEQD2
NAAAAACGCI0Q5AERAAA1AAAAAIYIJhkrABEAFjUAAAAAhgjfEuQBEQAgNQAAAACGCAsbKwARADY1
AAAAAIYIfhPkAREAQDUAAAAAhghKCSsAEQBWNQAAAACGCMQQ5AERAGA1AAAAAIYILgYrABEAdjUA
AAAAhghbEOQBEQCANQAAAACGCM8PKwARAJY1AAAAAIYIDxLkAREAoDUAAAAAhgg9CSsAEQC2NQAA
AACGCLAQ5AERAMA1AAAAAIYIkxorABEA1jUAAAAAhghAE+QBEQDgNQAAAACGCL4GEAARAOs1AAAA
AIYIahA2BBIAAzYAAAAAhgAgHeQBEwALNgAAAACGAGgb5AETAAcyAAAAAIYYFxjCARMAEzYAAAAA
hgi+BhAAFgAdNgAAAACGCGoQNgQXADQ2AAAAAIYA8hwGABgAPDYAAAAAhgBlGwYAGAALNgAAAACG
AGgb5AEYAAcyAAAAAIYYFxjCARgAEzYAAAAAhgjdBhAAGwAdNgAAAACGCHoQNgQcADQ2AAAAAIYA
8hwGAB0APDYAAAAAhgBlGwYAHQALNgAAAACGAGgb5AEdAAcyAAAAAIYYFxjCAR0AEzYAAAAAhgi+
BhAAIAAdNgAAAACGCGoQNgQhADQ2AAAAAIYA8hwGACIAPDYAAAAAhgBlGwYAIgALNgAAAACGAGgb
5AEiAEQ2AAAAAIYYFxgGACIAZDYAAAAAxgCIHDsEIgC/NgAAAADGAcEaBgAmAMQ2AAAAAIEAPQcG
ACYAIDcAAAAAxgCVHEUEJgC/NgAAAADGAc8aBgAqAMM3AAAAAMYBgRzzAyoAvzYAAAAAxgEJHfMD
KwDWNwAAAACGGBcYUQQsAOU3AAAAAIYIwxQOAi0ABjgAAAAAhgjaFA4CLQAnOAAAAACGGBcYUQQt
ADY4AAAAAIYI2gUrAC4AXDgAAAAAhgjRCCsALgCCOAAAAADGAIsPKwAuAJo4AAAAAIYYFxgGAC4A
ojgAAAAAhgAKFysALgDgOAAAAACWAOMIVwQuAJM5AAAAAIQIAwkrAC8AmzkAAAAAhAgQCRAALwCk
OQAAAACGAAAaXAQwAKw5AAAAAIQAqwZlBDAAFDoAAAAAlgjlCWsEMQD0PAAAAACWCPIJcQQxAPw8
AAAAAJQAJBh4BDIAvzYAAAAAhgAhCwYANAANPQAAAACGGBcYBgA0AL82AAAAAJEYHRiCBDQAmjgA
AAAAgxgXGAYANAA2PQAAAACTCIoXhgQ0AGI9AAAAAJMImgqBATQAaT0AAAAAkwimCowENABxPQAA
AACWCI8bkwQ1AHg9AAAAAIYYFxgGADUAgD0AAAAAkRgdGIIENQCMPQAAAACRGB0YggQ1AJo4AAAA
AIYYFxgGADUAmD0AAAAAgwBUAZgENQCgPQAAAACDAG8BnwQ2AJo4AAAAAIYYFxgGADcAuD0AAAAA
gwAZAqYENwCaOAAAAACGGBcYBgA4AHw+AAAAAIMAAQOtBDgAmjgAAAAAhhgXGAYAOQAAAAEAJB0A
AAEA6Q8AAAIAhRQAAAEAMxgAAAEAjgMAAAIAigMAAAEA4xoAAAEAqA8AAAIA6QYAAAEA7Q8AAAIA
6QYAAAMANxgAAAEAzQcAAAEAgxcAAAIAyxkAAAMAjRUAAAEAhg4AAAEAhg4AAAEAgxcAAAIAyxkA
AAMAjRUAAAEAhg4AAAEAhg4AAAEAgxcAAAIAyxkAAAMAjRUAAAEAhg4AAAEAhg4AAAEAgxcAAAIA
yxkAAAMAjRUAAAEAhg4AAAEAhg4AAAEA5wUAAAIAoAkAAAMAgxcAAAQAjRUAAAEAxxoAAAIAPxgA
AAMAOBoAAAQAjRUAAAEAgxcAAAEAJB0AAAEAvxsAAAEAvxsAAAEAawkAAAEAhg4AAAEAzQcAAAEA
hg4AAAEAJwoAAAIAzgkAAAEAhg4AAAEA8xUAAAEAShUAAAEA7hUAAAEAtgcJABcYAQARABcYBgAZ
ABcYCgApABcYEAAxABcYEAA5ABcYEABBABcYEABJABcYEABRABcYEABZABcYEABhABcYEABpABcY
BgAJARcYBgARARcYBgBJARcYBgBpARcYFQDxABwOBgAMABcYBgAMAB8HIwDxACcOBgABAXYPKwB5
ARQMLwCBAf4TKwCJAUwbZACJAd4begCBAaEdhgCBAecajAAMAGIdkwB5ABcYBgCBABcYBgCJABcY
BgCRABcYBgCZABcYBgAUABcYBgC5AD8doAAcABcYrACBADELsgAMAOUTugCBAN4FwQCBAdQHxACB
ACsVwQCBAG8KwQCBAAoWwQCBAOQLwQCRAd8PygDBAHoV0ACBADUI0ACBAB4I0ACBAAoI0ACBAEAL
sgCBALQLsgCBACkLsgCBAFwLsgCBAJ4LsgCBAA4c0ACBACEP0ACBAMgO0ACBAIwO0ACBAPMO0AB5
AJYJwQB5AIEJwQB5ANkJwQB5ACgdwQB5AJwdwQB5AA4MwQB5AFwIwQB5APUWwQB5ANMPsgB5AIUW
wQB5AEUWwQB5AHAWwQCBAbsd1AB5AD0PwQB5AHIawQAkABcYrAB5AAkQ3wB5AE4dwQDBAPIU5gDB
AHYU5gDBAIAK7wDBAH0b9wDBAK0d/QB5AGcIwQDBAIsPKwCBAecaBQGJAB0JwQCJACMHsgCJAMAW
wQCJAEwLsgCRACQXwQCZAJgWwQCBAcQPCwGZAN8WwQAUAOUTKQEUAMkbNAHxAMcGOAHJAHIIKwCZ
AQ0YPgHJABgVSQHJAO8HKwChATcUVQHBANQLWwHBABsU/QCBAbkPNAGBAZ4PYgGBAa0dhgCBAeca
aAGBAT8cbgGpAKEcwQCBAbQXKwCBARAaCwEUAB8HrABZARcYEABZAcIKgQG5ACgbhwGBAe4alwGp
ABcYBgAsABcYBgAsAB8HrADBAWoPqgGBAYkbuwGBAdwH1ADZABcYwgHZAIMXzAHZAMsZ0AHhAJQP
1AHZANYT2QHZAO4T3gHZAN0TAQDRARcYEADZACAd5AHZAGgb5AHZAPIcBgDZAGUbBgDxABcYBgCB
AfkZ6AHxAN8Z8AHhAFUb5AHxAO8F+gH5ABcYBgCZAaMUAQLhAaoJBwLpAZ4XDgLxAHQZFALxAeUT
GgLxAN0cIQL5Aa4cJwI0ABcYBgA0AB8HrAA5AWoPNAL5AGcKOwIpAXMYQQI8ABcYUgKJAUUbWAKB
AUcUegIpAW4digIZAq4ZkAJEABcYUgKJAYgKoQKJAVMcwQJMABcYUgJUAKwP4wKBAe4a7gJcABcY
BgBcAB8HrACJAXsc+wKBAboHCAMpAb8IDgM5ARcYFwNkABcYBgBRARcYJQNxARcYBgCRA/oIKwAp
AVoKOwKRA7cZMgNsABcYUgJ0AKwP4wK5AYsPKwCJAU4c+wKBAXQbWwMxAbkPNAGBAe4aYQMuAAsA
2QQuABMA4gQuABsAAQUuACMACgUuACsAMwUuADMAMwUuADsAMwUuAEMACgUuAEsAOQUuAFMAMwUu
AFsAUAVDAGMAmAWDAXsAmAXBAWsAmAXDAXMAmAXjAXMAmAUDAnMAmAVhAnMAmAUhA3MAmAWpCYMA
AQXJCYMAAQVgDnMAmAWADnMAmAU0AE4BdAGfAfYBhQItA1IDAwABAAQAQQAFAEMABgBFAAgARwAJ
AEkACwBLAAwATQANAE8AAAAKFrQEAABBErgEAACvFrQEAADHErgEAAA3DrQEAACkEbgEAABjDrQE
AADeEbgEAABPDrQEAADDEbgEAABAC7QEAAAfEbgEAAC0C7QEAABwEbgEAABuC7QEAAA2EbgEAAD5
GrQEAABlE7gEAACIC7QEAABPEbgEAAD2G7QEAACmE7gEAACOCbQEAAACEbgEAAB5CbQEAADmELgE
AACDGrQEAAApE7gEAAA2A7QEAABDELgEAACUHbQEAADJE7gEAAAGDLQEAACLEbgEAADiFbQEAAAq
ErgEAABYFrQEAACkErgEAAA9FrQEAACCErgEAAAkFrQEAABiErgEAABqGrQEAAAJE7gEAAB6DrQE
AAD8EbgEAACEB7QEAACRELgEAAAqGbQEAADjErgEAAAPG7QEAACCE7gEAABOCbQEAADIELgEAAAy
BrQEAABfELgEAADTD7QEAAATErgEAABBCbQEAAC0ELgEAACXGrQEAABEE7gEAADkBrQEAACBELgE
AADkBrQEAACBELgEAADhBrQEAAB+ELgEAADkBrQEAACBELgEAADHFLwEAADeFLwEAADeBbQEAADV
CLQEAAAlCbQEAAD2CcIEAACOF8gEAADPCs4EAACTG9QEAgANAAMAAgAOAAUAAgAPAAcAAgAQAAkA
AgARAAsAAgASAA0AAgATAA8AAgAUABEAAgAVABMAAgAWABUAAgAXABcAAgAYABkAAgAZABsAAgAa
AB0AAgAbAB8AAgAcACEAAgAdACMAAgAeACUAAgAfACcAAgAgACkAAgAhACsAAgAiAC0AAgAjAC8A
AgAkADEAAgAlADMAAgAmADUAAgAnADcAAgAoADkAAgApADsAAgAqAD0AAgArAD8AAgAsAEEAAgAt
AEMAAgAuAEUAAgAvAEcAAgAwAEkAAgAxAEsAAgAyAE0AAgAzAE8AAgA0AFEAAgA1AFMAAgA2AFUA
AgA3AFcAAgA4AFkAAgA5AFsAAgA6AF0AAgA7AF8AAgA8AGEAAgA9AGMAAgA+AGUAAgA/AGcAAgBA
AGkAAgBBAGsAAgBCAG0AAgBDAG8AAgBEAHEAAgBFAHMAAgBGAHUAAgBHAHcAAgBIAHkAAgBJAHsA
AgBKAH0AAQBLAH8AAQBMAIEAAQBQAIMAAQBRAIUAAQBWAIcAAQBXAIkAAQBcAIsAAQBdAI0AAgBq
AI8AAgBrAJEAAgBtAJMAAgBuAJUAAgBzAJcAAQB0AJcAAgB3AJkAAQB4AJkAAgB+AJsAAgB/AJ0A
AQCAAJ0AAgCBAJ8AHACZAKUA2QCjAS4CSAKXAtIC2wL0Ah8DQQNKAwSAAAABAAAAAAAAAAAAAAAA
ALgBAAAEAAAAAAAAAAAAAABoA+4GAAAAAAsAAAAAAAAAAAAAAHEDIhwAAAAAAQABAAAAAAAAAAAA
egMICwAAAAALAAAAAAAAAAAAAABxA1ocAAAAAAsAAAAAAAAAAAAAAHEDlxUAAAAAAwACAAcAAAAA
AAAAgwNAGgAAAAAEAAAAAAAAAAAAAABoA/cTAAAAAAQAAAAAAAAAAAAAAGgDjgoAAAAACwAAAAAA
AAAAAAAAcQO6FQAAAAAAAAAAAQAAANQYAAAOAAoADwAKABAACgARAAsAAAAAABUAhwYxAHYAMwB2
ABQAEAEUABUBFAAaARQAHwEUACQBFAAvAfEAtgE1AXMCPwG7AkEBuwJNAXYAQQE7A2cBdgABAGkA
AAAAUGxhY2VtZW50SW5mb3JtYXRpb25fMTAwAElEVFNDb21wb25lbnRNZXRhRGF0YTEwMABJRFRT
VmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVjdGlvbjEwMABJRFRTUnVudGlt
ZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAwAElEVFNWYXJpYWJsZXMxMDAA
SURUU0V2YWx1YXRvckNvbnRleHQxMDAAS2VlcGVySW5mb18yMDAASW5zdXJlZEluZm9ybWF0aW9u
XzgwMABQZW5kcmlja05vdGVfOTAwAFNlZ21lbnRhdGlvblNjb3Jlc18xMTAAUGVuZGluZ1JlY2Fs
bF8yMTAAQWNjb3VudEluZm9ybWF0aW9uXzEwAFBhcnR5SW5mb3JtYXRpb25fMjAAPD45X18yXzAA
PEdldEhlYWRlcj5iX18yXzAAPD45X180XzAAPEdldFJlY29yZExheW91dEV4YW1wbGU+Yl9fNF8w
ADw+Y19fRGlzcGxheUNsYXNzNF8wAENsaWVudFJlY2FsbEluZm9fMjAxAFNDXzBjYzZmM2Y5YmY0
NTQ3ZWM5NDk2ZTVlMjY1MGNlZDAxAE1haWxSZXR1cm5JbmZvcm1hdGlvbl8xMTEARWR1Y2F0aW9u
XzgxMQA8PmNfX0Rpc3BsYXlDbGFzczRfMQA8R2V0UmVjb3JkTGF5b3V0RXhhbXBsZT5iX18xAE51
bGxhYmxlYDEASUVudW1lcmFibGVgMQBBY3Rpb25gMQBMaXN0YDEAQ1MkPD44X19sb2NhbHMxAE9y
aWdpbmFsT3JGb3JtZXJDcmVkaXRvcl8xMDIAQ2xvc2VJbmZvVG9DbGllbnRfMjAyAENsaWVudElu
c3VyYW5jZUluZm9ybWF0aW9uXzgwMgBSZXNwb25zaWJsZVBhcnR5SW5mb18xMTIAQWRkaXRpb25h
bEJhbmtpbmdJbmZvcm1hdGlvbl84MTIASW50MzIAPEdldFJlY29yZExheW91dEV4YW1wbGU+Yl9f
MgBGdW5jYDIARGljdGlvbmFyeWAyAGdldF9DdXN0b21lckFkZHJlc3MyAEFjY291bnRGcmVlRm9y
bVRleHRfMjAzAEFjY291bnRGcmVlRm9ybVRleHRNbnRPbmx5XzIwMwBhZGQyMDMAQWRkVG9MaXN0
UmVjb3JkMjAzAE5ld0luc3VyYW5jZUluZm9ybWF0aW9uXzgwMwBEaXNwdXRlQWNjb3VudEluZm9y
bWF0aW9uXzIxMwBEZWNlYXNlZEluZm9ybWF0aW9uXzEwNABNaXNjZWxsYW5lb3VzU0lGSW5mb18y
MDQAQ2xpZW50R2VuZXJhbFBhdGllbnRJbmZvcm1hdGlvbl84MDQAU2tpcFBob25lXzIxNABQYXJ0
eVByZXZpb3VzQWRkcmVzc18yNABDb25zdW1lckZyZWVGb3JtVGV4dF8yMDUAQ29uc3VtZXJGcmVl
Rm9ybVRleHRNbnRPbmx5XzIwNQBDbGllbnRDb21tZXJjaWFsSW5mb3JtYXRpb25fODA1AFByaW9y
Q29sbGVjdGlvbkNvbnRhY3RzXzExNQBQb3NzaWJsZUFkZHJlc3Nlc183MDYAQ2xpZW50VGVsY29t
SW5mb3JtYXRpb25fODA2AFBlbmRyaWNrVk5vdGVzXzkwNgBDbGllbnRCYW5raW5nSW5mb3JtYXRp
b25fODA3AFJlcXVlc3RGb3JUaXRsZUxpZW5SZWxlYXNlXzIxNwBQb3NzaWJsZVBob25lc01haW50
ZW5hbmNlXzIwOABQb3NzaWJsZVBob25lc18yMDgAUmV0YWlsQ2x1YkluZm9ybWF0aW9uXzgwOABT
SUZUcmFja2luZ18yMDkAQ2FibGVDZWxsVXRpbGl0eUluZm9ybWF0aW9uXzgwOQA8PjkAPE1vZHVs
ZT4AQ2xvc2VBY2NvdW50X0MAZ2V0X0NsaWVudElEAElucHV0SUQAR2V0T3V0cHV0SUQASW1wb3J0
YW50Tm90ZV9JTk9URQBBc3NpZ25Sb3V0ZV9SVEUAQWRqdXN0bWVudF9BREoAZ2V0X1NTTgBTeXN0
ZW0uSU8AVXBkYXRlQ0JSSW5mb19DQlIAUmVhY3RpdmF0ZV9SRUFDVABMZXR0ZXJSZXF1ZXN0X0xF
VABTdGF0dXNDb2RlVXBkYXRlX1NUAFVwZGF0ZUZpZWxkX1UAUGF5bWVudFJldmVyc2FsX1JFVgBn
ZXRDU1YAUGF5bWVudF9QQVkAc2V0X0RhdGEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAHNldF9Sb3dE
YXRhAGRhdGEAbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAENsaWVudElk
AEFkZABEYXRlTG9hZGVkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAX255Y29o
b2xkUmVwb3J0Q3JlYXRlZABfZXhjZXB0aW9uUmVwb3J0Q3JlYXRlZABnZXRfVG90YWxBbXRJbnRl
cmVzdEFjY3J1ZWQAPEZpbGVOYW1lPmtfX0JhY2tpbmdGaWVsZABmbGQAVHJpbUVuZABCYXNlUmVj
b3JkAHJlY29yZABSZXBsYWNlAElzTnVsbE9yV2hpdGVTcGFjZQBnZXRfU3RhY2tUcmFjZQBCYXNl
U2VydmljZQBPdGhlckluaXRpYWxCYWxhbmNlAEludGVyZXN0SW5pdGlhbEJhbGFuY2UAUHJpbmNp
cGFsSW5pdGFsQmFsYW5jZQBkZWZhdWx0SW5zdGFuY2UAUG9zdGFsQ29kZQBTdGF0dXNDb2RlAGdl
dF9NZXNzYWdlAEVtYWlsTWVzc2FnZQBXcml0ZUV4Y2VwdGlvbk1lc3NhZ2UASUVudW1lcmFibGUA
UnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X1BhdGhJbnB1dEZpbGUAR2V0
UmVjb3JkTGF5b3V0RXhhbXBsZQBnZXRfTmFtZQBnZXRfRmlsZU5hbWUAc2V0X0ZpbGVOYW1lAElu
Y29taW5nRmlsZU5hbWUAUmVjb3JkVHlwZU5hbWUAZ2V0X0JhbmtOYW1lAGdldF9PcmlnaW5hbExl
bmRlck5hbWUAQ2xhc3NOYW1lAGNsYXNzTmFtZQBnZXRfQ3VzdG9tZXJMYXN0TmFtZQBnZXRfQ3Vz
dG9tZXJGaXJzdE5hbWUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAERhdGVU
aW1lAHJlY29yZExpbmUAQWRkcmVzc0xpbmUAZ2V0X0ZIRW5naW5lAHNldF9GSEVuZ2luZQBmSEVu
Z2luZQBNdWx0aVJlY29yZEVuZ2luZQBDb21tb25FbmdpbmUAZW5naW5lAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlBpcGVsaW5lAFJlY29yZFR5cGUAZ2V0X0Jhc2VUeXBlAEdldFR5cGUAU09MQWdy
ZWVtZW50VHlwZQBDb21wYXJlAFdoZXJlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0
dXJlAHJlc291cmNlQ3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBHZW5lcmFsUHVycG9zZVJl
Y29yZEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3Nl
AERpc3Bvc2UAU09MRGF0ZQBMaXN0ZWREYXRlAGdldF9TZXJ2aWNlRGF0ZQBCS0VmZmVjdGl2ZURh
dGUAQ2hhcmdlT2ZmRGF0ZQBnZXRfQ2hhcmdlb2ZmRGF0ZQBnZXREYXRlAGdldF9DbGllbnRMYXN0
UGF5bWVudERhdGUAQ2xpZW50TGFzdFBheURhdGUAZ2V0X0RlbGlucXVlbmN5RGF0ZQBnZXRGb3Jt
YXRlZGRhdGUATmVnYXRlAFRlbXBsYXRlAFNPTFN0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdl
dF9DdXN0b21lclN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWxpbWl0
ZWRSZWNvcmRBdHRyaWJ1dGUARml4ZWRMZW5ndGhSZWNvcmRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEZpZWxkRml4ZWRMZW5ndGhBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEZpZWxkSGlk
ZGVuQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9QcmluY2lw
YWxCYWxhbmNlRHVlAGdldF9PdGhlckJhbGFuY2VEdWUAZ2V0X0ludGVyZXN0QmFsYW5jZUR1ZQBn
ZXRfVG90YWxBbXREdWUAdmFsdWUAVG90YWxBbW91bnRPZk5vbkludGVyZXN0Q2hhcmdlc0FuZEZl
ZXNBY2N1cmVkU2luY2VDaGFyZ2VPZmYAVG90YWxBbW91bnRPZkludGVyZXN0QWNjdXJlZFNpbmNl
Q2hhcmdlT2ZmAFRvdGFsQW1vdW50T2ZQYXltZW50c01hZGVPbkRlYnRTaW5jZUNoYXJnZU9mZgBU
b3RhbEFtb3VudER1ZUFzT2ZDaGFyZ2VPZmYAQWx0ZXJuYXRlUGhvbmVGbGFnAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAV3JpdGVTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcA
R2V0U3RyaW5nAFN1YnN0cmluZwBtc2cARm9yRWFjaABNYXRoAGdldF9MZW5ndGgAU3RhcnRzV2l0
aABnZXRfRGF0ZU9mQmlydGgAVG9EZWNpbWFsAHZhbABsYWJlbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAU291cmNlT2ZFbWFpbABTQ18wY2M2ZjNmOWJmNDU0N2VjOTQ5NmU1ZTI2NTBjZWQwMS5kbGwA
Z2V0X0N1c3RvbWVyQWRkcmVzczJfSXNOdWxsAGdldF9TU05fSXNOdWxsAHNldF9EYXRhX0lzTnVs
bABzZXRfUm93RGF0YV9Jc051bGwAZ2V0X1RvdGFsQW10SW50ZXJlc3RBY2NydWVkX0lzTnVsbABn
ZXRfQmFua05hbWVfSXNOdWxsAGdldF9PcmlnaW5hbExlbmRlck5hbWVfSXNOdWxsAGdldF9DdXN0
b21lckxhc3ROYW1lX0lzTnVsbABnZXRfQ3VzdG9tZXJGaXJzdE5hbWVfSXNOdWxsAGdldF9TZXJ2
aWNlRGF0ZV9Jc051bGwAZ2V0X0NoYXJnZW9mZkRhdGVfSXNOdWxsAGdldF9DbGllbnRMYXN0UGF5
bWVudERhdGVfSXNOdWxsAGdldF9EZWxpbnF1ZW5jeURhdGVfSXNOdWxsAGdldF9DdXN0b21lclN0
YXRlX0lzTnVsbABnZXRfUHJpbmNpcGFsQmFsYW5jZUR1ZV9Jc051bGwAZ2V0X090aGVyQmFsYW5j
ZUR1ZV9Jc051bGwAZ2V0X0ludGVyZXN0QmFsYW5jZUR1ZV9Jc051bGwAZ2V0X1RvdGFsQW10RHVl
X0lzTnVsbABnZXRfRGF0ZU9mQmlydGhfSXNOdWxsAGdldF9DdXN0b21lclppcF9Jc051bGwAZ2V0
X0NsaWVudFJlZmVyZW5jZU51bWJlcl9Jc051bGwAZ2V0X0N1c3RvbWVyTW9iaWxlTnVtYmVyX0lz
TnVsbABnZXRfQ3VzdG9tZXJQT0VQaG9uZU51bWJlcl9Jc051bGwAZ2V0X0N1c3RvbWVySG9tZVBo
b25lTnVtYmVyX0lzTnVsbABnZXRfQ2xpZW50TG9hbk51bWJlcl9Jc051bGwAZ2V0X1RvdGFsQW10
Tm9uSW50ZXJlc3RDaGFyZ2VzX0lzTnVsbABnZXRfQ3VzdG9tZXJFbWFpbEFkZHJlc3NfSXNOdWxs
AGdldF9DdXN0b21lckFkZHJlc3NfSXNOdWxsAGdldF9iYW5rYWNjb3VudDFzdDRkaWdpdHNfSXNO
dWxsAGdldF9EZXNjcmlwdGlvbm9mRGVidF9Jc051bGwAZ2V0X1RvdGFsQW10b2ZQbXRzTWFkZW9u
RGVidF9Jc051bGwAZ2V0X0NsaWVudExhc3RQYXltZW50QW1vdW50X0lzTnVsbABnZXRfQ3VzdG9t
ZXJDaXR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAEZyb20A
RmxkTnVtAHJlc291cmNlTWFuAG9wX0dyZWF0ZXJUaGFuAEZpbGVzV3JpdHRlbgBTaWduAFNjcmlw
dE1haW4ASm9pbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9T
dWJ0cmFjdGlvbgBzdWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5l
Y3Rpb25Db2xsZWN0aW9uAGdldF9IWUNPSE9MRENvbm5lY3Rpb24AZ2V0X0V4Y2VwdGlvbkNvbm5l
Y3Rpb24Ab3BfQWRkaXRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNl
cHRpb24ARGVidERlc2NyaXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AVG8ARmllbGRJbmZvAEN1bHR1
cmVJbmZvAERlYnVnSW5mbwBNZW1iZXJJbmZvAFplcm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
TWljcm9zb2Z0LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRU
U1BpcGVsaW5lV3JhcABnZXRfQ3VzdG9tZXJaaXAAcmVjdHlwAFN5c3RlbS5MaW5xAENoYXIAZ2V0
X0NsaWVudFJlZmVyZW5jZU51bWJlcgBnZXRfQ3VzdG9tZXJNb2JpbGVOdW1iZXIAZ2V0X0N1c3Rv
bWVyUE9FUGhvbmVOdW1iZXIAZ2V0X0N1c3RvbWVySG9tZVBob25lTnVtYmVyAEFsdGVybmF0ZVBo
b25lTnVtYmVyAFByaW1hcnlQaG9uZU51bWJlcgBPcmlnaW5hbExvYW5OdW1iZXIAZ2V0X0NsaWVu
dExvYW5OdW1iZXIAQ3JlZGl0b3JJbnRlcm5hbENvbnN1bWVyTnVtYmVyAENoZWNraW5nQWNjb3Vu
dE51bWJlcgBTb2NpYWxTZWN1cml0eU51bWJlcgBHZXRIZWFkZXIASUZvcm1hdFByb3ZpZGVyAE9y
aWdpbmFsTGVuZGVyAElucHV0MEJ1ZmZlcgBPdXRwdXQwQnVmZmVyAE5ZQ09IT0xEQnVmZmVyAFBp
cGVsaW5lQnVmZmVyAEV4Y2VwdGlvbnNCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0Nvbm5lY3Rpb25NYW5hZ2VyAFRvVXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5E
dHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBw
ZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBDdXN0b21TZWxlY3RvcgBzdHIAcmVjMjAzcwBPdXRw
dXRJRHMAZ2V0Tm9ucGVtZGFzAFN5c3RlbS5EaWFnbm9zdGljcwBjbGllbnRpZHMAR2V0RmllbGRz
AFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZS5EYXRhLlJlY29yZHMAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzBjYzZmM2Y5YmY0NTQ3ZWM5NDk2ZTVl
MjY1MGNlZDAxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBn
ZXRfVG90YWxBbXROb25JbnRlcmVzdENoYXJnZXMAU0NfMGNjNmYzZjliZjQ1NDdlYzk0OTZlNWUy
NjUwY2VkMDEuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAcmVjb3JkTGF5b3V0RXhh
bXBsZXMARGF0ZVRpbWVTdHlsZXMAR2V0VHlwZXMAR2V0Q3VzdG9tQXR0cmlidXRlcwBCdWZmZXJD
b2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAEdldERlYnVnRGV0
YWlscwBDb250YWlucwBTeXN0ZW0uQ29sbGVjdGlvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaWxl
SGVscGVycwBEZWxpbWl0ZWRBdHRycwBGaXhlZEF0dHJzAGdldF9DdXN0b21lckVtYWlsQWRkcmVz
cwBnZXRfQ3VzdG9tZXJBZGRyZXNzAGdldF9iYW5rYWNjb3VudDFzdDRkaWdpdHMAY2xpZW50cwBB
dHRhY2htZW50cwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAc0R0AENvbmNhdABG
b3JtYXQAZ2V0X0Rlc2NyaXB0aW9ub2ZEZWJ0AGdldF9Ub3RhbEFtdG9mUG10c01hZGVvbkRlYnQA
VHJ5UGFyc2VFeGFjdABPYmplY3QAU3ViamVjdABTZWxlY3QARGlzdGluY3QAZ2V0X0VuZE9mUm93
c2V0AFNldEVuZE9mUm93c2V0AFBhZFJpZ2h0AG9wX0ltcGxpY2l0AFNwbGl0AGdldF9EZWZhdWx0
AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ291bnQA
SW5wdXRSZWNvcmRDb3VudABueWNvaG9sZGNvdW50AGdldF9DbGllbnRMYXN0UGF5bWVudEFtb3Vu
dABDbGllbnRMYXN0UGF5QW1vdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQASW5zZXJ0
AENvbnZlcnQATGFzdABUb0xpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QARmly
c3QASW5wdXQwX1Byb2Nlc3NJbnB1dABQcmltZU91dHB1dABGcmVlRm9ybVRleHQAR2V0VmFsdWVX
aXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4
dABBZGRSb3cAQWRkUGxhY2VtZW50Um93AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBB
ZGRyZXNzVW5pdF9BcHRPclBPQm94AGdldF9Ub2RheQBCb2R5AFJlbGF0aW9uc2hpcFR5cGVLZXkA
Q29udGFpbnNLZXkAZ2V0X0Fzc2VtYmx5AE5vdGlmaWNhdGlvbkNhdGVnb3J5AGdldF9DdXN0b21l
ckNpdHkAb3BfRXF1YWxpdHkAb3BfSW5lcXVhbGl0eQBJc051bGxPckVtcHR5AAAAAAAlaQBuAHQA
ZQBnAHIAYQBfAGMAcgBlAGQAaQB0AF8AbwBuAGUAAC9JAG4AdABlAGcAcgBhACAAQwByAGUAZABp
AHQAIABPAG4AZQAsACAATABMAEMAACVpAG4AdABlAGcAcgBhAF8AYwByAGUAZABpAHQAXwB0AHcA
bwAAL0kAbgB0AGUAZwByAGEAIABDAHIAZQBkAGkAdAAgAFQAdwBvACwAIABMAEwAQwAAKWkAbgB0
AGUAZwByAGEAXwBjAHIAZQBkAGkAdABfAHQAaAByAGUAZQAAM0kAbgB0AGUAZwByAGEAIABDAHIA
ZQBkAGkAdAAgAFQAaAByAGUAZQAsACAATABMAEMAACdpAG4AdABlAGcAcgBhAF8AYwByAGUAZABp
AHQAXwBmAG8AdQByAAAxSQBuAHQAZQBnAHIAYQAgAEMAcgBlAGQAaQB0ACAARgBvAHUAcgAsACAA
TABMAEMAACdpAG4AdABlAGcAcgBhAF8AYwByAGUAZABpAHQAXwBmAGkAdgBlAAAxSQBuAHQAZQBn
AHIAYQAgAEMAcgBlAGQAaQB0ACAARgBpAHYAZQAsACAATABMAEMAAA1JAE4AVABFAEcAMQAADUkA
TgBUAEUARwAyAAANSQBOAFQARQBHADMAAA1JAE4AVABFAEcANAAADUkATgBUAEUARwA1AAAJTgBV
AEwATAAAAQAVMAAwAC8AMAAwAC8AMAAwADAAMAAAgKlEAGUAbABpAG4AcQB1AGUAbgBjAHkAIABE
AGEAdABlACAAaQBzACAAUgBlAHEAdQBpAHIAZQBkAC4AIABJAG4AdgBhAGwAaQBkACAAZABlAGwA
aQBxAHUAZQBuAGMAeQAgAGQAYQB0AGUAIABmAG8AcgAgAGMAbABpAGUAbgB0ACAAcgBlAGYAZQBy
AGUAbgBjAGUAIABuAHUAbQBiAGUAcgA6ACAAIAAAKy4AIABOAGUAZQBkACAAdABvACAAZwBlAHQA
IABkAGkAcwB0AHIAbwAuAACAk08AcgBpAGcAaQBuAGEAbAAgAGwAZQBuAGQAZQByACAAaQBuAGMA
bwByAHIAZQBjAHQAIABvAHIAIABtAGkAcwBzAGkAbgBnACAAdgBhAGwAdQBlACAAZgBvAHIAIABj
AGwAaQBlAG4AdAAgAHIAZQBmAGUAcgBlAG4AYwBlACAAbgB1AG0AYgBlAHIAOgAgACAAAAMuAAAD
XwAAAyAAAA9XAFIASQBUAFQARQBOAAADQwAACVAAUgBJAE0AAAVOAFkAABFOAFkAQwBPAEgATwBM
AEQAAIExQwBsAGkAZQBuAHQAIABSAFAAIABBAGMAYwBvAHUAbgB0ACAATgB1AG0AYgBlAHIALABD
AGwAaQBlAG4AdAAgAEwAbwBhAG4AIABuAHUAbQBiAGUAcgAsAEMAdQByAHIAZQBuAHQAIABCAGEA
bABhAG4AYwBlACwAVABvAHQAYQBsACAAQQBtAG8AdQBuAHQAIABEAHUAZQAgAGEAcwAgAG8AZgAg
AEMAaABhAHIAZwBlACAATwBmAGYALABUAG8AdABhAGwAIABBAG0AdAAgAG8AZgAgAFAAbQB0AHMA
IABNAGEAZABlACAAbwBuACAARABlAGIAdAAgAHMAaQBuAGMAZQAgAEMAaABhAHIAZwBlACAATwBm
AGYALABEAGkAZgBmAGUAcgBlAG4AYwBlAAADLAAAAzAAABliAGEAbgBrACAAbgBhAG0AZQA6ACAA
IAAAJ0UAeABjAGUAcAB0AGkAbwBuACAAaQBuACAAcwBjAHIAaQBwAHQAADNFAHgAYwBlAHAAdABp
AG8AbgAgAGkAbgBuAGUAcgAgAGUAeABjAGUAcAB0AGkAbwBuAAApRQB4AGMAZQBwAHQAaQBvAG4A
IABTAHQAYQBjAGsAVAByAGEAYwBlAAAJWABYAFgAWAAAD00AZABkAHkAeQB5AHkAABFNAE0AZABk
AHkAeQB5AHkAAA1NAGQAeQB5AHkAeQAAD00ATQBkAHkAeQB5AHkAAAtlAG4ALQBVAFMAAUNMAGkA
bgBlADoAewAwAH0AIAAgAE0AZQBzAHMAYQBnAGUAOgB7ADEAfQAgACAARABlAHQAYQBpAGwAOgB7
ADIAfQAAC0MATwBNAEEASwAAAy8AAANOAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAAABVFAHgAYwBlAHAA
dABpAG8AbgBzAAAlSABZAEMATwBIAE8ATABEAEMAbwBuAG4AZQBjAHQAaQBvAG4AACdFAHgAYwBl
AHAAdABpAG8AbgBDAG8AbgBuAGUAYwB0AGkAbwBuAAARQwBsAGkAZQBuAHQASQBEAAAbUABhAHQA
aABJAG4AcAB1AHQARgBpAGwAZQAAY2MAbwB1AGwAZAAgAG4AbwB0ACAAZABlAHQAZQByAG0AaQBu
AGUAIAByAGUAYwBvAHIAZAAgAGwAYQB5AG8AdQB0ACAAZgBvAHIAIABjAGwAYQBzAHMAIABbAHsA
MAB9AF0AAAMKAAADDQAAG1gAWABYAFgAWABYAFgAWABYAFgAWABYAFgAAHFTAEMAXwAwAGMAYwA2
AGYAMwBmADkAYgBmADQANQA0ADcAZQBjADkANAA5ADYAZQA1AGUAMgA2ADUAMABjAGUAZAAwADEA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABVCAGEAcwBlAFIAZQBj
AG8AcgBkAAAHewAwAH0AAIFXCgAKAAoACgBFAHIAcgBvAHIAIQAgACAAZgBsAGQALgBHAGUAdABD
AHUAcwB0AG8AbQBBAHQAdAByAGkAYgB1AHQAZQBzACgAdAB5AHAAZQBvAGYAKABGAGkAbABlAEgA
ZQBsAHAAZQByAHMALgBGAGkAeABlAGQATABlAG4AZwB0AGgARgBpAGUAbABkACkALAAgAGYAYQBs
AHMAZQApACAAZABpAGQAbgB0ACAAcgBlAHQAdQByAG4AIABhAG4AeQAgAGQAYQB0AGEALgAgACAA
YwBoAGUAYwBrACAAdABoAGUAIABmAGkAbABlACAAbQBhAGsAZQAgAHMAdQByAGUAIAB0AGgAZQAg
AGYAaQBlAGwAZABzACAAYQBsAGwAIABoAGEAdgBlACAAIABmAGkAeABlAGQAIABmAGkAZQBsAGQA
IABhAHQAdAByAC4ALgAuAC4AAKalCtzid7hCq1nmcE1dHyoABCABAQgDIAABBSABARERBCABAQ4G
IAEBEYCxBhUSOQIODgcgAgETABMBAyAADgQAAQEOLwcREj0SQRJFEkkSTRUSUQESVQ4OFRFZARFd
EWERYRURWQERXRURWQEIEWEIEmUCERABARUSgKEBHgAVEoChAR4AAwoBAwsQAQEIFRKAoQEeAAUA
AgIODgYAAw4ODg4FIAECEwAGFRJRARJVBAAAEV0GFRFZARFdBSABARMABwYVEVkBEV0GIAETARMA
AgYOBSACDg4OBQABEWEOAwYRYQQAAQIOBRURWQEIBgYVEVkBCAgAAhFhEWERYQcAAggRYRFhBQAB
EWEIBwACAhFhEWEFAAEOHQ4EIAECDgQKARJBBAoBEj0ECgESRQQKARJJBAoBEk0FIAETAAgECgES
VQMgAAgFIAASgM0KIAYBCA4ODggQAgQgABJlBgcDCAgRYQUAAQgRYQYAARFhEWEFIAIOCAgFAAIO
Dg4FIAIOCA4MBwMdDhFdFRFZARFdBQAAEoCtDwAFAg4dDhKA1RGA2RARXQcABA4OHBwcAwcBDgYV
ElEBHgALEAEBDhUSgKEBHgAECgEeAAYgAR0OHQMJIAMBEnEdCBJ1AwYScQMGHQgEIAEOCAQgAQII
BSACAQgcAyAAAgcgAgIOEYDtBSABHQgIAwcBCAYAAggSdQ4FIAASgPEGIAESgPUOBSAAEoCBBSAA
EoD5BiABEoD9HAUAABKBAQYgARwSgQUFFRJRARwGIAEOEoEJBSAAEoCVBiAAHRKAkQkVEoCNAhKA
kQ4FIAIBHBgaEAICFRKAoQEeARUSgKEBHgAVEoCNAh4AHgEGCgISgJEOCgACDg4VEoChAQ4EBwES
PAUgABKBDQYgAB0SgJUJFRKAjQISgJUCGRABAhUSgKEBHgAVEoChAR4AFRKAjQIeAAIFCgESgJUQ
EAEBFRJRAR4AFRKAoQEeAAgVEoERARKAlQcVElEBEoCVCiABARUSgREBEwAFAAIODhwGFRJRARJp
DBABAR4AFRKAoQEeAAUgAQ4dAwgAARKAlRGBGQcgAQEdEoCVBRUSUQEOByACAQ4SgQ0EBwESQAgg
Ah0cEoCVAgUKARKAkQgVEoERARKAkQcVElEBEoCRCAcDCB0cEoCZBSACDggDBgACDg4dHAi3elxW
GTTgiQiJhF3NgIDMkQj6DO1KRVGnggg+DAjVnMPWVwIGAgcGFRI5Ag4OAgYIAwYSIAMGEiQDBhIQ
AwYSFAMGEhgDBhJ5BAYSgJUGBhUSUQEOBAYSgJ0EBhKAqQQGEoCtAwYSNAMGEjgKBhUSgI0CEoCR
DgoGFRKAjQISgJUCAwYdHAMGEjwFIAEBEgwIIAIRYRFhEWEEIAEODgsAAgESVRUSUQESVQkgARUR
WQERXQ4FIAIBDg4LIAMBDg4VElEBElUGMAEBAR4ABCABAQIJIAQBCA4ScRJ1CyAEAQgdCB0ScRJ1
BSABARJ5BAABDg4IIAAVEoChAQ4FIAEOEmkFAAASgJ0GAAEBEoCdCQACEoCVEoCdDgMAAAEFAAAS
gKkGAAEBEoCtBAAAEjQGIAEOEoCRBiABAhKAlQYgAQESgJUGIAEBEoCRAygADgMoAAIFKAASgIEF
CAASgJ0FCAASgKkFCAASgK0ECAASNAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRo
cm93cwEIAQACAAAAAAAoAQAjU0NfMGNjNmYzZjliZjQ1NDdlYzk0OTZlNWUyNjUwY2VkMDEAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxOQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4w
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAAAAAC0AAAAzsrv
vgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJz
aW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0
ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBB
RFC0AAAA1IYAAAAAAAAAAAAA7oYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOCGAAAAAAAAAAAA
AAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAA
AAAAAAAAAAAAAQAAAAAASAAAAFigAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkA
TwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAA
AAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEA
bgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBv
AAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIA
AQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwBy
AGkAcAB0AGkAbwBuAAAAAABTAEMAXwAwAGMAYwA2AGYAMwBmADkAYgBmADQANQA0ADcAZQBjADkA
NAA5ADYAZQA1AGUAMgA2ADUAMABjAGUAZAAwADEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBv
AG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
QwBfADAAYwBjADYAZgAzAGYAOQBiAGYANAA1ADQANwBlAGMAOQA0ADkANgBlADUAZQAyADYANQAw
AGMAZQBkADAAMQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8AMABjAGMANgBmADMAZgA5AGIAZgA0ADUANAA3AGUAYwA5ADQAOQA2AGUANQBl
ADIANgA1ADAAYwBlAGQAMAAxAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADAAYwBjADYAZgAzAGYAOQBiAGYANAA1ADQANwBlAGMAOQA0ADkANgBlADUAZQAy
ADYANQAwAGMAZQBkADAAMQAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AACAAAAMAAAAADcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0cc6f3f9bf4547ec9496e5e2650ced01</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::ClientID,User::PathInputFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">491b4ef13f00d58983468c884c59f95b</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">18ee3bcfb093d2d8019aca02b9403ad1b82900da</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Connections[HYCOHOLDConnection]"
                      connectionManagerID="Package.ConnectionManagers[NYCOHOLD]"
                      connectionManagerRefId="Package.ConnectionManagers[NYCOHOLD]"
                      name="HYCOHOLDConnection" />
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Reference Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Reference Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Loan Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Loan Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Principal Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Principal Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Interest Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Interest Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Other Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Other Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Service Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Service Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Delinquency Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Delinquency Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Chargeoff Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Chargeoff Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Description of Debt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Description of Debt"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Last Payment Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Last Payment Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Last Payment Amount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Last Payment Amount"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer First Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer First Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Last Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Last Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Customer Address"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Address 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Address 2"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer City"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer State"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Zip"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Home Phone Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Home Phone Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer POE Phone Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer POE Phone Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Mobile Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Mobile Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Email Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Email Address"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Interest Accrued]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Interest Accrued"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Non Interest Charges]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Non Interest Charges"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt of Pmts Made on Debt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt of Pmts Made on Debt"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Original Lender Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Original Lender Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[SSN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="SSN"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[SSN]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Date Of Birth]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="Date Of Birth"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Date Of Birth]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Bank Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="200"
                          cachedName="Bank Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Bank Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[bank_account_1st_4_digits]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="100"
                          cachedName="bank_account_1st_4_digits"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default]"
                      name="default"
                      synchronousInputId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD]"
                      hasSideEffects="true"
                      name="NYCOHOLD">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]"
                          name="RowData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Exceptions]"
                  endId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Flat File Source Output]"
                  endId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[NYCOHOLD]"
                  endId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input]"
                  name="NYCOHOLD"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Output 0]"
                  endId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{5966C786-EFAC-4769-9851-0607FA656A36}"
          DTS:ObjectName="{5966C786-EFAC-4769-9851-0607FA656A36}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::PathInputFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Foreach Downloaded File\Process placement File"
          TopLeft="71,58" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="354,203"
          Size="354,246"
          Id="Package\Foreach Downloaded File"
          TopLeft="45.5,49.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Downloaded File\Process placement File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Downloaded File\Process placement File\Flat File Source"
          TopLeft="95,68" />
        <NodeLayout
          Size="122,42"
          Id="Package\Foreach Downloaded File\Process placement File\Nycohold"
          TopLeft="552,363" />
        <NodeLayout
          Size="194,42"
          Id="Package\Foreach Downloaded File\Process placement File\Exception File"
          TopLeft="309,359.839285714286" />
        <NodeLayout
          Size="155,60"
          Id="Package\Foreach Downloaded File\Process placement File\Process records"
          TopLeft="98,176" />
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Downloaded File\Process placement File\Artiva File"
          TopLeft="82.571428571429,385.821428571429" />
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Exceptions]"
          TopLeft="200,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206,123.839285714286"
              Start="0,0"
              End="206,116.339285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.2948823207445" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.2948823207445"
                    Point2="0,50.2948823207445"
                    Point3="4,50.2948823207445" />
                  <mssgle:LineSegment
                    End="202,50.2948823207445" />
                  <mssgle:CubicBezierSegment
                    Point1="202,50.2948823207445"
                    Point2="206,50.2948823207445"
                    Point3="206,54.2948823207445" />
                  <mssgle:LineSegment
                    End="206,116.339285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="78.932421875,55.2948823207445,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Output 0]"
          TopLeft="148.785714285715,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,149.821428571429"
              Start="0,0"
              End="0,142.321428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,142.321428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,65.4439174107145,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[NYCOHOLD]"
          TopLeft="212.25,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="400.75,127"
              Start="0,0"
              End="400.75,119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.7653276955603" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.7653276955603"
                    Point2="0,43.7653276955603"
                    Point3="4,43.7653276955603" />
                  <mssgle:LineSegment
                    End="396.75,43.7653276955603" />
                  <mssgle:CubicBezierSegment
                    Point1="396.75,43.7653276955603"
                    Point2="400.75,43.7653276955603"
                    Point3="400.75,47.7653276955603" />
                  <mssgle:LineSegment
                    End="400.75,119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="174.3437890625,48.7653276955603,52.062421875,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Flat File Source Output]"
          TopLeft="173.5,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>