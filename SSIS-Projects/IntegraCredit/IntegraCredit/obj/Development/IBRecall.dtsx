<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/13/2020 12:18:11 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{BA0D63E5-0D6F-43CB-8BE9-40832610DF1C}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IBRecall"
  DTS:PackageType="5"
  DTS:VersionBuild="131"
  DTS:VersionGUID="{0D2FC5C9-7CA9-44D0-9AD2-B8C66271CAC3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ArtivaMTPayment]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{382F4730-5FE6-4DC2-B09C-140FE5903AA3}"
      DTS:ObjectName="ArtivaMTPayment">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PathArtiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\ArtivaMT-THIRDPROD-Integra Credit-0-87202040149PM.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{27BFA756-0D05-4BD0-A7C7-5A2F5BD0B389}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Flat File Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{CE8872D7-0E3D-4529-A85E-B0F88ED278DA}"
      DTS:ObjectName="Flat File Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\IntegraRecall_07142020_one_off_NOTCLOSED.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="30"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ClientReferenceNumber"
              DTS:DTSID="{5EAAB1A5-D568-4807-B54B-58066FCC5831}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="10"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="CloseNote"
              DTS:DTSID="{83DA2B1F-C106-413E-8E81-7A98CBBB8A04}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="32"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="IsClosed"
              DTS:DTSID="{7B4B08EB-D369-4D02-A5E8-19702BA575A5}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Recall Data]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{47CB4E14-8B5F-483B-A60E-17F9AF27713A}"
      DTS:ObjectName="Recall Data">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory]  +  @[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Account_#"
              DTS:DTSID="{3CB62B30-6E76-4D1B-B09C-EE7478308362}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Secondary_Account_#"
              DTS:DTSID="{C2FCDF2E-2CD0-403F-B394-ED2466EB8C54}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Recall_Reason"
              DTS:DTSID="{65F97DC8-3F76-440F-B5AA-EF7A26CD4E90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Recall_Code"
              DTS:DTSID="{6703BC74-5279-4F3D-8B0B-3802D47A2D67}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Recall_Date"
              DTS:DTSID="{0E54AE17-6D55-4A17-BF3B-23812C272A30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Keeper"
              DTS:DTSID="{9AEA7471-6F86-4DBD-8EC4-EF1103037DFC}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{C5433815-6C73-4AFB-BBAE-284067FA79C6}"
      DTS:ObjectName="ClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">IntegraCreditr</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{661B48D2-D23E-4084-8502-B0B61E605233}"
      DTS:ObjectName="CurrentFields">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Account_#,Secondary_Account_#,Recall_Reason,Recall_Code,Recall_Date,Keeper</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{11CDD593-1AD8-45CC-A566-7D30167991C0}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6E818D6E-71B3-4799-A4B8-1FADA8EF764F}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*IntegraRecall_*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{D9383B05-0D0D-4C6D-B996-D755F217DCF0}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8FB8EC95-C487-482F-94AA-3A8E8AD57A34}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DAC02F8A-0BBA-482D-A194-3C01364FA311}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE(LEFT(  (DT_WSTR, 99) @[System::StartTime]  ,19)&#xA;,&quot;:&quot;,&quot;&quot;),&quot;/&quot;,&quot;&quot;),&quot; &quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DateStamp">
      <DTS:VariableValue
        DTS:DataType="8">87202040149PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D6576B64-35B1-456C-AAF9-A0D24606F539}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="deletefile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E67E5E61-D378-47F7-9740-E8CA9D09DF06}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E43A6458-3ABB-4FE5-A1E4-0C2F3B406DC6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FD1A5E86-D551-48A9-97C5-00B39D2C06EC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{0D26A72E-7F25-4E0E-A062-E70EF6569267}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsCRLF">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E9AD5335-E0BE-419B-921D-128EF4AAFEDB}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsMapped">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3D68FB41-1B41-4702-8D7E-48C43DDA3167}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsQuoted">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66305935-8480-4437-8DFF-98E8B7147AA9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-&quot; + @[User::CurrentFile]  + &quot;-&quot; +  @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathArtiva">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\ArtivaMT-THIRDPROD-Integra Credit-0-87202040149PM.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33071420-F2E5-484B-82B5-B0132C150042}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{94A69D2C-3F53-467C-A49B-D0433DD226B3}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-WrongFormat.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WrongFormat">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-WrongFormat.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{cf425049-004a-44d8-87b4-0e7b9c584d30}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{031efd78-ba94-4dc4-a05c-a44df3acf95e}"
        DTS:ObjectName="{E135B64F-EF71-4DDD-8453-1A4A95126D0C}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Inbound\" />
            <FEFEProperty
              FileSpec="*IntegraRecall_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Delete_Empty_File"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="File System Task"
          DTS:DTSID="{E5DABD1A-0A04-402F-96F5-5AB7C8A8F980}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete_Empty_File"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::PathArtiva"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Process"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{02eb7753-c45b-415c-a6ce-e355801e75d0}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Process\Artiva MT Notes File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva MT Notes File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[ArtivaMTPayment]"
                      connectionManagerRefId="Package.ConnectionManagers[ArtivaMTPayment]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          lineageId="Package\Foreach Loop Container\Process\Proess Note.Outputs[ArtivaMT].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Loop Container\Process\Proess Note.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process\Get_Mt_Data"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Get_Mt_Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Recall Data]"
                      connectionManagerRefId="Package.ConnectionManagers[Recall Data]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account_#]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Account_#]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account_#]"
                          name="Account_#"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Secondary_Account_#]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Secondary_Account_#]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Secondary_Account_#]"
                          name="Secondary_Account_#"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Reason]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Reason]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Reason]"
                          name="Recall_Reason"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Code]"
                          name="Recall_Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Keeper]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Keeper]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Keeper]"
                          name="Keeper"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Date]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Date]"
                          name="Recall_Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Account_#]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Account_#" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Secondary_Account_#]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Secondary_Account_#" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Reason]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Recall_Reason" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Recall_Code" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Keeper]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Keeper" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Recall_Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Recall_Date" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process\Proess Note"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Proess Note"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ExceptionsBuffer ExceptionsBuffer;

    public ArtivaMTBuffer ArtivaMTBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

        if (null != ArtivaMTBuffer)
        {
            ArtivaMTBuffer.SetEndOfRowset();
            ArtivaMTBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ArtivaMT"))
            {
                ArtivaMTBuffer = new ArtivaMTBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 Artiva
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Artiva").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Linq;
using System.Collections.Generic;
using FileHelpers;
using System.Data.Odbc;
using System.Globalization;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _exceptionReportCreated = false;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    private Dictionary<string, string> trancodes;
    private Dictionary<string, string> recallcodes;
    //System.Data.Odbc.OdbcConnection ArtivaCOnnection;
    OdbcConnection conn;
    public override void PreExecute()
    {
        base.PreExecute();
        conn = new OdbcConnection(Connections.Artiva.ConnectionString);
        conn.Open();
        trancodes = new Dictionary<string, string> { { "DP", "DP" },
            { "DPNSF", "DPNSF" }, { "DBJ", "DBJ" },
            { "CRJ", "CRJ" } };
        recallcodes = new Dictionary<string, string>
        {
            {"AEX", "All Efforts Exhausted"},
{"BNK", "Bankruptcy"},
{"CEASE", "Cease and Desist"},
{"DISPUTE", "RP Disputes Debt"},
{"DSA", "Debt Settlemnet Company"},
{"FRAUD", "RP Claims Fraud"},
{"INCAR", "Incarcerated"},
{"PIF", "Paid in Full"},
{"SETTLE","Settled in Full"},
{"STATUTE", "Statute of Limitations"},
{"UNCOL", "Uncollectable"},
{"DECEASED", "Deceased"},
{"CCR", "Closed Client Request"},
{"COMPLT", "RP has filed a Complaint"},
{"SCRA", "Military"},
{"LIT", "Litigant"},
{"OOO", "Company out of Business"},
{"SMB", "Small Balance Account"}};

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (conn != null)
        {
            conn.Close();
            conn.Dispose();
        }
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
    }
    int InputRecordCount;
    FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203> FHE = new FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203>();
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {

            InputRecordCount++;
            //ArtivaCOnnection = Connections.Artiva.AcquireConnection(null) as System.Data.Odbc.OdbcConnection;

            if (!recallcodes.ContainsKey(Row.RecallCode.Trim()))
            {
                _exceptionReportCreated = true;
                ExceptionsBuffer.AddRow();
                ExceptionsBuffer.Data = string.Format("Invalid recall code!  Row Number:{0} Client Reference Number:{1} .  Update Skipped", InputRecordCount, Row.Account);
                return;

            }

            string Aracid = string.Empty;
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARACID FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') WHERE ARACCLACCT = '{0}'", Row.Account.Trim()), conn, null))
            {
                if (conn.State != ConnectionState.Open)
                    conn.Open();

                cmd.CommandTimeout = 300;

                var aracid = cmd.ExecuteScalar();

                if (aracid == DBNull.Value || aracid == null || aracid.ToString() == "")
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Unable to find account!  Row Number:{0} Client Reference Number:{1} .  Update Skipped", InputRecordCount, Row.Account);
                    return;
                }
                else
                {
                    Aracid = aracid.ToString();
                }
            }

            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARCLID FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT on ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') left join arcancel on araccancid = arcancid where ARACCLACCT='{0}' AND ISNULL(araccancid,'active') not in('RETURN','DUPE')", Row.Account.Trim()), conn, null))
            {
                if (conn.State != ConnectionState.Open)
                    conn.Open();

                cmd.CommandTimeout = 300;
                var check = cmd.ExecuteScalar();

                if (!(check == DBNull.Value || check == null || check.ToString() == ""))
                {
                    DateTime? d = getDate(Row.RecallDate); ;

                    CloseAccount_C c = new CloseAccount_C();
                    c.AccountId = Aracid;
                    c.CloseCode = "RETURN";
                    c.OrigArtivaCancelDate = d;

                    ClientRecallInfo_201 rec201 = new ClientRecallInfo_201();
                    rec201.AccountId = Aracid;
                    rec201.DateOfRecall = d;
                    rec201.RecallCode = Row.RecallCode;
                    rec201.RecallReason = Row.RecallReason;
                    rec201.ResendRecall = false;
                    rec201.ClientRecallFileName = "AIM" + DateTime.Now.ToString("yyyyMMddHHmmss") + "_" + Variables.CurrentFile;

                    var recC = new List<CloseAccount_C>() { c };
                    var recC201 = new List<ClientRecallInfo_201>() { rec201 };
                    for (int i = 0; i < recC.Count; i++)
                        AddPlacementRow(recC[i]);
                    for (int i = 0; i < recC201.Count; i++)
                        AddPlacementRow(recC201[i]);
                } else
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Could not recall account already inactive!  Artiva Account Number:{0} Client Reference Number:{1} .  Update Skipped", Aracid, Row.Account);
                    return;

                }
            }




        }
        catch (Exception ex)
        {
            bool cancel = false;
            ComponentMetaData.FireError(10, "Exception in notes script", ex.Message, "", 0, out cancel);
            if (ex.InnerException != null)
            {
                ComponentMetaData.FireError(10, "Exception inner exception", ex.InnerException.Message, "", 0, out cancel);
            }
            ComponentMetaData.FireError(10, "Exception StackTrace", ex.StackTrace, "", 0, out cancel);
            return;
        }
    }

    private void WriteExceptionMessage(string msg, string data)
    {
        _exceptionReportCreated = true;
        ExceptionsBuffer.AddRow();
        ExceptionsBuffer.Data = msg + "  " + data;
    }

    private DateTime? getDate(string d)
    {

        CultureInfo enUS = new CultureInfo("en-US");
        DateTime dateValue;
        bool isdate = DateTime.TryParseExact(d, "MMddyyyy", enUS,
                          DateTimeStyles.None, out dateValue);

        if (isdate)
            return dateValue;
        else
            return null;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

          ArtivaMTBuffer.AddRow();
          ArtivaMTBuffer.Data = recordString.ToUpper();
    }
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Account
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Account_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String SecondaryAccount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool SecondaryAccount_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String RecallReason
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool RecallReason_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String RecallCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool RecallCode_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String Keeper
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool Keeper_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String RecallDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool RecallDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ArtivaMTBuffer: ScriptBuffer

{
    public ArtivaMTBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Settings.get_Default():SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Sett" +
    "ings")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A8865E69-B834-4E85-93DB-5BBD5E761F1B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4ac8cb4c75d34a55855dc106f555b957</RootNamespace>
    <AssemblyName>SC_4ac8cb4c75d34a55855dc106f555b957</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:DisplayName>
		<msb:ProjectId>{DA30ED14-06B8-4F0B-8EF6-6B34AC9FB2E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_4ac8cb4c75d34a55855dc106f555b957.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAJibLV8AAAAAAAAAAOAAIiALATAAADYAAAAIAAAAAAAANlQA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAORTAABPAAAAAGAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPDQAAAAgAAAANgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAYAAAAAYAAAA4AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAPgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
VAAAAAAAAEgAAAACAAUAYCoAAMwoAAABAAAAAAAAACxTAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBQCjAQAAAAAAAAIoEAAACgICewcAAARvLQAABm8RAAAK
cxIAAAp9BAAABAJ7BAAABG8TAAAKAnMUAAAKJXIBAABwcgEAAHBvFQAACiVyBwAAcHIHAABwbxUA
AAolchMAAHByEwAAcG8VAAAKJXIbAABwchsAAHBvFQAACn0CAAAEAnMUAAAKJXIjAABwcisAAHBv
FQAACiVyVwAAcHJfAABwbxUAAAolcnUAAHBygQAAcG8VAAAKJXKjAABwcrMAAHBvFQAACiVy1QAA
cHLdAABwbxUAAAolcg0BAHByGQEAcG8VAAAKJXI5AQBwckUBAHBvFQAACiVyXwEAcHJnAQBwbxUA
AAolcoEBAHByjwEAcG8VAAAKJXKvAQBwcr8BAHBvFQAACiVy7QEAcHL5AQBwbxUAAAolchUCAHBy
JwIAcG8VAAAKJXI5AgBwckECAHBvFQAACiVybQIAcHJ7AgBwbxUAAAolcq0CAHBytwIAcG8VAAAK
JXLJAgBwctECAHBvFQAACiVy4wIAcHLrAgBwbxUAAAolchsDAHByIwMAcG8VAAAKfQMAAAQqABMw
AQBCAAAAAAAAAAIoFgAACgJ7BAAABCwWAnsEAAAEbxcAAAoCewQAAARvGAAACgJ7AQAABC0VAnsH
AAAEbywAAAZvEQAACigZAAAKKgAAGzAHAF4DAAABAAARAgJ7BQAABBdYfQUAAAQCewMAAAQDbw8A
AAZvGgAACm8bAAAKLT0CF30BAAAEAnsJAAAEbxoAAAYCewkAAARyTwMAcAJ7BQAABIwrAAABA28J
AAAGKBwAAApvGAAABt36AgAAfh0AAAoKcvYDAHADbwkAAAZvGgAACigeAAAKAnsEAAAEFHMfAAAK
CwJ7BAAABG8gAAAKFy4LAnsEAAAEbxMAAAoHICwBAABvIQAACgdvIgAACgwIfiMAAAouFQgsEghv
JAAACnJJBQBwKCUAAAosPQIXfQEAAAQCewkAAARvGgAABgJ7CQAABHJLBQBwAnsFAAAEjCsAAAED
bwkAAAYoHAAACm8YAAAG3U0CAAAIbyQAAAoK3goHLAYHbyYAAArccvgFAHADbwkAAAZvGgAACige
AAAKAnsEAAAEFHMfAAAKDQJ7BAAABG8gAAAKFy4LAnsEAAAEbxMAAAoJICwBAABvIQAACglvIgAA
ChMEEQR+IwAACjsnAQAAEQQ5IAEAABEEbyQAAApySQUAcCglAAAKOgoBAAACA28TAAAGKAUAAAYT
BXMnAAAKEwYRBgZ9KAAAChEGcg8IAHB9KQAAChEGEQV9KgAACnMrAAAKEwcRBwZ9LAAAChEHEQV9
LQAAChEHA28PAAAGfS4AAAoRBwNvDQAABn0vAAAKEQcWfTAAAAoRB3IdCABwKDEAAAoTChIKciUI
AHAoMgAACnJDCABwAnsIAAAEby8AAAYoMwAACn00AAAKczUAAAolEQZvNgAAChMIczcAAAolEQdv
OAAAChMJFhMLKxUCEQgRC285AAAKKAEAACsRCxdYEwsRCxEIbzoAAAoy4BYTDCsVAhEJEQxvOwAA
CigCAAArEQwXWBMMEQwRCW88AAAKMuArMwIXfQEAAAQCewkAAARvGgAABgJ7CQAABHJHCABwBgNv
CQAABigcAAAKbxgAAAbdhgAAAN4KCSwGCW8mAAAK3N54Ew0WEw4CKD0AAAofCnIwCQBwEQ1vPgAA
CnJJBQBwFhIObz8AAAoRDW9AAAAKLCYCKD0AAAofCnJkCQBwEQ1vQAAACm8+AAAKckkFAHAWEg5v
PwAACgIoPQAACh8KcpgJAHARDW9BAAAKckkFAHAWEg5vPwAACt4AKgAAQUwAAAIAAACLAAAAjgAA
ABkBAAAKAAAAAAAAAAIAAABFAQAAlAEAANkCAAAKAAAAAAAAAAAAAAAAAAAA5QIAAOUCAAB4AAAA
GQAAAaoCF30BAAAEAnsJAAAEbxoAAAYCewkAAAQDcsIJAHAEKEIAAApvGAAABioAEzAFAC0AAAAC
AAARcsgJAHBzQwAACgoDctQJAHAGFhIBKEQAAAosBwdzRQAACioSAv4VBAAAGwgqAAAAEzAFAK8A
AAADAAARc0YAAAolA29HAAAKKAMAACsKBheNNgAAASUWHyydb0kAAAoWmgZySQUAcG9KAAAKcuYJ
AHBySQUAcG9KAAAKcvIJAHBySQUAcG9KAAAKcvYJAHBySQUAcG9KAAAKcvoJAHBySQUAcG9KAAAK
cv4JAHBySQUAcG9KAAAKcgIKAHBySQUAcG9KAAAKKEsAAAosASoCewoAAARvIAAABgJ7CgAABAZv
TAAACm8eAAAGKkoCc00AAAp9BgAABAIoIwAABioqAgMEBShOAAAKKlICe08AAAoCe1AAAAoWlG9R
AAAKKiICFihSAAAKKlICe08AAAoCe1AAAAoXlG9RAAAKKiICFyhSAAAKKlICe08AAAoCe1AAAAoY
lG9RAAAKKiICGChSAAAKKlICe08AAAoCe1AAAAoZlG9RAAAKKiICGShSAAAKKlICe08AAAoCe1AA
AAoalG9RAAAKKiICGihSAAAKKlICe08AAAoCe1AAAAoblG9RAAAKKiICGyhSAAAKKh4CKFMAAAoq
HgIoVAAACiomAhYDKFUAAAoqWgMsCAIWKFYAAAoqcgYKAHBzVwAACnoeAihYAAAKKh4CKFkAAAoq
fgIoWgAACgICcysAAAZ9BwAABAICcy4AAAZ9CAAABCoAABMwBABPAAAAAAAAAARyowoAcBpvWwAA
CiwVAgUCAyhcAAAKDgRzCAAABm8pAAAGBW9dAAAKLCMCAnsLAAAEF1h9CwAABAJ7CwAABBczDAJv
JQAABgIoJgAABioGKtYCewkAAAQsEgJ7CQAABG8bAAAGAhR9CQAABAJ7CgAABCwSAnsKAAAEbyEA
AAYCFH0KAAAEKgATMAUAZwAAAAQAABEWCitYBAaUDgRyswoAcCheAAAKMxkCBQaaAgQGlChcAAAK
DgRzFwAABn0JAAAEBAaUDgRyyQoAcCheAAAKMxkCBQaaAgQGlChcAAAKDgRzHQAABn0KAAAEBhdY
CgYDMqQCbygAAAYqSisHAgNvKgAABgNvFQAABi3xKjoCKF8AAAoCA30MAAAEKoICewwAAARvPQAA
Cm9gAAAKctsKAHBvYQAACm9iAAAKKoICewwAAARvPQAACm9gAAAKcgMLAHBvYQAACm9iAAAKKjoC
KF8AAAoCA30NAAAEKpYCew0AAARvYwAACnIRCwBwb2QAAAooZQAACm9mAAAKdCoAAAEqHgIoXwAA
Ciqufg4AAAQtHnIpCwBw0AkAAAIoZwAACm9oAAAKc2kAAAqADgAABH4OAAAEKhp+DwAABCoeAoAP
AAAEKhp+EAAABCoeAihqAAAKKi5zNQAABoAQAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAmAsAACN+AAAEDAAAuA0AACNTdHJpbmdzAAAAALwZAACcCwAAI1VTAFglAAAQ
AAAAI0dVSUQAAABoJQAAZAMAACNCbG9iAAAAAAAAAAIAAAFXFaIJCR0AAAD6ATMAFgAAAQAAAEEA
AAAKAAAAEAAAADYAAAAfAAAAagAAABAAAAAEAAAABwAAABYAAAAXAAAABgAAAAEAAAAJAAAAAQAA
AAEAAAADAAAAAQAAAAAAqwYBAAAAAAAGAFQFdwoGAOgFdwoGAKAEPgoPAOsKAAAGAM0E8AcGADcF
8AcGABgF8AcGAM8F8AcGAHQF8AcGAI0F8AcGAOQE8AcGAP8EKQYKAKgFYAMGAPkA2gEOAC8IyQES
ANYArQsWAAYBUQoOAEgCyQEGAPcLiQcGAL0AiQcGAEoDiQcWAFIBUQoWAKgAUQoGAOwA2gEGAHkI
iQcGALgIywcWAK4DUQoKAIIJYAMaAGIJYAMKAMQIYAMKAE0MYAMeAGYAzAkGAIMEPgoGAJMJlwoi
ADwEewYiALQEewYiAMcDtgcGAGgEdwoOACIIgwgiAFMMewYGAAsDeQEGAHAGiQcGAPMAiQcOAOAH
yQEOAFEEhQEOAD4CgwgGANMGiQcGANACiQcmAAEA9AkGADYJiQcGAFULywcSAFMDrQsGAMgA2gEG
ACMJiQcGAFYIiQcGAKcIiQcmACoA9AkmAE0A9AkeAH8AzAkeABoAzAl/AB4NAAAeAJAAzAkGAIED
iQcGANwCiQcGAJwN8AcAAAAASQEAAAAAAQABAAEAEACmBwAAGAABAAEAAQAQAEYJAABxAAcACAAB
ABAAcQkAAHEABwAXAAEAEABTCQAAcQAHAB0AAQAQAC8MAAB9AAcAIwABABAAmQsAAE0ADAArAAEA
EABLCwAATQANAC4AAAAQAJ4KEAtNAA4AMAAAARAAiQsQC5UAEAA0AAEAJgKYAAEABgvxAQEA+grx
AQEAsQf5AQEAZwz9AQEAdQEAAgYAmQsIAgYASwsMAgYAcQkQAgYAUwkUAgEAAwL9AQEAPQwYAgEA
PQwYAhEAlQccAhEAngMhAhEAhQIlAlAgAAAAAMYABgYGAAEAACIAAAAAxgARBgYAAQBQIgAAAADG
AG0NKQIBAAgmAAAAAIEAugIvAgIANCYAAAAAgQAqBDUCBABwJgAAAACBAF0NPwIFACsnAAAAAIYY
JwoGAAYAPicAAAAAhhgnCkoBBgBJJwAAAACGCHgMHAAJAF4nAAAAAIYIQAdmAQkAZycAAAAAhgiE
DBwACQB8JwAAAACGCFMHZgEJAIUnAAAAAIYIlggcAAkAmicAAAAAhggWB2YBCQCjJwAAAACGCJ8C
HAAJALgnAAAAAIYI6gZmAQkAwScAAAAAhgi5CRwACQDWJwAAAACGCC4HZgEJAN8nAAAAAIYIGwQc
AAkA9CcAAAAAhggAB2YBCQD9JwAAAACGAIQNZgEJAAUoAAAAAIYAEQxmAQkAPicAAAAAhhgnCkoB
CQANKAAAAACGCJEBEAAMABcoAAAAAIYI2gZGAg0ALigAAAAAhgBWDQYADgA2KAAAAACGAA4MBgAO
AAUoAAAAAIYAEQxmAQ4APicAAAAAhhgnCkoBDgANKAAAAACGCJEBEAARABcoAAAAAIYI2gZGAhIA
LigAAAAAhgBWDQYAEwA2KAAAAACGAA4MBgATAAUoAAAAAIYAEQxmARMAPigAAAAAhhgnCgYAEwBg
KAAAAADGAPEMSwITALsoAAAAAMYBuQsGABcAvSgAAAAAgQASAgYAFwD0KAAAAADGAP4MVQIXALso
AAAAAMYBxwsGABsAZykAAAAAxgHqDCkCGwC7KAAAAADGAW0NKQIcAHopAAAAAIYYJwphAh0AiSkA
AAAAhgg+CJYBHgCqKQAAAACGCLUBlgEeAMspAAAAAIYYJwphAh4A2ikAAAAAhggAAxwAHwAAKgAA
AACDGCcKBgAfAAgqAAAAAJMIjwlnAh8ANCoAAAAAkwiGA20CHwA7KgAAAACTCJIDcgIfAEMqAAAA
AJYIIwx4AiAASioAAAAAhhgnCgYAIABSKgAAAACRGC0KfQIgAAAAAQCIDQAAAQB3BgAAAgCwAQAA
AQBZAgAAAQBUAgAAAQCICQAAAgBkCwAAAwDSCAAAAQCICQAAAgBkCwAAAwDSCAAAAQAjBgAAAQAj
BgAAAQCICQAAAgBkCwAAAwDSCAAAAQAjBgAAAQAjBgAAAQBhAQAAAgAlAwAAAwCICQAABADSCAAA
AQC/CwAAAgA0CgAAAwClCwAABADSCAAAAQCICQAAAQCIDQAAAQBTDAAAAQBTDAAAAQAjBgkAJwoB
ABEAJwoGABkAJwoKACkAJwoQADEAJwoQADkAJwoQAEEAJwoQAEkAJwoQAFEAJwoQAFkAJwoQAGEA
JwoQAGkAJwoGAAkBJwoGACEBJwoVADEBJwoGAPkABgYGAAEBTwYcAHkAJwoQADkBoQcGAAwAJwoG
AAwA/wEnAPkAEQYGADkB3wMGAEEB/gMGAEkBYQQvAFEBkAccAAwAjA1bAFEB4gthAFEBsQ1oAFEB
4gtrAJEAJwpxADkBMgR7AHEB1wwBAHEBKAmBAHkBHQaFAJkAZAYcAFEBpQ2KAIEB/gMGALEAJwoG
ALEA9QFoALEAlQJoALEABgSQALkAJwoGALkA9QFoALkAngaQALkAowJoALkAmghoALkAkQaYAKkA
Tg2bAKkAZAagAFEB2wulALkAEANoABQAJwoGABQA/wG0ABwAJwoGABwA/wG0ABQAdwfBABQAXQzM
ABwAdwfBABwAXQzMAPkAmgHVAMkArgIcAIkBHQrbAMkAcAjmAMkAdgIcAFEB2wvrANEAJwoQAKkA
6Qv/ACQAJwq0ACwAJwoGACwA/wG0AKEBQwYgAVEBHQwxAVEBWwI4AVEBYwI+AVEBxAkcADQAJwoG
AOEAJwpKAeEAiAlUAeEAZAtYAekAbQZcAeEAaAdhAeEAhA1mAeEAEQxmAeEAgAdqAeEAbwcBALkB
JwoQAOEAVg0GAOEADgwGAPkAJwoGAFEBkgtwAfkAeAt4AekA/gtmAfkAaQGCAZkAJwoGAIkBAgiJ
AckBLwOPAdEBowmWAfkAPwucAdkBdweiAfkAOQ2pAeEBCg2vAfkB7gK2AfkBmA2/AREBJwrFASkB
JwoGAC4ACwCfAi4AEwCoAi4AGwDHAi4AIwDQAi4AKwD5Ai4AMwD5Ai4AOwD5Ai4AQwDQAi4ASwD/
Ai4AUwD5Ai4AWwAWA0MAYwBeAyMBawBeAwECewBeA4kCcwDHAqkCcwDHAjQA8gAVAX4BAwABAAQA
DQAFAA8ABwARAAgAEwAJABQACgAWAAAAkQyBAgAAYAeFAgAAiAyBAgAAVweFAgAAmgiBAgAAGgeF
AgAAowKBAgAA7gaFAgAAvQmBAgAAMgeFAgAAHwSBAgAABAeFAgAAqwGBAgAA3gaFAgAAqwGBAgAA
3gaFAgAAQgiJAgAAuQGJAgAABAOBAgAAkwmPAgAApgOVAgAAJwyaAgIACQADAAIACgAFAAIACwAH
AAIADAAJAAIADQALAAIADgANAAIADwAPAAIAEAARAAIAEQATAAIAEgAVAAIAEwAXAAIAFAAZAAEA
GAAbAAEAGQAdAAEAHgAfAAEAHwAhAAIALAAjAAIALQAlAAIALwAnAAIAMQApAAIAMgArAAEAMwAr
AAIANAAtACAArQC6AA4BGQFDAQSAAAABAAAAZB3kXQAAAAAAACUBAAAEAAAAAAAAAAAAAADNAcAB
AAAAAAsAAAAAAAAAAAAAANYBmQwAAAAABAAAAAAAAAAAAAAAzQGFAQAAAAADAAIABwAAAAAAAADf
Aa0LAAAAAAEAAQAAAAAAAAAAAOgB5QMAAAAACwAAAAAAAAAAAAAA1gG2DAAAAAALAAAAAAAAAAAA
AADWAdwIAAAAAAQAAAAAAAAAAAAAAM0BiQcAAAAACwAAAAAAAAAAAAAA1gH/CAAAAAAAAAAAAQAA
AKgKAAAAAAAADQCDAQwAxwAMANAAkQAsAQEAbQAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAA
SURUU1ZhcmlhYmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1
bnRpbWVDb25uZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVz
MTAwAElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAENsaWVudFJlY2FsbEluZm9fMjAxAE51bGxhYmxl
YDEASUVudW1lcmFibGVgMQBEZWxpbWl0ZWRGaWxlRW5naW5lYDEATGlzdGAxAEludDMyAERpY3Rp
b25hcnlgMgBBY2NvdW50RnJlZUZvcm1UZXh0TW50T25seV8yMDMAU0NfNGFjOGNiNGM3NWQzNGE1
NTg1NWRjMTA2ZjU1NWI5NTcAPE1vZHVsZT4AQ2xvc2VBY2NvdW50X0MASW5wdXRJRABHZXRPdXRw
dXRJRABGSEUAU3lzdGVtLklPAFQAU3lzdGVtLkRhdGEAc2V0X0RhdGEAZ2V0X0NvbXBvbmVudE1l
dGFEYXRhAGRhdGEAZ2V0X0FydGl2YQBtc2NvcmxpYgBTeXN0ZW0uRGF0YS5PZGJjAFN5c3RlbS5D
b2xsZWN0aW9ucy5HZW5lcmljAEFjY291bnRJZABBZGQASW5wdXRzRmluaXNoZWQATWFya091dHB1
dHNGaW5pc2hlZABfZXhjZXB0aW9uUmVwb3J0Q3JlYXRlZABEYkNvbW1hbmQAT2RiY0NvbW1hbmQA
cmVjb3JkAFJlcGxhY2UASXNOdWxsT3JXaGl0ZVNwYWNlAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJ
bnN0YW5jZQBDbG9zZUNvZGUAZ2V0X1JlY2FsbENvZGUAZ2V0X01lc3NhZ2UAV3JpdGVFeGNlcHRp
b25NZXNzYWdlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AGdldF9DdXJyZW50RmlsZQBDbGllbnRSZWNhbGxGaWxlTmFtZQBJbnB1dE5hbWUAR2V0UnVudGlt
ZUNvbm5lY3Rpb25CeU5hbWUARGF0ZVRpbWUAQ29tbW9uRW5naW5lAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0
dXJlAEdlbmVyYWxQdXJwb3NlUmVjb3JkQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9z
ZQBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UARGlzcG9zZQBPcmlnQXJ0aXZhQ2FuY2VsRGF0ZQBn
ZXRfUmVjYWxsRGF0ZQBnZXREYXRlAGdldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb25u
ZWN0aW9uU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9u
VXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRy
aWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBU
YXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0
ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmli
dXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUA
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBXcml0ZVN0cmluZwBnZXRfQ29u
bmVjdGlvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAbXNnAFN5c3RlbS5Db21wb25lbnRNb2Rl
bABSZXNlbmRSZWNhbGwARGF0ZU9mUmVjYWxsAFNDXzRhYzhjYjRjNzVkMzRhNTU4NTVkYzEwNmY1
NTViOTU3LmRsbABEQk51bGwAc2V0X0RhdGFfSXNOdWxsAGdldF9SZWNhbGxDb2RlX0lzTnVsbABn
ZXRfUmVjYWxsRGF0ZV9Jc051bGwAZ2V0X1JlY2FsbFJlYXNvbl9Jc051bGwAZ2V0X0tlZXBlcl9J
c051bGwAZ2V0X0FjY291bnRfSXNOdWxsAGdldF9TZWNvbmRhcnlBY2NvdW50X0lzTnVsbABTZXRO
dWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBUcmltAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0
TWFpbgBjb25uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAE9kYmNU
cmFuc2FjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0
aW9uAERiQ29ubmVjdGlvbgBPZGJjQ29ubmVjdGlvbgBnZXRfRXhjZXB0aW9uQ29ubmVjdGlvbgBJ
bnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5D
b21tb24AZ2V0X1JlY2FsbFJlYXNvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWlj
cm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAAQ2hhcgBFeGVjdXRlU2NhbGFyAElGb3Jt
YXRQcm92aWRlcgBJbnB1dDBCdWZmZXIAQXJ0aXZhTVRCdWZmZXIAUGlwZWxpbmVCdWZmZXIARXhj
ZXB0aW9uc0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ29ubmVj
dGlvbk1hbmFnZXIAZ2V0X0tlZXBlcgBUb1VwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1
bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5XcmFwcGVyAEZp
cmVFcnJvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBSR1MuQXJ0
aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180YWM4Y2I0Yzc1ZDM0YTU1ODU1ZGMxMDZmNTU1Yjk1
Ny5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAcmVjYWxsY29k
ZXMAdHJhbmNvZGVzAFNDXzRhYzhjYjRjNzVkMzRhNTU4NTVkYzEwNmY1NTViOTU3LlByb3BlcnRp
ZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAERhdGVUaW1lU3R5bGVzAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQnVmZmVycwBG
aWxlSGVscGVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091dHB1dFJvd3MAQ29uY2F0AEZvcm1h
dABUcnlQYXJzZUV4YWN0AE9iamVjdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQAU3Bs
aXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGdldF9Db3VudABJbnB1dFJlY29yZENvdW50AGdldF9BY2NvdW50AGdldF9TZWNvbmRhcnlB
Y2NvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5Q
aXBlbGluZUhvc3QAc2V0X0NvbW1hbmRUaW1lb3V0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVP
dXRwdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRDb21wb25lbnRFdmFsQ29udGV4dABnZXRf
RXZhbHVhdG9yQ29udGV4dABnZXRfTm93AEFkZFJvdwBBZGRQbGFjZW1lbnRSb3cASW5wdXQwX1By
b2Nlc3NJbnB1dFJvdwBOZXh0Um93AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0
eQBFbXB0eQAAAAVEAFAAAAtEAFAATgBTAEYAAAdEAEIASgAAB0MAUgBKAAAHQQBFAFgAACtBAGwA
bAAgAEUAZgBmAG8AcgB0AHMAIABFAHgAaABhAHUAcwB0AGUAZAAAB0IATgBLAAAVQgBhAG4AawBy
AHUAcAB0AGMAeQAAC0MARQBBAFMARQAAIUMAZQBhAHMAZQAgAGEAbgBkACAARABlAHMAaQBzAHQA
AA9EAEkAUwBQAFUAVABFAAAhUgBQACAARABpAHMAcAB1AHQAZQBzACAARABlAGIAdAAAB0QAUwBB
AAAvRABlAGIAdAAgAFMAZQB0AHQAbABlAG0AbgBlAHQAIABDAG8AbQBwAGEAbgB5AAALRgBSAEEA
VQBEAAAfUgBQACAAQwBsAGEAaQBtAHMAIABGAHIAYQB1AGQAAAtJAE4AQwBBAFIAABlJAG4AYwBh
AHIAYwBlAHIAYQB0AGUAZAAAB1AASQBGAAAZUABhAGkAZAAgAGkAbgAgAEYAdQBsAGwAAA1TAEUA
VABUAEwARQAAH1MAZQB0AHQAbABlAGQAIABpAG4AIABGAHUAbABsAAAPUwBUAEEAVABVAFQARQAA
LVMAdABhAHQAdQB0AGUAIABvAGYAIABMAGkAbQBpAHQAYQB0AGkAbwBuAHMAAAtVAE4AQwBPAEwA
ABtVAG4AYwBvAGwAbABlAGMAdABhAGIAbABlAAARRABFAEMARQBBAFMARQBEAAARRABlAGMAZQBh
AHMAZQBkAAAHQwBDAFIAACtDAGwAbwBzAGUAZAAgAEMAbABpAGUAbgB0ACAAUgBlAHEAdQBlAHMA
dAAADUMATwBNAFAATABUAAAxUgBQACAAaABhAHMAIABmAGkAbABlAGQAIABhACAAQwBvAG0AcABs
AGEAaQBuAHQAAAlTAEMAUgBBAAARTQBpAGwAaQB0AGEAcgB5AAAHTABJAFQAABFMAGkAdABpAGcA
YQBuAHQAAAdPAE8ATwAAL0MAbwBtAHAAYQBuAHkAIABvAHUAdAAgAG8AZgAgAEIAdQBzAGkAbgBl
AHMAcwAAB1MATQBCAAArUwBtAGEAbABsACAAQgBhAGwAYQBuAGMAZQAgAEEAYwBjAG8AdQBuAHQA
AIClSQBuAHYAYQBsAGkAZAAgAHIAZQBjAGEAbABsACAAYwBvAGQAZQAhACAAIABSAG8AdwAgAE4A
dQBtAGIAZQByADoAewAwAH0AIABDAGwAaQBlAG4AdAAgAFIAZQBmAGUAcgBlAG4AYwBlACAATgB1
AG0AYgBlAHIAOgB7ADEAfQAgAC4AIAAgAFUAcABkAGEAdABlACAAUwBrAGkAcABwAGUAZAAAgVFT
AEUATABFAEMAVAAgAEEAUgBBAEMASQBEACAARgBSAE8ATQAgACUAUwBUAEEAUgBUAFQAQQBCAEwA
RQAgAEEAUgBDAEwASQBFAE4AVAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIAQQBDAEMATwBV
AE4AVAAgAE8ATgAgAEEAUgBDAEwASQBEACAAPQAgAEEAUgBBAEMAQwBMAFQASQBEACAAQQBOAEQA
IABBAFIAQwBMAEkARAAgAEkATgAgACgAJwBJAE4AVABFAEcAMQAnACwAJwBJAE4AVABFAEcAMgAn
ACwAJwBJAE4AVABFAEcAMwAnACwAJwBJAE4AVABFAEcANAAnACwAJwBJAE4AVABFAEcANQAnACkA
IABXAEgARQBSAEUAIABBAFIAQQBDAEMATABBAEMAQwBUACAAPQAgACcAewAwAH0AJwABAQCAq1UA
bgBhAGIAbABlACAAdABvACAAZgBpAG4AZAAgAGEAYwBjAG8AdQBuAHQAIQAgACAAUgBvAHcAIABO
AHUAbQBiAGUAcgA6AHsAMAB9ACAAQwBsAGkAZQBuAHQAIABSAGUAZgBlAHIAZQBuAGMAZQAgAE4A
dQBtAGIAZQByADoAewAxAH0AIAAuACAAIABVAHAAZABhAHQAZQAgAFMAawBpAHAAcABlAGQAAIIV
UwBFAEwARQBDAFQAIABBAFIAQwBMAEkARAAgAEYAUgBPAE0AIAAlAFMAVABBAFIAVABUAEEAQgBM
AEUAIABBAFIAQwBMAEkARQBOAFQAIABJAE4ATgBFAFIAIABKAE8ASQBOACAAQQBSAEEAQwBDAE8A
VQBOAFQAIABvAG4AIABBAFIAQwBMAEkARAAgAD0AIABBAFIAQQBDAEMATABUAEkARAAgAEEATgBE
ACAAQQBSAEMATABJAEQAIABJAE4AIAAoACcASQBOAFQARQBHADEAJwAsACcASQBOAFQARQBHADIA
JwAsACcASQBOAFQARQBHADMAJwAsACcASQBOAFQARQBHADQAJwAsACcASQBOAFQARQBHADUAJwAp
ACAAbABlAGYAdAAgAGoAbwBpAG4AIABhAHIAYwBhAG4AYwBlAGwAIABvAG4AIABhAHIAYQBjAGMA
YQBuAGMAaQBkACAAPQAgAGEAcgBjAGEAbgBjAGkAZAAgAHcAaABlAHIAZQAgAEEAUgBBAEMAQwBM
AEEAQwBDAFQAPQAnAHsAMAB9ACcAIABBAE4ARAAgAEkAUwBOAFUATABMACgAYQByAGEAYwBjAGEA
bgBjAGkAZAAsACcAYQBjAHQAaQB2AGUAJwApACAAbgBvAHQAIABpAG4AKAAnAFIARQBUAFUAUgBO
ACcALAAnAEQAVQBQAEUAJwApAAENUgBFAFQAVQBSAE4AAAdBAEkATQAAHXkAeQB5AHkATQBNAGQA
ZABIAEgAbQBtAHMAcwAAA18AAIDnQwBvAHUAbABkACAAbgBvAHQAIAByAGUAYwBhAGwAbAAgAGEA
YwBjAG8AdQBuAHQAIABhAGwAcgBlAGEAZAB5ACAAaQBuAGEAYwB0AGkAdgBlACEAIAAgAEEAcgB0
AGkAdgBhACAAQQBjAGMAbwB1AG4AdAAgAE4AdQBtAGIAZQByADoAewAwAH0AIABDAGwAaQBlAG4A
dAAgAFIAZQBmAGUAcgBlAG4AYwBlACAATgB1AG0AYgBlAHIAOgB7ADEAfQAgAC4AIAAgAFUAcABk
AGEAdABlACAAUwBrAGkAcABwAGUAZAAAM0UAeABjAGUAcAB0AGkAbwBuACAAaQBuACAAbgBvAHQA
ZQBzACAAcwBjAHIAaQBwAHQAADNFAHgAYwBlAHAAdABpAG8AbgAgAGkAbgBuAGUAcgAgAGUAeABj
AGUAcAB0AGkAbwBuAAApRQB4AGMAZQBwAHQAaQBvAG4AIABTAHQAYQBjAGsAVAByAGEAYwBlAAAF
IAAgAAALZQBuAC0AVQBTAAERTQBNAGQAZAB5AHkAeQB5AAALQwBPAE0AQQBLAAADLAAAAy4AAAMw
AAADLwAAA04AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAg
AGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEA
bAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBu
AHAAdQB0ACAAMAAAFUUAeABjAGUAcAB0AGkAbwBuAHMAABFBAHIAdABpAHYAYQBNAFQAACdFAHgA
YwBlAHAAdABpAG8AbgBDAG8AbgBuAGUAYwB0AGkAbwBuAAANQQByAHQAaQB2AGEAABdDAHUAcgBy
AGUAbgB0AEYAaQBsAGUAAHFTAEMAXwA0AGEAYwA4AGMAYgA0AGMANwA1AGQAMwA0AGEANQA1ADgA
NQA1AGQAYwAxADAANgBmADUANQA1AGIAOQA1ADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAABvAW1pEbtsQoJ3G1Z5sYXgAAQgAQEIAyAAAQUgAQEREQQgAQEOBiAB
ARGAjQMgAA4GFRI5Ag4OByACARMAEwEEAAEBDiYHDw4SSRwSSRwVEVEBEVUSWRJdFRJhARJZFRJh
ARJdEVUICBJlAgUgAQITAAYAAw4OHBwCBg4FAAIODhwJIAMBDhI9EoCxBSAAEYC1AyAAHAQGEoC9
BQACAg4OBwYVEVEBEVUCBgIEAAARVQQgAQ4OBwAEDg4ODg4GFRJhARJZBSABARMABhUSYQESXQUg
ARMACAQKARJZAyAACAQKARJdBSAAEoDFCiAGAQgODg4IEAIEIAASZQYAAw4ODg4MBwMSaRFVFRFR
ARFVDgAFAg4OEoDJEYDNEBFVBhURUQERVQMHAQ4GFRJhAR4ACxABAQ4VEoDVAR4ABAoBHgAGIAEd
Dh0DBSACDg4OBAABAg4GFRJBARJFCSADARJ1HQgSeQMGEnUDBh0IBCABDggEIAECCAMgAAIFIAIB
CBwHIAICDhGA4QUgAR0ICAMHAQgGAAIIEnkOBSAAEoDlBiABEoDpDgUgABKAgQUgABKA7QYgARKA
8RwFAAASgPUGIAEcEoD5CAABEoD9EYEBBSAAEoEFByACAQ4SgQUIt3pcVhk04IkIiYRdzYCAzJEI
PgwI1ZzD1lcI+gztSkVRp4IHBhUSOQIODgMGEj0CBggHBhUSQQESRQMGEhwDBhIgAwYSEAMGEhQD
BhJ9BAYSgIkDBhJpAwYSKAUgAQESDAUgAgEODgkgARURUQERVQ4GMAEBAR4ABCABAQIJIAQBCA4S
dRJ5CyAEAQgdCB0SdRJ5BSABARJ9BQAAEoCJBAAAEmkFAAEBEmkEAAASKAMAAAEDKAAOAygAAgUo
ABKAgQUIABKAiQQIABJpBAgAEigIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJv
d3MBCAEAAgAAAAAAKAEAI1NDXzRhYzhjYjRjNzVkMzRhNTU4NTVkYzEwNmY1NTViOTU3AAAFAQAA
AAAWAQARQ29weXJpZ2h0IEAgIDIwMTkAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEA
VA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNAQBAAAAALQAAADOyu++AQAA
AJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249
NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5
I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQA
AAAMVAAAAAAAAAAAAAAmVAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGFQAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAA
AAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAORd
ZB0AAAEA5F1kHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANABhAGMAOABj
AGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3AAAA
PgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANQAyADQALgAyADQAMAAz
ADYAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABhAGMAOABjAGIA
NABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0AGEA
YwA4AGMAYgA0AGMANwA1AGQAMwA0AGEANQA1ADgANQA1AGQAYwAxADAANgBmADUANQA1AGIAOQA1
ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANABhAGMA
OABjAGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3
AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADUAMgA0AC4A
MgA0ADAAMwA2AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADUAMgA0AC4AMgA0ADAAMwA2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAADg0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_4ac8cb4c75d34a55855dc106f555b957</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::CurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">1f2228bceb84d476cfb663f9f241eb85</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">271d433d41794c3b8879a574a3e17d31c7a92a02</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Process\Proess Note.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Process\Proess Note.Connections[Artiva]"
                      connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                      connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                      name="Artiva" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Account_#]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Account_#"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account_#]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Secondary_Account_#]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Secondary_Account_#"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Secondary_Account_#]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Recall_Reason]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Recall_Reason"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Reason]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Recall_Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Recall_Code"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Code]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Keeper]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Keeper"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Keeper]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0].Columns[Recall_Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Recall_Date"
                          lineageId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Recall_Date]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process\Proess Note.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Process\Proess Note.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Process\Proess Note.Outputs[ArtivaMT]"
                      hasSideEffects="true"
                      name="ArtivaMT">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Process\Proess Note.Outputs[ArtivaMT].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Process\Proess Note.Outputs[ArtivaMT].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Process\Row Count"
                  componentClassID="DTSTransform.RowCount.3"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Process\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Process\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Process\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Process.Paths[ArtivaMT]"
                  endId="Package\Foreach Loop Container\Process\Row Count.Inputs[Row Count Input 1]"
                  name="ArtivaMT"
                  startId="Package\Foreach Loop Container\Process\Proess Note.Outputs[ArtivaMT]" />
                <path
                  refId="Package\Foreach Loop Container\Process.Paths[Exceptions]"
                  endId="Package\Foreach Loop Container\Process\Exception File.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Loop Container\Process\Proess Note.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Loop Container\Process.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Process\Proess Note.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Process\Get_Mt_Data.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Process.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Process\Artiva MT Notes File.Inputs[Flat File Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Process\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Validate_Fields"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{B5EEA65C-36EB-4873-AF58-FC3A3526936D}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate_Fields"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4e91ee531881413db3f80afb9f16a973"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::FullInboundDirectory,User::WrongFormat,$Package::CurrentFields"
              ReadWriteVariables="User::IsCRLF,User::IsMapped">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text;
#endregion

namespace ST_4e91ee531881413db3f80afb9f16a973
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            

            try
            {
                
                //IEnumerable<string> allLines = null;
                string currentfile = (string)Dts.Variables["User::CurrentFile"].Value;
                string unmappedfields = (string)Dts.Variables["User::WrongFormat"].Value;
                string[] splitted = null;
                int cnt = 0;
                string currentfields = (string)Dts.Variables["$Package::CurrentFields"].Value;
                string[] currentfieldarr = currentfields.Split(',');
                int fieldcnt = currentfieldarr.Length;
                int ismapped = 1;
                int iscrlf = 1;
                //int isquoted = 0;
                var outlines = new StringBuilder("Issue,Comments\n");

                string filePath = (string)Dts.Variables["User::FullInboundDirectory"].Value + currentfile;// Variables.FullInboundDirectory + Variables.currentFile;
                if (File.Exists(filePath))
                {

                    using (StreamReader sr = new StreamReader(filePath, encoding: System.Text.Encoding.UTF8))
                    {
                        string line = "";
                        while (!sr.EndOfStream)
                        {
                            line = sr.ReadLine();

                            splitted = line.Split(',');
                            cnt = splitted.Length;

                            if (cnt != fieldcnt)
                            {
                                outlines.AppendLine("UnMapped Fields,\"CurrentMapping: " + line.Replace("\"","\"\"") + "; OriginalFields: " + currentfields + "\"");
                                ismapped = 0;

                            }



                            /*bool append = false;
                            if (line.Contains("\""))
                            {
                                for (int i = 0; i < splitted.Length; i++)
                                {

                                    if (splitted[i].Trim().StartsWith("\"") || splitted[i].Trim().EndsWith("\""))
                                    {
                                        append = true;
                                    }
                                }

                                if (append)
                                {
                                    outlines.AppendLine("Quoted identifier unexpected,\"Value sent: " + line.Replace("\"", "\"\"") + "\"");
                                    isquoted = 1;
                                }
                            }*/
                        }

                        

                        //back 2 bytes from end of file
                        sr.BaseStream.Seek(-2, SeekOrigin.End);

                        int s1 = sr.Read(); //read the char before last
                        int s2 = sr.Read(); //read the last char 
                        if (s2 == 10) //file is end with CR-LF or LF ... (CR=13, LF=10)
                        {
                            if (s1 == 13) {

                                outlines.AppendLine("Line feed (LF) expected at end of file, got something else instead");
                                iscrlf = 0;
                            } //file is end with CR-LF (Windows EOL format)
                            else
                            {



                            } //file is end with just LF, (UNIX/OSX format)
                        }

                    }
                }




                Dts.Variables["User::IsMapped"].Value = ismapped;
                Dts.Variables["User::IsCRLF"].Value = iscrlf;
                //Dts.Variables["User::IsQuoted"].Value = isquoted;

                if (ismapped == 0 || iscrlf==0)
                    File.AppendAllText(unmappedfields, outlines.ToString());

            }
            catch (Exception e)
            {
                
                Dts.Events.FireError(18, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0);

            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4e91ee531881413db3f80afb9f16a973.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d3e4aaf2-ea82-479c-84a7-5a9c236324a9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4e91ee531881413db3f80afb9f16a973</RootNamespace>
    <AssemblyName>ST_4e91ee531881413db3f80afb9f16a973</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4e91ee531881413db3f80afb9f16a973</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4e91ee531881413db3f80afb9f16a973</msb:DisplayName>
		<msb:ProjectId>{78C18243-DF79-4681-BCF3-23CF5E01533C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4e91ee531881413db3f80afb9f16a973.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Settings.get_Default():ST_4e91ee531881413db3f80afb9f16a973.Properties.Sett" +
    "ings")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4e91ee531881413db3f80afb9f16a973.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGdvLV8AAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAARjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAPQzAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAATBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAo
NAAAAAAAAEgAAAACAAUAICMAABwQAAABAAAAAAAAADwzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBwAoAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdB4AAAEKAigQAAAKbxEAAApyJQAAcG8SAAAKbxMAAAp0HgAAAQsCKBAAAApvEQAACnJJAABw
bxIAAApvEwAACnQeAAABDAgXjR8AAAElFh8snW8UAAAKjmkNFxMEFxMFcnkAAHBzFQAAChMGAigQ
AAAKbxEAAApymQAAcG8SAAAKbxMAAAp0HgAAAQYoFgAAChMHEQcoFwAACjnPAAAAEQcoGAAACnMZ
AAAKEwhyzwAAcBMJK2YRCG8aAAAKEwkRCReNHwAAASUWHyydbxQAAAqOaQkuRhEGG40eAAABJRZy
0QAAcKIlFxEJchUBAHByGQEAcG8bAAAKoiUYch8BAHCiJRkIoiUachUBAHCiKBwAAApvHQAACiYW
EwQRCG8eAAAKLJERCG8fAAAKH/5qGG8gAAAKJhEIbyEAAAoTChEIbyEAAAofCjMWEQofDTMQEQZy
RQEAcG8dAAAKJhYTBd4MEQgsBxEIbyIAAArcAigQAAAKbxEAAApyzAEAcG8SAAAKEQSMJgAAAW8j
AAAKAigQAAAKbxEAAApy6gEAcG8SAAAKEQWMJgAAAW8jAAAKEQQsBBEFLQ0HEQZvJAAACiglAAAK
3joTCwIoEAAACm8mAAAKHxJyBAIAcBELbycAAApyIgIAcBELbygAAAooKQAACnLPAABwFm8qAAAK
Jt4AAigQAAAKFm8rAAAKKkE0AAACAAAAxwAAALUAAAB8AQAADAAAAAAAAAAAAAAAAAAAAOEBAADh
AQAAOgAAABEAAAEeAigsAAAKKh4CKC0AAAoqrn4BAAAELR5yKAIAcNADAAACKC4AAApvLwAACnMw
AAAKgAEAAAR+AQAABCoafgIAAAQqHgKAAgAABCoafgMAAAQqHgIoMQAACioucwgAAAaAAwAABCoA
AEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAJAEAAAjfgAA/AQAAJgGAAAjU3Ry
aW5ncwAAAACUCwAAnAIAACNVUwAwDgAAEAAAACNHVUlEAAAAQA4AANwBAAAjQmxvYgAAAAAAAAAC
AAABVx2iAQkDAAAA+gEzABYAAAEAAAAqAAAABQAAAAYAAAAJAAAAAQAAADEAAAACAAAAEAAAAAEA
AAACAAAAAwAAAAQAAAABAAAABAAAAAEAAAABAAAAAAD7AwEAAAAAAAYAkwJIBQYAIgNIBQYA3wE1
BQ8AvAUAAAYADAKjBAYAdgKjBAYAVwKjBAYACQOjBAYAswKjBAYAzAKjBAYAIwKjBAYAPgJjAwoA
5wKqAwoAVgGqAwYA6ARwBgYA0AQ9AAYAtQRLBAYAUgRLBAYAwgE1BQYASAZLBAYA+gRoBQYAvwSO
BA4AkgHlAw4A8wHlAw4AcgF5BAYApwFIBQoA0wOqAxIA/gXtABIArwDtAAYAfwNLBAYAywRLBAYA
6AA9AAYAWgNwBgYA3QQ9AAYAOwQ9AAYAbgQ9AAYAuABLBAYAAQBLBAoACgWqAwYAIQFLBAYAxABL
BAYAjgajBAAAAAA0AAAAAAABAAEAAQAQAGMEBwA5AAEAAQAAABAAbwXLBVEAAQADAAABEAAIBssF
ZQADAAcAAwEAACEGAABJAAQACgARAFcE4QARAEYB5QARAJMA6QAGBmYA7QBWgBEG8ABWgCYB8ABQ
IAAAAACGAGkEBgABALgiAAAAAIYYKAUGAAEAwCIAAAAAgxgoBQYAAQDIIgAAAACTCPYE9AABAPQi
AAAAAJMILgH5AAEA+yIAAAAAkwg6Af4AAQADIwAAAACWCFUGBAECAAojAAAAAIYYKAUGAAIAEiMA
AAAAkRguBQkBAgAAAAEAVAMJACgFAQARACgFBgAZACgFCgApACgFEAAxACgFEAA5ACgFEABBACgF
EABJACgFEABRACgFEABZACgFEABhACgFEABpACgFBgCZACgFBgDBACgFFQDRACgFBgBxABkGLQDZ
APoFMgDhAEIENwDpAEADPQDxAE8GQQB5ACgFEADxAEEGSAABAToGTgAJASsAUwCBACgFWQARAQ0B
YQDxAHwAZQDxAEEGawB5ABYBcQCBADIEdwCBACMEewAZAYYDgQARAXcAiQApAYoBBgDpAEoDjQCh
AH0DYQABAXwGkgDZAC8GmACJAKMAYQCJAIQAYQDxAEEGngA5AR4FpQDZAGEGAQBxACgFBgChACgF
BgBBAdYArgBBAYoGtwCpACgFvQDJACgFBgAIABQA1wAIABgA3AApAHMARAEuAAsAHAEuABMAJQEu
ABsARAEuACMATQEuACsAdgEuADMAdgEuADsAdgEuAEMATQEuAEsAfAEuAFMAdgEuAFsAkwFDAGMA
3ABJAHMARAFhAHsA3ABjAGsA3AAbAAMAAQAEAAMAAAD6BA0BAABOARIBAABZBhcBAgAEAAMAAgAF
AAUAAQAGAAUAAgAHAAcABIAAAAEAAABkHctHAAAAAAAABwAAAAQAAAAAAAAAAAAAAMUAbgAAAAAA
CwAAAAAAAAAAAAAAzgCLAwAAAAAEAAAAAAAAAAAAAADFAEsEAAAAAAsAAAAAAAAAAAAAAM4ARwAA
AAAAAAAAAAEAAAB5BQAABQACAAAAAAAASW50MzIAU1RfNGU5MWVlNTMxODgxNDEzZGIzZjgwYWZi
OWYxNmE5NzMAZ2V0X1VURjgAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
TWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFJlYWQAUmVwbGFjZQBnZXRfU3RhY2tUcmFjZQBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5
cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5S
dW50aW1lAFJlYWRMaW5lAEFwcGVuZExpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9D
dWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdl
bmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVB
dHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUA
QXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2Vt
Ymx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENv
bXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFz
c2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0
ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUA
Z2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9u
aW5nAFRvU3RyaW5nAFNlZWsATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVt
LkNvbXBvbmVudE1vZGVsAFNUXzRlOTFlZTUzMTg4MTQxM2RiM2Y4MGFmYjlmMTZhOTczLmRsbABn
ZXRfQmFzZVN0cmVhbQBnZXRfRW5kT2ZTdHJlYW0AZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3Vy
Y2VNYW4AU2NyaXB0TWFpbgBTZWVrT3JpZ2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBDaGFy
AFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFN0cmluZ0J1aWxkZXIAZ2V0X1Jlc291cmNlTWFuYWdl
cgBFdmVudHNPYmplY3RXcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
VF80ZTkxZWU1MzE4ODE0MTNkYjNmODBhZmI5ZjE2YTk3My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNGU5MWVlNTMxODgxNDEzZGIzZjgwYWZiOWYxNmE5
NzMuUHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFNldHRpbmdzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3Jp
cHRSZXN1bHRzAGdldF9FdmVudHMARXhpc3RzAENvbmNhdABPYmplY3QAU3BsaXQAZ2V0X0RlZmF1
bHQAc2V0X1Rhc2tSZXN1bHQAU3lzdGVtLlRleHQAQXBwZW5kQWxsVGV4dABnZXRfQXNzZW1ibHkA
AAAjVQBzAGUAcgA6ADoAQwB1AHIAcgBlAG4AdABGAGkAbABlAAAjVQBzAGUAcgA6ADoAVwByAG8A
bgBnAEYAbwByAG0AYQB0AAAvJABQAGEAYwBrAGEAZwBlADoAOgBDAHUAcgByAGUAbgB0AEYAaQBl
AGwAZABzAAAfSQBzAHMAdQBlACwAQwBvAG0AbQBlAG4AdABzAAoAADVVAHMAZQByADoAOgBGAHUA
bABsAEkAbgBiAG8AdQBuAGQARABpAHIAZQBjAHQAbwByAHkAAAEAQ1UAbgBNAGEAcABwAGUAZAAg
AEYAaQBlAGwAZABzACwAIgBDAHUAcgByAGUAbgB0AE0AYQBwAHAAaQBuAGcAOgAgAAADIgAABSIA
IgAAJTsAIABPAHIAaQBnAGkAbgBhAGwARgBpAGUAbABkAHMAOgAgAACAhUwAaQBuAGUAIABmAGUA
ZQBkACAAKABMAEYAKQAgAGUAeABwAGUAYwB0AGUAZAAgAGEAdAAgAGUAbgBkACAAbwBmACAAZgBp
AGwAZQAsACAAZwBvAHQAIABzAG8AbQBlAHQAaABpAG4AZwAgAGUAbABzAGUAIABpAG4AcwB0AGUA
YQBkAAAdVQBzAGUAcgA6ADoASQBzAE0AYQBwAHAAZQBkAAAZVQBzAGUAcgA6ADoASQBzAEMAUgBM
AEYAAB1QAHIAbwBjAGUAcwBzACAAVgBhAGwAdQBlAHMAAAUKAAoAAHFTAFQAXwA0AGUAOQAxAGUA
ZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYAYgA5AGYAMQA2AGEAOQA3ADMALgBQ
AHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAfgz8zdPxNUCpuArbs0ov
sQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXREHDA4ODggICBI9DhJBDggSRQQgABJtBCAAEnEF
IAESdRwDIAAcBiABHQ4dAwUAAg4ODgQAAQIOBQAAEoCFByACAQ4SgIUDIAAOBSACDg4OBQABDh0O
BSABEj0OAyAAAgUgABKAjQcgAgoKEYCRAyAACAQgAQEcBQACAQ4OBSAAEoCdBgADDg4ODgggBQII
Dg4OCAgAARKAoRGApQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMG
ElUDBhJZAwYSEAIGCAMGERQEAAASVQQAABJZBQABARJZBAAAEhADAAABBAgAElUECAASWQQIABIQ
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80
ZTkxZWU1MzE4ODE0MTNkYjNmODBhZmI5ZjE2YTk3MwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAy
MDIwAABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlO
YW1lEC5ORVQgRnJhbWV3b3JrIDQAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJl
c291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1l
UmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABw0AAAAAAAAAAAAADY0AAAAIAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAoNAAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDLR2QdAAABAMtHZB0/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADQAZQA5ADEAZQBlADUAMwAxADgAOAAxADQAMQAzAGQAYgAzAGYAOAAwAGEAZgBiADkA
ZgAxADYAYQA5ADcAMwAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA3
ADUAMgA0AC4AMQA4ADMANwA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADQAZQA5ADEAZQBlADUAMwAxADgAOAAxADQAMQAzAGQAYgAzAGYAOAAwAGEAZgBiADkAZgAx
ADYAYQA5ADcAMwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAwAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8ANABlADkAMQBlAGUANQAzADEAOAA4ADEANAAxADMAZABiADMAZgA4ADAAYQBm
AGIAOQBmADEANgBhADkANwAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADQAZQA5ADEAZQBlADUAMwAxADgAOAAxADQAMQAzAGQAYgAzAGYAOAAwAGEAZgBi
ADkAZgAxADYAYQA5ADcAMwAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANwA1ADIANAAuADEAOAAzADcAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANwA1ADIANAAuADEAOAAzADcAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABINAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{81317BB3-C593-4E64-BE95-B12D8ED7880F}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::IsMapped] == 1 &amp;&amp;  @[User::IsCRLF] == 1"
          DTS:From="Package\Foreach Loop Container\Validate_Fields"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Process" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{708EFF58-EB24-4938-BDF6-745011A15C76}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::RowCount]==0"
          DTS:From="Package\Foreach Loop Container\Process"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Delete_Empty_File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{47CBD594-8F55-4B13-A668-7C6511D6409B}"
          DTS:ObjectName="{47CBD594-8F55-4B13-A668-7C6511D6409B}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Remove_Files_OnFailure"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{b6963c1a-b2bf-40a1-a903-a995cb1bc6f2}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Remove_Files_OnFailure">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{ae134b08-410c-45ae-94bf-26b6d439e6d5}"
        DTS:ObjectName="{E135B64F-EF71-4DDD-8453-1A4A95126D0C}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullOutboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Outbound\" />
            <FEFEProperty
              FileSpec="*IntegraRecall_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Remove_Files_OnFailure\Delete_Files_FromOutbound"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:DelayValidation="True"
          DTS:Description="File System Task"
          DTS:DTSID="{eaa536a6-2fdb-4d80-8d0b-afd55bec0b6e}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.FileSystemTask.FileSystemTask, Microsoft.SqlServer.FileSystemTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Delete_Files_FromOutbound"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <FileSystemData
              TaskOperationType="DeleteFile"
              TaskSourcePath="User::deletefile"
              TaskIsSourceVariable="True" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{16BA01EC-E757-42D3-BE0B-1D25B2723E38}"
          DTS:ObjectName="{16BA01EC-E757-42D3-BE0B-1D25B2723E38}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::deletefile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C375CEC2-7E64-4189-9776-15A7D4A38872}"
      DTS:From="Package\Foreach Loop Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Remove_Files_OnFailure"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="166,42"
          Id="Package\Foreach Loop Container\Delete_Empty_File"
          TopLeft="49,183" />
        <NodeLayout
          Size="115,42"
          Id="Package\Foreach Loop Container\Process"
          TopLeft="45,92" />
        <NodeLayout
          Size="149,42"
          Id="Package\Foreach Loop Container\Validate_Fields"
          TopLeft="47,19" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="121.5,61">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19,31"
              Start="0,0"
              End="-19,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="-4,15.5" />
                  <mssgle:LineSegment
                    End="-15,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-15,15.5"
                    Point2="-19,15.5"
                    Point3="-19,19.5" />
                  <mssgle:LineSegment
                    End="-19,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-17.5,20.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="102.5,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="29.5,49"
              Start="0,0"
              End="29.5,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.5"
                    Point2="0,24.5"
                    Point3="4,24.5" />
                  <mssgle:LineSegment
                    End="25.5,24.5" />
                  <mssgle:CubicBezierSegment
                    Point1="25.5,24.5"
                    Point2="29.5,24.5"
                    Point3="29.5,28.5" />
                  <mssgle:LineSegment
                    End="29.5,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="6.75,29.5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="278,280"
          Size="278,323"
          Id="Package\Foreach Loop Container"
          TopLeft="60,60" />
        <NodeLayout
          Size="212,42"
          Id="Package\Remove_Files_OnFailure\Delete_Files_FromOutbound"
          TopLeft="49,102" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="278,280"
          Size="278,323"
          Id="Package\Remove_Files_OnFailure"
          TopLeft="472,63" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="338,223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="134,0"
              Start="0,0"
              End="126.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="126.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="48.00865234375,5,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Process">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\Process\Get_Mt_Data"
          TopLeft="241,23" />
        <NodeLayout
          Size="135,42"
          Id="Package\Foreach Loop Container\Process\Proess Note"
          TopLeft="209.5,131.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\Process\Exception File"
          TopLeft="312,259.839285714286" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Process\Artiva MT Notes File"
          TopLeft="78.571428571429,317.821428571429" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach Loop Container\Process\Row Count"
          TopLeft="108,218" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process.Paths[Row Count Output 1]"
          TopLeft="169.285714285715,260">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.821428571429"
              Start="0,0"
              End="0,50.321428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.321428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process.Paths[Flat File Source Output]"
          TopLeft="311.5,65">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.5,66.5"
              Start="0,0"
              End="-34.5,59">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.25"
                    Point2="0,33.25"
                    Point3="-4,33.25" />
                  <mssgle:LineSegment
                    End="-30.5,33.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.5,33.25"
                    Point2="-34.5,33.25"
                    Point3="-34.5,37.25" />
                  <mssgle:LineSegment
                    End="-34.5,59" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process.Paths[Exceptions]"
          TopLeft="298.166666666667,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="85.8333333333334,86.339285714286"
              Start="0,0"
              End="85.8333333333334,78.839285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.1424911106464" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.1424911106464"
                    Point2="0,35.1424911106464"
                    Point3="4,35.1424911106464" />
                  <mssgle:LineSegment
                    End="81.8333333333334,35.1424911106464" />
                  <mssgle:CubicBezierSegment
                    Point1="81.8333333333334,35.1424911106464"
                    Point2="85.8333333333334,35.1424911106464"
                    Point3="85.8333333333334,39.1424911106464" />
                  <mssgle:LineSegment
                    End="85.8333333333334,78.839285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="18.8490885416667,40.1424911106464,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Process.Paths[ArtivaMT]"
          TopLeft="255.833333333333,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-82.8333333333333,44.5"
              Start="0,0"
              End="-82.8333333333333,37">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.112737920937" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.112737920937"
                    Point2="0,18.112737920937"
                    Point3="-4,18.112737920937" />
                  <mssgle:LineSegment
                    End="-78.8333333333333,18.112737920937" />
                  <mssgle:CubicBezierSegment
                    Point1="-78.8333333333333,18.112737920937"
                    Point2="-82.8333333333333,18.112737920937"
                    Point3="-82.8333333333333,22.112737920937" />
                  <mssgle:LineSegment
                    End="-82.8333333333333,37" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-61.9484440104167,23.112737920937,41.0635546875,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>