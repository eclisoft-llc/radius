<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/29/2020 4:47:44 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{CA491665-606F-47C3-B34D-067A0BF588B4}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="OBPay"
  DTS:PackageType="5"
  DTS:VersionBuild="31"
  DTS:VersionGUID="{B3EBA2A7-25CE-4942-B433-4A5019901699}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9B6D179F-9F72-4AD5-9379-8C451BA30C16}"
      DTS:ObjectName="ArchiveDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Archive\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{043928A7-6AE7-4D23-A9D4-6A9E49211E47}"
      DTS:ObjectName="FileName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">RadiusPayments_</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{6A8E24B9-CBAD-42B8-8A38-B98A3093DA70}"
      DTS:ObjectName="LogDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Logs\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{7C4BEA57-B04E-4977-87A6-F6A5E80506E6}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{51005180-7144-4523-B962-19E0594934F9}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::ArchiveDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullArchiveDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Archive\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{41D92078-38B4-4E2C-A536-D451E45ACB96}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Send_Empty_File"
      DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:Description="Script Task"
      DTS:DTSID="{AA8326A5-ADAA-4780-96EA-0CCCE88F42D8}"
      DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
      DTS:LocaleID="-1"
      DTS:ObjectName="Send_Empty_File"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_d9bbed3ac71e42d19ced13eb1f7a99c1"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::FullArchiveDirectory,User::FullOutboundDirectory,$Package::FileName,$Package::LogDirectory,$Package::OutboundDirectory,$Project::LocalPath">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Settings.get_Default():ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Sett" +
    "ings")]

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.IO;
using System.Data.Odbc;
using System.Linq;
using System.Windows.Forms;
using CommonClasses;
using WinSCP;
using System.Collections.Generic;
using System.Data.SqlClient;
#endregion

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here

            try
            {

                DateTime fileDate = DateTime.Today;
                string filenamepat = (string)Dts.Variables["$Package::FileName"].Value;
                string exportDirectory = (string)Dts.Variables["User::FullOutboundDirectory"].Value;
                string fileName = filenamepat + fileDate.ToString("MMddyyyy") + ".csv";
                string fullFilePath = exportDirectory + fileName;
                string _clientPath = (string)Dts.Variables["$Project::LocalPath"].Value;
                string _fileLocation = exportDirectory;
                string _archivePath = (string)Dts.Variables["User::FullArchiveDirectory"].Value;
                string _logPath = _clientPath + (string)Dts.Variables["$Package::LogDirectory"].Value; ;
                string _appDirectory = @"R:\Program Files (x86)\WinSCP\";

                
                    
                    string ftpURL = "";
                    string ftpUser = "";
                    string ftpPass = "";
                    int ftpPort = 0;
                    string ftpDir = "/Home/eft_integracredit/From Agency/";
                    string ftpKey = "";

                    using (var connection = new SqlConnection("Server=dfw2-etl-001;Database=ArtivaJobEngine;User Id=WAREHOUSEMAN;Password=p3RV@$1V3;"))
                    {
                        using (var command = new SqlCommand("SELECT [Host],[Username],[Password],[Port],[HostKey]  FROM [ArtivaJobEngine].[dbo].[FTPInformation] WHERE ID = 14", connection))
                        {
                            connection.Open();
                            using (var reader = command.ExecuteReader())
                            {
                                reader.Read();
                                ftpURL = reader.GetString(0);
                                ftpUser = reader.GetString(1);
                                ftpPass = reader.GetString(2);
                                ftpPort = reader.GetInt32(3);
                                ftpKey = reader.GetString(4);
                            }
                        }
                    }

                    Session session = new Session();
                    TransferOptions transferOptions = new TransferOptions();
                    transferOptions.TransferMode = TransferMode.Binary;
                    transferOptions.ResumeSupport.State = TransferResumeSupportState.Off;
                    transferOptions.FilePermissions = null;
                    transferOptions.PreserveTimestamp = false;

                    SessionOptions sessionOptions = new SessionOptions();
                    sessionOptions.Protocol = Protocol.Sftp;
                    sessionOptions.HostName = ftpURL;
                    sessionOptions.UserName = ftpUser;
                    sessionOptions.Password = ftpPass;
                    sessionOptions.PortNumber = ftpPort;
                    sessionOptions.SshHostKeyFingerprint = ftpKey;

                    session.ExecutablePath = _appDirectory + "winscp.exe";
                    session.SessionLogPath = _logPath + "PutOBPaymentFiles.log";
                    session.Open(sessionOptions);
                    if (!session.FileExists(ftpDir + fileName))
                    {

                    if (!File.Exists(fullFilePath))
                        File.Create(fullFilePath).Dispose();

                    DirectoryInfo di = new DirectoryInfo(_fileLocation);
                    FileInfo[] fi = di.GetFiles(filenamepat + fileDate.ToString("MMddyyyy") + "*.csv");

                    File.Move(fi[0].FullName, _archivePath + fi[0].Name);
                        TransferOperationResult transResult = session.PutFiles(_archivePath + fi[0].Name, ftpDir, false, transferOptions);
                        transResult.Check();
                    }



                

            } catch (Exception e)
            {
                Dts.Events.FireError(18, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0);

            }


			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</msb:CodeName>
		<msb:DisplayName>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</msb:DisplayName>
		<msb:ProjectId>{06812F55-4A0C-4AAC-9FD7-DBCAABE5A32C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_d9bbed3ac71e42d19ced13eb1f7a99c1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_d9bbed3ac71e42d19ced13eb1f7a99c1")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{C2B3E828-3C78-4A43-98BB-E9EF78AE65F8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</RootNamespace>
    <AssemblyName>ST_d9bbed3ac71e42d19ced13eb1f7a99c1</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="WinSCPnet, Version=1.1.4.3970, Culture=neutral, PublicKeyToken=2271ec4a3c56d0bf, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Program Files (x86)\WinSCP\WinSCPnet.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_d9bbed3ac71e42d19ced13eb1f7a99c1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_d9bbed3ac71e42d19ced13eb1f7a99c1.dll">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
BgCcA1QFBgBGA1QFBgBfA1QFBgC2AlQFBgDRAugDCgB6A2AECgCpAWAEBgBLAfoEDgAiBUEADgBu
B0EADgBfB0EAEgBzBf0HEgCJAP0HEgACBv0HBgCeBTcABgCBBfoEBgABBfoEBgBVAl0GBgC5B/oE
BgAiBpAGBgCnBT8FFgAKApsEFgCGApsEFgDFASoFBgA6AnAGCgCJBGAEGgAmB1QBGgDdAFQBBgAO
BPoEEgBmBYsFEgD1BYsFBgDmAPoEDgDEAEEADgA/CEEADgAfAkEADgBPB0EADgDdBEEABgAWATcA
BgDmBDcABgDqBDcABgDCBTcABgCzBTcADgDlB0EADgDdAUEACgAyBmAEBgB0AfoEBgDyAPoEBgBj
CFQFAAAAAC4AAAAAAAEAAQABABAAFwUBADkAAQABAAAAEACXBvMGaQABAAMAAAEQAEIH8wZ9AAMA
BwADAQAAjgcAAGEABAAKABEABgUsAREAmQEwAREAsAA0AQYGZwA4AVaAfgc7AVaAeQE7AVAgAAAA
AIYAHQUGAAEAvCMAAAAAhhhQBgYAAQDEIwAAAACDGFAGBgABAMwjAAAAAJMIHgY/AQEA+CMAAAAA
kwiBAUQBAQD/IwAAAACTCI0BSQEBAAckAAAAAJYIygdPAQIADiQAAAAAhhhQBgYAAgAWJAAAAACR
GFYGVAECAAAAAQDdAwkAUAYBABEAUAYGABkAUAYKACkAUAYQADEAUAYQADkAUAYQAEEAUAYQAEkA
UAYQAFEAUAYQAFkAUAYQAGEAUAYQAGkAUAYGAMkAUAYGAPEAUAYVAAEBUAYGAHkAVQg/AHEAhgdE
AAkBIgdKABEB8QRQABkB0wNXAHkAAgRbACEBsgdgACEBsgdnAJkAUAYQAKEAUAZtACkBEgUGAKEA
EAZ0ADEBhAB5ADEBCwR9ADEBJQCCADkB8QEGAIEAUAYGAIkAUAYGAIkAwACHAIkALQiOAEkBAAKU
AIkASwebAIkA0AWiAJEAUAYGAJEA2QSnAJEAPgEQAJEAMQEQAJEAlAAQAJEA5gUBAJEAEwgQAIEA
FQQQAIEAKAQQAIEAEgWuAIEApwe0AGkBqwe5AGkB+QG+AHkB8QEGAIEBUAYQAIEBMAfFAIkBJAHM
AIkBGwHMAGkB4wPQAIEAOQfWAJkBOwQGAAkBnAfhALkA0QDMALkAoQDMAKEBRgbnAAkB1gcBAHEA
UAYGANEAUAYGAKkBBAHwAKkBXwj5ANkAUAb/APkAUAYGAAgAFAAiAQgAGAAnASkAcwCPAS4ACwBn
AS4AEwBwAS4AGwCPAS4AIwCYAS4AKwDBAS4AMwDBAS4AOwDBAS4AQwCYAS4ASwDHAS4AUwDBAS4A
WwDeAUMAYwAnAUkAcwCPAWEAewAnAWMAawAnARsAAwABAAQAAwAAACIGWAEAAKEBXQEAAM4HYgEC
AAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAABQdoH0AAAAAAAABAAAABAAAAAAAAAAAAAAA
BwF7AAAAAAALAAAAAAAAAAAAAAAQAUEEAAAAAAEAAwAHALEdAAAAABkBwAcAAAAABAAAAAAAAAAA
AAAABwFvAAAAAAAEAAAAAAAAAAAAAAAHAfoEAAAAAAsAAAAAAAAAAAAAABABSAAAAAAAAAAAAAEA
AAChBgAABQACAAAAAAAAU1RfZDliYmVkM2FjNzFlNDJkMTljZWQxM2ViMWY3YTk5YzEAR2V0SW50
MzIAPE1vZHVsZT4AU3lzdGVtLklPAFdpblNDUABNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBSZWFkAFNxbENvbW1hbmQAc2V0X1Bhc3N3
b3JkAGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBzZXRfVHJhbnNmZXJNb2RlAGdldF9N
ZXNzYWdlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9t
SGFuZGxlAEZpbGUAZ2V0X05hbWUAZ2V0X0Z1bGxOYW1lAHNldF9Vc2VyTmFtZQBzZXRfSG9zdE5h
bWUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUA
Z2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVj
dE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBPcGVyYXRpb25SZXN1bHRCYXNlAERp
c3Bvc2UAQ3JlYXRlAHNldF9TdGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBUcmFuc2ZlclJlc3Vt
ZVN1cHBvcnRTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJD
b2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRl
AEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0
RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJs
eURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNz
ZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAE1vdmUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBUb1N0cmluZwBHZXRTdHJpbmcAc2V0X0V4ZWN1dGFibGVQYXRoAHNldF9T
ZXNzaW9uTG9nUGF0aABDaGVjawBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3JpcHRPYmplY3RNb2RlbABTeXN0
ZW0uQ29tcG9uZW50TW9kZWwAU1RfZDliYmVkM2FjNzFlNDJkMTljZWQxM2ViMWY3YTk5YzEuZGxs
AHNldF9Qcm90b2NvbABGaWxlU3RyZWFtAGdldF9JdGVtAFN5c3RlbQBFbnVtAHJlc291cmNlTWFu
AE9wZW4AU2NyaXB0TWFpbgBTZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERiQ29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4
Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24ARmlsZUluZm8AQ3VsdHVyZUluZm8ARmlsZVN5c3Rl
bUluZm8ARGlyZWN0b3J5SW5mbwBzZXRfUHJlc2VydmVUaW1lc3RhbXAAc2V0X1BvcnROdW1iZXIA
RGJEYXRhUmVhZGVyAFNxbERhdGFSZWFkZXIARXhlY3V0ZVJlYWRlcgBnZXRfUmVzb3VyY2VNYW5h
Z2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNUX2Q5YmJlZDNhYzcxZTQyZDE5Y2VkMTNlYjFmN2E5OWMxLlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF9kOWJiZWQzYWM3MWU0MmQxOWNlZDEzZWIxZjdh
OTljMS5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAUHV0RmlsZXMAU2V0dGluZ3MA
c2V0X0ZpbGVQZXJtaXNzaW9ucwBTZXNzaW9uT3B0aW9ucwBUcmFuc2Zlck9wdGlvbnMAU3VjY2Vz
cwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBGaWxlRXhpc3RzAENvbmNhdABPYmpl
Y3QAV2luU0NQbmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFRyYW5zZmVyT3BlcmF0aW9u
UmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABzZXRfU3NoSG9zdEtleUZpbmdlcnByaW50AGdl
dF9SZXN1bWVTdXBwb3J0AFRyYW5zZmVyUmVzdW1lU3VwcG9ydABnZXRfVG9kYXkAZ2V0X0Fzc2Vt
Ymx5AAAlJABQAGEAYwBrAGEAZwBlADoAOgBGAGkAbABlAE4AYQBtAGUAADdVAHMAZQByADoAOgBG
AHUAbABsAE8AdQB0AGIAbwB1AG4AZABEAGkAcgBlAGMAdABvAHIAeQAAEU0ATQBkAGQAeQB5AHkA
eQAACS4AYwBzAHYAACckAFAAcgBvAGoAZQBjAHQAOgA6AEwAbwBjAGEAbABQAGEAdABoAAA1VQBz
AGUAcgA6ADoARgB1AGwAbABBAHIAYwBoAGkAdgBlAEQAaQByAGUAYwB0AG8AcgB5AAAtJABQAGEA
YwBrAGEAZwBlADoAOgBMAG8AZwBEAGkAcgBlAGMAdABvAHIAeQAAPVIAOgBcAFAAcgBvAGcAcgBh
AG0AIABGAGkAbABlAHMAIAAoAHgAOAA2ACkAXABXAGkAbgBTAEMAUABcAAABAEkvAEgAbwBtAGUA
LwBlAGYAdABfAGkAbgB0AGUAZwByAGEAYwByAGUAZABpAHQALwBGAHIAbwBtACAAQQBnAGUAbgBj
AHkALwAAgKtTAGUAcgB2AGUAcgA9AGQAZgB3ADIALQBlAHQAbAAtADAAMAAxADsARABhAHQAYQBi
AGEAcwBlAD0AQQByAHQAaQB2AGEASgBvAGIARQBuAGcAaQBuAGUAOwBVAHMAZQByACAASQBkAD0A
VwBBAFIARQBIAE8AVQBTAEUATQBBAE4AOwBQAGEAcwBzAHcAbwByAGQAPQBwADMAUgBWAEAAJAAx
AFYAMwA7AAGA41MARQBMAEUAQwBUACAAWwBIAG8AcwB0AF0ALABbAFUAcwBlAHIAbgBhAG0AZQBd
ACwAWwBQAGEAcwBzAHcAbwByAGQAXQAsAFsAUABvAHIAdABdACwAWwBIAG8AcwB0AEsAZQB5AF0A
IAAgAEYAUgBPAE0AIABbAEEAcgB0AGkAdgBhAEoAbwBiAEUAbgBnAGkAbgBlAF0ALgBbAGQAYgBv
AF0ALgBbAEYAVABQAEkAbgBmAG8AcgBtAGEAdABpAG8AbgBdACAAVwBIAEUAUgBFACAASQBEACAA
PQAgADEANAAAFXcAaQBuAHMAYwBwAC4AZQB4AGUAACtQAHUAdABPAEIAUABhAHkAbQBlAG4AdABG
AGkAbABlAHMALgBsAG8AZwAACyoALgBjAHMAdgAAHVAAcgBvAGMAZQBzAHMAIABWAGEAbAB1AGUA
cwAABQoACgAAcVMAVABfAGQAOQBiAGIAZQBkADMAYQBjADcAMQBlADQAMgBkADEAOQBjAGUAZAAx
ADMAZQBiADEAZgA3AGEAOQA5AGMAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUA
cgBjAGUAcwAAAOl+33vAEphOgZYpcS5OJdQABCABAQgDIAABBSABARERBCABAQ4FIAEBEXUjBxcR
PQ4ODg4ODg4ODg4OCA4OEkESRRJJEk0SURJVHRJZEl0EAAARPQUgABKAhQUgABKAiQYgARKAjRwD
IAAcBCABDg4GAAMODg4OBQACDg4OBiACAQ4STQQgABJVAyAAAgQgAQ4IBCABCAgGIAEBEYChBSAA
EoClBiABARGAqQYgAQESgK0EIAEBAgYgAQERgLEFIAEBEkkEIAECDgQAAQIOBgABEoC5DgYgAR0S
WQ4DIAAOBQACAQ4OCiAEEoDJDg4CEkUFIAASgNEIIAUCCA4ODggIAAESgNURgNkFIAASgN0HIAIB
DhKA3Qi3elxWGTTgiQiJhF3NgIDMkQgicexKPFbQvwQAAAAABAEAAAADBhJtAwYScQMGEhACBggD
BhEUBAAAEm0EAAAScQUAAQEScQQAABIQAwAAAQQIABJtBAgAEnEECAASEAgBAAgAAAAAAB4BAAEA
VAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfZDliYmVkM2FjNzFlNDJk
MTljZWQxM2ViMWY3YTk5YzEAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAARwEAGi5ORVRG
cmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1l
d29yayA0AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIs
IG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9r
ZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIA
AAAAAAAAAAAAAFBBRFBBRFC0AAAAoDkAAAAAAAAAAAAAujkAAAAgAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAKw5AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAoH0UHQAAAQCgfRQdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBkADkAYgBiAGUAZAAzAGEAYwA3ADEAZQA0ADIAZAAxADkAYwBlAGQAMQAzAGUAYgAxAGYA
NwBhADkAOQBjADEAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANwA0
ADQANAAuADMAMgAxADYAMAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBkADkAYgBiAGUAZAAzAGEAYwA3ADEAZQA0ADIAZAAxADkAYwBlAGQAMQAzAGUAYgAxAGYANwBh
ADkAOQBjADEALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGQAOQBiAGIAZQBkADMAYQBjADcAMQBlADQAMgBkADEAOQBjAGUAZAAxADMAZQBi
ADEAZgA3AGEAOQA5AGMAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBkADkAYgBiAGUAZAAzAGEAYwA3ADEAZQA0ADIAZAAxADkAYwBlAGQAMQAzAGUAYgAx
AGYANwBhADkAOQBjADEAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADcANAA0ADQALgAzADIAMQA2ADAAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADcANAA0ADQALgAzADIAMQA2ADAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAzDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="160,42"
          Id="Package\Send_Empty_File"
          TopLeft="125,107" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>