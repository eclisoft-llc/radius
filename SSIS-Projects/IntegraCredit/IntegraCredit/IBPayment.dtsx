<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/13/2020 12:17:36 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{9762E90B-663E-4596-B47C-3092D2C17F66}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="IBPayment"
  DTS:PackageType="5"
  DTS:VersionBuild="60"
  DTS:VersionGUID="{2DE5689C-27E3-45FE-B799-ED42C8DAEF7F}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=THIRDPROD;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ArtivaMTPayment]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{382F4730-5FE6-4DC2-B09C-140FE5903AA3}"
      DTS:ObjectName="ArtivaMTPayment">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PathArtiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\ArtivaMT-THIRDPROD-Integra Credit-0-714202065836P.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{27BFA756-0D05-4BD0-A7C7-5A2F5BD0B389}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Payment Data]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{47CB4E14-8B5F-483B-A60E-17F9AF27713A}"
      DTS:ObjectName="Payment Data">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory]  +  @[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Account #"
              DTS:DTSID="{7638A582-08F9-4C1F-AE26-517C8161416A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Transaction Type Code"
              DTS:DTSID="{685FA6D1-F0F9-4D6D-B728-081E7DEF10D8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Payment Amount"
              DTS:DTSID="{7DC61735-0045-471C-8884-9D46E54C4844}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Tender Date"
              DTS:DTSID="{3229C8A4-29BE-4459-8DCD-79B126059ECE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Transaction Reference"
              DTS:DTSID="{501081D8-B5D0-4E6F-9606-015E235D1C35}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{535397BD-A8CC-4F91-B65A-AC3707697958}"
      DTS:ObjectName="ClientName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">IntegraCreditr</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{379AD5CC-C2F9-438F-8B55-F8C2B6FCE13F}"
      DTS:ObjectName="CurrentFields">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Account #,Transaction Type Code,Payment Amount,Tender Date,Transaction Reference</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{107DEA4B-E31D-43E4-AE3A-F215578AF0EE}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{DC15B3A9-732D-426B-884D-CBB3100331D4}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*IntegraPayment_*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{9EC96738-F707-48BC-A207-2E345FEE3BE7}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B0BDBEAF-415E-4B50-BF80-065B82AB534D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BB82C0CD-390D-40EA-A016-E82A30DC13E1}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE(LEFT(  (DT_WSTR, 99) @[System::StartTime]  ,19)&#xA;,&quot;:&quot;,&quot;&quot;),&quot;/&quot;,&quot;&quot;),&quot; &quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DateStamp">
      <DTS:VariableValue
        DTS:DataType="8">714202065836P</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BC2823A5-1B46-4939-B246-014458019F29}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{82015B62-B002-48CC-BE39-26DAF266E618}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3E0E3E0F-5209-4975-A63F-1B4AAF2DBCDD}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C3B3FB97-C79C-4480-89D1-57F114683B14}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsMapped">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EB033509-DBE9-4A97-91BD-62B84721C25D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-&quot; + @[User::CurrentFile]  + &quot;-&quot; +  @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathArtiva">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\ArtivaMT-THIRDPROD-Integra Credit-0-714202065836P.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E202992F-8DAA-4A64-B16F-C1CDFF88ED62}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-UnMappedFields.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UnMapped">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-UnMappedFields.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{1AF92F4B-086D-4C24-A931-5B9DCEC9D821}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{E135B64F-EF71-4DDD-8453-1A4A95126D0C}"
        DTS:ObjectName="{E135B64F-EF71-4DDD-8453-1A4A95126D0C}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Inbound\" />
            <FEFEProperty
              FileSpec="*IntegraPayment_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Payment_Process"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{94c6e79d-a38e-4536-b733-4707e0860e0e}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Payment_Process">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva MT Notes File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[ArtivaMTPayment]"
                      connectionManagerRefId="Package.ConnectionManagers[ArtivaMTPayment]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[ArtivaMT].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Payment_Process\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Payment_Process\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Payment_Process\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Get_Mt_Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Payment Data]"
                      connectionManagerRefId="Package.ConnectionManagers[Payment Data]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Payment Amount]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Payment Amount]"
                          name="Payment Amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Tender Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Tender Date]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Tender Date]"
                          name="Tender Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Reference]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Transaction Reference]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Reference]"
                          name="Transaction Reference"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account #]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Account #]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account #]"
                          name="Account #"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Type Code]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Transaction Type Code]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Type Code]"
                          name="Transaction Type Code"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Payment Amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Tender Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Tender Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Transaction Reference]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Transaction Reference" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Account #]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Account #" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[Transaction Type Code]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Transaction Type Code" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Payment_Process\Proess Payment"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Proess Payment"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ExceptionsBuffer ExceptionsBuffer;

    public ArtivaMTBuffer ArtivaMTBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

        if (null != ArtivaMTBuffer)
        {
            ArtivaMTBuffer.SetEndOfRowset();
            ArtivaMTBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ArtivaMT"))
            {
                ArtivaMTBuffer = new ArtivaMTBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 Artiva
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Artiva").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Linq;
using System.Collections.Generic;
using FileHelpers;
using System.Data.Odbc;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _exceptionReportCreated = false;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    private Dictionary<string, string> trancodes;
    System.Data.Odbc.OdbcConnection ArtivaCOnnection;
    public override void PreExecute()
    {
        base.PreExecute();

        trancodes = new Dictionary<string, string> { { "DP", "DP" },
            { "DPNSF", "DPNSF" }, { "DBJ", "DBJ" },
            { "CRJ", "CRJ" } };
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
    }
    int InputRecordCount;
    FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203> FHE = new FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203>();
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {
            InputRecordCount++;
            ArtivaCOnnection = Connections.Artiva.AcquireConnection(null) as System.Data.Odbc.OdbcConnection;

            
           if(Row.TransactionTypeCode_IsNull || Row.TransactionTypeCode == "" || !trancodes.ContainsKey(Row.TransactionTypeCode.Trim()))
            {
                _exceptionReportCreated = true;
                ExceptionsBuffer.AddRow();
                ExceptionsBuffer.Data = string.Format("invalid or missing Transaction Type!  Client Reference Number:{0} FileName:{1}.", Row.Account, Variables.CurrentFile);
                return;
            }

            if (Row.TransactionTypeCode == "DPNSF")
            {

                using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARACID FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') INNER JOIN ARENTITY entity ON ARACCOUNT.ARACRPID = entity.ARENID INNER JOIN AFTRANSACTION trans ON trans.AFTRENTID = entity.ARENID WHERE ARACCOUNT.ARACCLACCT = '{0}' AND trans.AFTRTYP='DP'", Row.Account.Trim()), ArtivaCOnnection, null))
                {
                    var aftrtyp = cmd.ExecuteScalar();

                    if (aftrtyp == DBNull.Value || aftrtyp == null || aftrtyp.ToString() == "")
                    {
                        _exceptionReportCreated = true;
                        ExceptionsBuffer.AddRow();
                        ExceptionsBuffer.Data = string.Format("no matching dp record for account!  Client Reference Number:{0} FileName:{1}.", Row.Account, Variables.CurrentFile);
                        return;
                    }

                }
            }

            string Aracid = string.Empty;
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARACID FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') WHERE ARACCLACCT = '{0}'", Row.Account.Trim()), ArtivaCOnnection, null))
            {
                var aracid = cmd.ExecuteScalar();

                if (aracid == DBNull.Value || aracid == null || aracid.ToString() == "")
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Unable to find account!  Row Number:{0} Client Reference Number:{1} .  Update Skipped", InputRecordCount, Row.Account);
                    return;
                }
                else
                {
                    Aracid = aracid.ToString();
                }
            }

            bool isPay = Row.TransactionTypeCode == "DP";
            bool isAdj = Row.TransactionTypeCode == "DBJ" || Row.TransactionTypeCode == "CRJ";
            bool isRev = Row.TransactionTypeCode == "DPNSF";
            decimal amt = Row.PaymentAmount_IsNull || Row.PaymentAmount == "" ? 0 : Convert.ToDecimal(Row.PaymentAmount);
            DateTime? t = Row.TenderDate_IsNull || Row.TenderDate == "" ? (DateTime?)null : DateTime.ParseExact(Row.TenderDate, "MMddyyyy", System.Globalization.CultureInfo.InvariantCulture);
            #region pay


            if (isPay)
            {
                Payment_PAY pay = new Payment_PAY();
                pay.AccountId = Aracid;
                pay.TransactionType = Row.TransactionTypeCode;
                pay.PaymentAmount = amt;                
                pay.TenderDate = t;
                pay.TransactionReference = Row.TransactionReference;

                AddPlacementRow(pay);


            }


            #endregion

            #region adj
            if (isAdj)
            {

                Adjustment_ADJ adj = new Adjustment_ADJ();
                adj.AccountId = Aracid;
                adj.TenderDate = t;
                adj.PrincipalAdjustmentAmount = amt;
                adj.TransactionType = Row.TransactionTypeCode;
                adj.TransactionReference = Row.TransactionReference;
                
                AddPlacementRow(adj);
            }


            #endregion

            #region rev

            if (isRev)
            {

                var rev = new PaymentReversal_REV();
                rev.AccountId = Aracid;
                rev.ReversalType = Row.TransactionTypeCode;
                rev.PaymentAmount = Row.PaymentAmount_IsNull || Row.PaymentAmount == "" ? 0 : Convert.ToDecimal(Row.PaymentAmount);
                rev.TenderDate = t;
                AddPlacementRow(rev);
            }

            
            #endregion





        }
        catch (Exception ex)
        {
            bool cancel = false;
            ComponentMetaData.FireError(10, "Exception in notes script", ex.Message, "", 0, out cancel);
            if (ex.InnerException != null)
            {
                ComponentMetaData.FireError(10, "Exception inner exception", ex.InnerException.Message, "", 0, out cancel);
            }
            ComponentMetaData.FireError(10, "Exception StackTrace", ex.StackTrace, "", 0, out cancel);
            return;
        }
    }

    private void WriteExceptionMessage(string msg, string data)
    {
        _exceptionReportCreated = true;
        ExceptionsBuffer.AddRow();
        ExceptionsBuffer.Data = msg + "  " + data;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

          ArtivaMTBuffer.AddRow();
          ArtivaMTBuffer.Data = recordString.ToUpper();
    }
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String PaymentAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool PaymentAmount_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String TenderDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool TenderDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String TransactionReference
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool TransactionReference_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String Account
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool Account_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String TransactionTypeCode
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool TransactionTypeCode_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ArtivaMTBuffer: ScriptBuffer

{
    public ArtivaMTBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Settings.get_Default():SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Sett" +
    "ings")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A8865E69-B834-4E85-93DB-5BBD5E761F1B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4ac8cb4c75d34a55855dc106f555b957</RootNamespace>
    <AssemblyName>SC_4ac8cb4c75d34a55855dc106f555b957</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:CodeName>
		<msb:DisplayName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:DisplayName>
		<msb:ProjectId>{DA30ED14-06B8-4F0B-8EF6-6B34AC9FB2E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_4ac8cb4c75d34a55855dc106f555b957.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
BG9bAAAKctMHAHBvXAAACihdAAAKb14AAAp0KQAAASoeAihXAAAKKq5+DQAABC0ecusHAHDQCQAA
AihfAAAKb2AAAApzYQAACoANAAAEfg0AAAQqGn4OAAAEKh4CgA4AAAQqGn4PAAAEKh4CKGIAAAoq
LnMyAAAGgA8AAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAUCwAAI34A
AIALAAB0DQAAI1N0cmluZ3MAAAAA9BgAAGAIAAAjVVMAVCEAABAAAAAjR1VJRAAAAGQhAAAsAwAA
I0Jsb2IAAAAAAAAAAgAAAVcVogkJHQAAAPoBMwAWAAABAAAAQAAAAAoAAAAPAAAAMwAAAB4AAABi
AAAAEAAAAAMAAAAHAAAAFAAAABUAAAAEAAAAAQAAAAkAAAABAAAAAQAAAAQAAAABAAAAAACZBgEA
AAAAAAYAUgVWCgYA5gVWCgYAngQdCg8AygoAAAYAywTQBwYANQXQBwYAFgXQBwYAzQXQBwYAcgXQ
BwYAiwXQBwYA4gTQBwYA/QQnBgoApgVuAwYA5ADlAQ4AEwjUARIAwQBxCxYA8QAwCgYAewZzBwYA
qABzBwYAWANzBw4AUwLUAQYAuAtzBxYAhAEwChYAVQEwChYAcAEwCgYAbwhzBxYA6QMwCgoAbAlu
AxoATAluAwoArghuAwoADgxuAx4AZgCrCQYAgQQdCgYAfQl2CgYAnQirByIASgSDBiIAsgSDBiIA
AgSWBwYAZgRWCgYALgNkAQYAbgZzBw4AwAfUAQ4ASQJ5CAYAwQZzBwYA8wJzBwYA3gBzBwYAhAxz
BwYAIAlzByYAAQDTCQYA1wDlARIAYQNxCwYAswDlAQYADQlzBwYATAhzBwYAjAhzByYAKgDTCSYA
TQDTCR4AfwCrCR4AGgCrCX8A4QwAAB4AkACrCQYApwNzBwYA/wJzBwYAVw3QBwAAAAA0AQAAAAAB
AAEAAQAQAIsHAAAYAAEAAQABABAAMAkAAHEABgAHAAEAEABbCQAAcQAGABQAAQAQAD0JAABxAAYA
GgABABAA8AsAAH0ABgAgAAEAEABdCwAAWQALACgAAQAQAB4LAABZAAwAKwAAABAAfQrjClkADQAt
AAABEABNC+MKmQAPADEAAQAxAsMBAQDZCsYBAQACCM4BAQAeDNIBAQBRAdUBBgBdC90BBgAeC+EB
BgBbCeUBBgA9CekBAQAOAtIBAQD+C+0BAQD+C+0BEQB/B/EBEQDEA/YBEQCQAvsBUCAAAAAAxgAE
BgYAAQCuIAAAAADGAA8GBgABANQgAAAAAMYAKA3/AQEANCUAAAAAgQDdAgUCAgBgJQAAAACBABgN
CwIEABsmAAAAAIYYBgoGAAUALiYAAAAAhhgGChwBBQA5JgAAAACGCFUMKwAIAE4mAAAAAIYIQAc4
AQgAVyYAAAAAhgg7BCsACABsJgAAAACGCBcHOAEIAHUmAAAAAIYIoAIrAAgAiiYAAAAAhgjYBjgB
CACTJgAAAACGCC8MKwAIAKgmAAAAAIYILQc4AQgAsSYAAAAAhgi5AisACADGJgAAAACGCPgGOAEI
AM8mAAAAAIYAPw04AQgA1yYAAAAAhgDSCzgBCAAuJgAAAACGGAYKHAEIAN8mAAAAAIYInAEQAAsA
6SYAAAAAhgjIBhICDAAAJwAAAACGABENBgANAAgnAAAAAIYAzwsGAA0A1yYAAAAAhgDSCzgBDQAu
JgAAAACGGAYKHAENAN8mAAAAAIYInAEQABAA6SYAAAAAhgjIBhICEQAAJwAAAACGABENBgASAAgn
AAAAAIYAzwsGABIA1yYAAAAAhgDSCzgBEgAQJwAAAACGGAYKBgASADAnAAAAAMYAtAwXAhIAiycA
AAAAxgF9CwYAFgCNJwAAAACBAB0CBgAWAMQnAAAAAMYAwQwhAhYAiycAAAAAxgGLCwYAGgA3KAAA
AADGAa0M/wEaAIsnAAAAAMYBKA3/ARsASigAAAAAhhgGCi0CHABZKAAAAACGCDQIaAEdAHooAAAA
AIYIwAFoAR0AmygAAAAAhhgGCi0CHQCqKAAAAACGCCMDKwAeANAoAAAAAIMYBgoGAB4A2CgAAAAA
kwh5CTMCHgAEKQAAAACTCKwDlQAeAAspAAAAAJMIuAM5Ah4AEykAAAAAlgjkC0ACHwAaKQAAAACG
GAYKBgAfACIpAAAAAJEYDApFAh8AAAABAEMNAAABAHUGAAACALsBAAABAF8CAAABAHIJAAACACgL
AAADALwIAAABAHIJAAACACgLAAADALwIAAABACEGAAABACEGAAABAHIJAAACACgLAAADALwIAAAB
ACEGAAABACEGAAABAD0BAAACADMDAAADAHIJAAAEALwIAAABAIMLAAACABMKAAADAGkLAAAEALwI
AAABAHIJAAABAEMNAAABABQMAAABABQMAAABACEGCQAGCgEAEQAGCgYAGQAGCgoAKQAGChAAMQAG
ChAAOQAGChAAQQAGChAASQAGChAAUQAGChAAWQAGChAAYQAGChAAaQAGCgYACQEGCgYAKQEGChUA
OQEGCgYA+QAEBgYADAAGCgYADAAKAiMA+QAPBgYAAQFNBisAQQFfBC8AAQEiCFcASQFgDVwASQF6
BysADABHDWIASQGmC2gASQGmC28AqQAGCnUAWQESCX8AYQEbBoMAsQBiBisAaQEzBAYASQFsDYgA
eQF5BosAkQCpCJEAGQHUA5UAoQCtC5sAFAAGCqwAuQAGCgYAuQAAAogAuQCcA4gAuQBZDJEAuQA/
BLIAuQCkAogAwQAGCgYAwQAAAogAwQA/BLIAwQA7DJEAwQCcA4gAwQCkAogAyQAGCgYAyQAAAogA
yQCPA4gAyQBZDJEAyQA/BLIA+QClAckA0QDRAisAiQH8Cc8A0QBmCNoA0QCBAisASQGfC98AHAAG
CgYAHAAKAqwAmQFBBvIASQHeCwMBSQFmAgoBSQFuAhABSQGjCSsAJAAGCgYA4QAGChwB4QByCSYB
4QAoCyoB6QBrBi4B4QBSBzMB4QA/DTgB4QDSCzgB4QBqBzwB4QBZBwEAsQEGChAA4QARDQYA4QDP
CwYA+QAGCgYASQFWC0IB+QA8C0oB6QC/CzgB+QBFAVQBsQAGCgYAiQHiB1sBwQE9A2EByQGNCWgB
+QASC24B0QFhB3QB+QD8DHsB2QHNDIEB8QERA4gB8QFTDZEBEQEGCpcBMQEGCgYALgALAGgCLgAT
AHECLgAbAJACLgAjAJkCLgArAMICLgAzAMICLgA7AMICLgBDAJkCLgBLAMgCLgBTAMICLgBbAN8C
QwBjACcDIwFrACcD4QF7ACcDSQJzAJACaQJzAJACNADmAFABAwABAAQACwAFAA0ABwAPAAgAEQAJ
ABIACgAUAAAAWQxJAgAARAdNAgAAPwRJAgAAGwdNAgAApAJJAgAA3AZNAgAAMwxJAgAAMQdNAgAA
vQJJAgAA/AZNAgAAtgFJAgAAzAZNAgAAtgFJAgAAzAZNAgAAOAhRAgAAxAFRAgAAJwNJAgAAfQlX
AgAA4QNdAgAA6AtjAgIACAADAAIACQAFAAIACgAHAAIACwAJAAIADAALAAIADQANAAIADgAPAAIA
DwARAAIAEAATAAIAEQAVAAEAFQAXAAEAFgAZAAEAGwAbAAEAHAAdAAIAKQAfAAIAKgAhAAIALAAj
AAIALgAlAAIALwAnAAEAMAAnAAIAMQApABwApQDqABUBBIAAAAEAAAD7HBdpAAAAAAAAEAEAAAQA
AAAAAAAAAAAAAJ8BywEAAAAACwAAAAAAAAAAAAAAqAFnDAAAAAAEAAAAAAAAAAAAAACfAZABAAAA
AAMAAgAHAAAAAAAAALEBcQsAAAAAAQABAAAAAAAAAAAAugEaBAAAAAALAAAAAAAAAAAAAACoAYwM
AAAAAAsAAAAAAAAAAAAAAKgBxggAAAAABAAAAAAAAAAAAAAAnwFzBwAAAAALAAAAAAAAAAAAAACo
AekIAAAAAAAAAAABAAAAhwoAAAAAAAALAG4BCgC6AAoAvwAKAMQAgQD+AAEAbQAAAAAAAElEVFND
b21wb25lbnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9u
Q29sbGVjdGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5h
Z2VyMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAATnVsbGFibGVg
MQBJRW51bWVyYWJsZWAxAERlbGltaXRlZEZpbGVFbmdpbmVgMQBMaXN0YDEASW50MzIARGljdGlv
bmFyeWAyAEFjY291bnRGcmVlRm9ybVRleHRNbnRPbmx5XzIwMwBTQ180YWM4Y2I0Yzc1ZDM0YTU1
ODU1ZGMxMDZmNTU1Yjk1NwA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAEZIRQBBZGp1c3Rt
ZW50X0FESgBTeXN0ZW0uSU8AVABQYXltZW50UmV2ZXJzYWxfUkVWAFBheW1lbnRfUEFZAFN5c3Rl
bS5EYXRhAHNldF9EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0YQBkYXRhAGdldF9BcnRpdmEAbXNj
b3JsaWIAU3lzdGVtLkRhdGEuT2RiYwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBY2NvdW50
SWQAQWRkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRwdXRzRmluaXNoZWQAX2V4Y2VwdGlvblJlcG9y
dENyZWF0ZWQARGJDb21tYW5kAE9kYmNDb21tYW5kAHJlY29yZABSZXBsYWNlAElzTnVsbE9yV2hp
dGVTcGFjZQBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X1RyYW5zYWN0aW9uUmVm
ZXJlbmNlAGdldF9UcmFuc2FjdGlvblR5cGVDb2RlAGdldF9NZXNzYWdlAFdyaXRlRXhjZXB0aW9u
TWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBn
ZXRfQ3VycmVudEZpbGUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAERhdGVU
aW1lAENvbW1vbkVuZ2luZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBSZXZlcnNh
bFR5cGUAVHJhbnNhY3Rpb25UeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBHZW5lcmFsUHVycG9zZVJlY29yZEJhc2UAQXBwbGlj
YXRpb25TZXR0aW5nc0Jhc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlAERpc3Bvc2UAZ2V0X1Rl
bmRlckRhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNz
ZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4
ZWN1dGUAUG9zdEV4ZWN1dGUAVmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBX
cml0ZVN0cmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBUb1N0cmluZwBHZXRTdHJpbmcAbXNnAFRv
RGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfNGFjOGNiNGM3NWQzNGE1NTg1NWRjMTA2
ZjU1NWI5NTcuZGxsAERCTnVsbABzZXRfRGF0YV9Jc051bGwAZ2V0X1RyYW5zYWN0aW9uUmVmZXJl
bmNlX0lzTnVsbABnZXRfVHJhbnNhY3Rpb25UeXBlQ29kZV9Jc051bGwAZ2V0X1RlbmRlckRhdGVf
SXNOdWxsAGdldF9BY2NvdW50X0lzTnVsbABnZXRfUGF5bWVudEFtb3VudF9Jc051bGwAU2V0TnVs
bABnZXRfSXRlbQBzZXRfSXRlbQBTeXN0ZW0AVHJpbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5
c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAE9kYmNUcmFuc2FjdGlvbgBT
eXN0ZW0uUmVmbGVjdGlvbgBnZXRfUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uAEFydGl2YUNP
bm5lY3Rpb24AT2RiY0Nvbm5lY3Rpb24AQWNxdWlyZUNvbm5lY3Rpb24AZ2V0X0V4Y2VwdGlvbkNv
bm5lY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBnZXRfSW5uZXJFeGNlcHRpb24AU3lz
dGVtLkRhdGEuQ29tbW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AWmVybwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFwAENoYXIARXhlY3V0ZVNjYWxhcgBJRm9ybWF0
UHJvdmlkZXIASW5wdXQwQnVmZmVyAEFydGl2YU1UQnVmZmVyAFBpcGVsaW5lQnVmZmVyAEV4Y2Vw
dGlvbnNCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0Nvbm5lY3Rp
b25NYW5hZ2VyAFRvVXBwZXIATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZS5XcmFwcGVy
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIARmlyZUVycm9yAC5jdG9y
AC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFJHUy5BcnRpdmFHZW5lcmFsUHVy
cG9zZS5EYXRhLlJlY29yZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0u
UmVzb3VyY2VzAFNDXzRhYzhjYjRjNzVkMzRhNTU4NTVkYzEwNmY1NTViOTU3LlByb3BlcnRpZXMu
UmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwB0cmFuY29kZXMAU0NfNGFjOGNiNGM3
NWQzNGE1NTg1NWRjMTA2ZjU1NWI5NTcuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25u
ZWN0aW9ucwBCdWZmZXJzAEZpbGVIZWxwZXJzAEZpbmlzaE91dHB1dHMAQ3JlYXRlTmV3T3V0cHV0
Um93cwBDb25jYXQARm9ybWF0AFBhcnNlRXhhY3QAT2JqZWN0AGdldF9FbmRPZlJvd3NldABTZXRF
bmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVu
dABTY3JpcHRDb21wb25lbnQASW5wdXRSZWNvcmRDb3VudABnZXRfQWNjb3VudABQcmluY2lwYWxB
ZGp1c3RtZW50QW1vdW50AGdldF9QYXltZW50QW1vdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQAQ29udmVydABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJv
Y2Vzc0lucHV0AFByaW1lT3V0cHV0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50
RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AEFkZFBsYWNlbWVudFJvdwBJ
bnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAQ29udGFpbnNLZXkAZ2V0X0Fzc2VtYmx5AG9w
X0VxdWFsaXR5AEVtcHR5AAAAAAVEAFAAAAtEAFAATgBTAEYAAAdEAEIASgAAB0MAUgBKAAABAICf
aQBuAHYAYQBsAGkAZAAgAG8AcgAgAG0AaQBzAHMAaQBuAGcAIABUAHIAYQBuAHMAYQBjAHQAaQBv
AG4AIABUAHkAcABlACEAIAAgAEMAbABpAGUAbgB0ACAAUgBlAGYAZQByAGUAbgBjAGUAIABOAHUA
bQBiAGUAcgA6AHsAMAB9ACAARgBpAGwAZQBOAGEAbQBlADoAewAxAH0ALgAAgplTAEUATABFAEMA
VAAgAEEAUgBBAEMASQBEACAARgBSAE8ATQAgACUAUwBUAEEAUgBUAFQAQQBCAEwARQAgAEEAUgBD
AEwASQBFAE4AVAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIAQQBDAEMATwBVAE4AVAAgAE8A
TgAgAEEAUgBDAEwASQBEACAAPQAgAEEAUgBBAEMAQwBMAFQASQBEACAAQQBOAEQAIABBAFIAQwBM
AEkARAAgAEkATgAgACgAJwBJAE4AVABFAEcAMQAnACwAJwBJAE4AVABFAEcAMgAnACwAJwBJAE4A
VABFAEcAMwAnACwAJwBJAE4AVABFAEcANAAnACwAJwBJAE4AVABFAEcANQAnACkAIABJAE4ATgBF
AFIAIABKAE8ASQBOACAAQQBSAEUATgBUAEkAVABZACAAZQBuAHQAaQB0AHkAIABPAE4AIABBAFIA
QQBDAEMATwBVAE4AVAAuAEEAUgBBAEMAUgBQAEkARAAgAD0AIABlAG4AdABpAHQAeQAuAEEAUgBF
AE4ASQBEACAASQBOAE4ARQBSACAASgBPAEkATgAgAEEARgBUAFIAQQBOAFMAQQBDAFQASQBPAE4A
IAB0AHIAYQBuAHMAIABPAE4AIAB0AHIAYQBuAHMALgBBAEYAVABSAEUATgBUAEkARAAgAD0AIABl
AG4AdABpAHQAeQAuAEEAUgBFAE4ASQBEACAAVwBIAEUAUgBFACAAQQBSAEEAQwBDAE8AVQBOAFQA
LgBBAFIAQQBDAEMATABBAEMAQwBUACAAPQAgACcAewAwAH0AJwAgAEEATgBEACAAdAByAGEAbgBz
AC4AQQBGAFQAUgBUAFkAUAA9ACcARABQACcAAYCbbgBvACAAbQBhAHQAYwBoAGkAbgBnACAAZABw
ACAAcgBlAGMAbwByAGQAIABmAG8AcgAgAGEAYwBjAG8AdQBuAHQAIQAgACAAQwBsAGkAZQBuAHQA
IABSAGUAZgBlAHIAZQBuAGMAZQAgAE4AdQBtAGIAZQByADoAewAwAH0AIABGAGkAbABlAE4AYQBt
AGUAOgB7ADEAfQAuAACBUVMARQBMAEUAQwBUACAAQQBSAEEAQwBJAEQAIABGAFIATwBNACAAJQBT
AFQAQQBSAFQAVABBAEIATABFACAAQQBSAEMATABJAEUATgBUACAASQBOAE4ARQBSACAASgBPAEkA
TgAgAEEAUgBBAEMAQwBPAFUATgBUACAATwBOACAAQQBSAEMATABJAEQAIAA9ACAAQQBSAEEAQwBD
AEwAVABJAEQAIABBAE4ARAAgAEEAUgBDAEwASQBEACAASQBOACAAKAAnAEkATgBUAEUARwAxACcA
LAAnAEkATgBUAEUARwAyACcALAAnAEkATgBUAEUARwAzACcALAAnAEkATgBUAEUARwA0ACcALAAn
AEkATgBUAEUARwA1ACcAKQAgAFcASABFAFIARQAgAEEAUgBBAEMAQwBMAEEAQwBDAFQAIAA9ACAA
JwB7ADAAfQAnAAGAq1UAbgBhAGIAbABlACAAdABvACAAZgBpAG4AZAAgAGEAYwBjAG8AdQBuAHQA
IQAgACAAUgBvAHcAIABOAHUAbQBiAGUAcgA6AHsAMAB9ACAAQwBsAGkAZQBuAHQAIABSAGUAZgBl
AHIAZQBuAGMAZQAgAE4AdQBtAGIAZQByADoAewAxAH0AIAAuACAAIABVAHAAZABhAHQAZQAgAFMA
awBpAHAAcABlAGQAABFNAE0AZABkAHkAeQB5AHkAADNFAHgAYwBlAHAAdABpAG8AbgAgAGkAbgAg
AG4AbwB0AGUAcwAgAHMAYwByAGkAcAB0AAAzRQB4AGMAZQBwAHQAaQBvAG4AIABpAG4AbgBlAHIA
IABlAHgAYwBlAHAAdABpAG8AbgAAKUUAeABjAGUAcAB0AGkAbwBuACAAUwB0AGEAYwBrAFQAcgBh
AGMAZQAABSAAIAAAC0MATwBNAEEASwAAAywAAAMuAAADMAAAAy8AAANOAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABVFAHgAYwBlAHAA
dABpAG8AbgBzAAARQQByAHQAaQB2AGEATQBUAAAnRQB4AGMAZQBwAHQAaQBvAG4AQwBvAG4AbgBl
AGMAdABpAG8AbgAADUEAcgB0AGkAdgBhAAAXQwB1AHIAcgBlAG4AdABGAGkAbABlAABxUwBDAF8A
NABhAGMAOABjAGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBi
ADkANQA3AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAADceuX1
3I1lT5jMg0XjevyXAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAkQYVEjkCDg4HIAIBEwATAQMg
AA4EAAEBDiIHDw4CAhFJFRFNARFRElUcElUcFRFNARFREl0SYRJlEmkCBCABHBwFAAICDg4FIAEC
EwAGAAMODhwcBQACDg4cCSADAQ4SPRKAqQMgABwEBhKAsQIGDgUAARFJDgMGEUkFAAASgI0JAAMR
UQ4OEoDBBhURTQERUQUgAQETAAcGFRFNARFRBAoBEl0ECgESYQQKARJlBSAAEoDFCiAGAQgODg4I
EAIEIAASaQYAAw4ODg4DBwEOBxUSgMkBHgALEAEBDhUSgNEBHgAECgEeAAYgAR0OHQMFIAIODg4E
AAECDgYVEkEBEkUJIAMBEnUdCBJ5AwYSdQMGHQgEIAEOCAQgAQIIAyAAAgUgAgEIHAcgAgIOEYDd
BSABHQgIAwcBCAYAAggSeQ4FIAASgOEGIAESgOUOBSAAEoCBBSAAEoDpBiABEoDtHAUAABKA8QYg
ARwSgPUIAAESgPkRgP0FIAASgQEHIAIBDhKBAQi3elxWGTTgiQiJhF3NgIDMkQg+DAjVnMPWVwj6
DO1KRVGnggIGAgcGFRI5Ag4OAwYSPQIGCAcGFRJBARJFAwYSHAMGEiADBhIQAwYSFAMGEn0EBhKA
iQQGEoCNAwYSKAUgAQESDAUgAgEODgYwAQEBHgAEIAEBAgkgBAEIDhJ1EnkLIAQBCB0IHRJ1EnkF
IAEBEn0FAAASgIkGAAEBEoCNBAAAEigDAAABAygADgMoAAIFKAASgIEFCAASgIkFCAASgI0ECAAS
KAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0Nf
NGFjOGNiNGM3NWQzNGE1NTg1NWRjMTA2ZjU1NWI5NTcAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAg
MjAxOQAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5
TmFtZRAuTkVUIEZyYW1ld29yayA0BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAoE4AAAAAAAAAAAAAuk4AAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKxOAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAA
AAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAA
AAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAAB
ABdp+xwAAAEAF2n7HD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkA
bABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAAB
AFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoA
AQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAA
AAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANABhAGMA
OABjAGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3
AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANAAxADkALgAyADYA
OQAwADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABhAGMAOABj
AGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3AC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0
AGEAYwA4AGMAYgA0AGMANwA1AGQAMwA0AGEANQA1ADgANQA1AGQAYwAxADAANgBmADUANQA1AGIA
OQA1ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANABh
AGMAOABjAGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkA
NQA3AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQAMQA5
AC4AMgA2ADkAMAAzAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgA3ADQAMQA5AC4AMgA2ADkAMAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAMw+AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_4ac8cb4c75d34a55855dc106f555b957</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::CurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">cad8cb91cb66b1f123030a9b03dffce3</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">3214c46c072cf46120dca11aa954d812afead487</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Connections[Artiva]"
                      connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                      connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                      name="Artiva" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0].Columns[Payment Amount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Payment Amount"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Payment Amount]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0].Columns[Tender Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Tender Date"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Tender Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0].Columns[Transaction Reference]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Transaction Reference"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Reference]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0].Columns[Account #]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Account #"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Account #]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0].Columns[Transaction Type Code]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Transaction Type Code"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output].Columns[Transaction Type Code]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[ArtivaMT]"
                      hasSideEffects="true"
                      name="ArtivaMT">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[ArtivaMT].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[ArtivaMT].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Payment_Process.Paths[ArtivaMT]"
                  endId="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File.Inputs[Flat File Destination Input]"
                  name="ArtivaMT"
                  startId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[ArtivaMT]" />
                <path
                  refId="Package\Foreach Loop Container\Payment_Process.Paths[Exceptions]"
                  endId="Package\Foreach Loop Container\Payment_Process\Exception File.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Loop Container\Payment_Process.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\Payment_Process\Proess Payment.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Validate_Fields"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{1ae02736-2a91-4042-9f4d-20e9382fc4e1}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate_Fields"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f3ad09c648454d3e904411133d051a20"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::CurrentFile,User::FullInboundDirectory,User::UnMapped,$Package::CurrentFields"
              ReadWriteVariables="User::IsMapped">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_f3ad09c648454d3e904411133d051a20.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d3e4aaf2-ea82-479c-84a7-5a9c236324a9}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4e91ee531881413db3f80afb9f16a973</RootNamespace><AssemblyName>ST_f3ad09c648454d3e904411133d051a20</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text;
#endregion

namespace ST_4e91ee531881413db3f80afb9f16a973
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            

            try
            {
                
                IEnumerable<string> allLines = null;
                string currentfile = (string)Dts.Variables["User::CurrentFile"].Value;
                string unmappedfields = (string)Dts.Variables["User::UnMapped"].Value;
                string[] splitted = null;
                int cnt = 0;
                string currentfields = (string)Dts.Variables["$Package::CurrentFields"].Value;
                string[] currentfieldarr = currentfields.Split(',');
                int fieldcnt = currentfieldarr.Length;
                int ismapped = 1;
                
                var outlines = new StringBuilder("CurrentMapping,, OriginalFields\n");

                string filePath = (string)Dts.Variables["User::FullInboundDirectory"].Value + currentfile;// Variables.FullInboundDirectory + Variables.currentFile;
                if (File.Exists(filePath))
                {

                    allLines = File.ReadLines(filePath);
                }

                foreach (string line in allLines)
                {
                    splitted = line.Split(',');
                    cnt = splitted.Length;

                    if(cnt!=fieldcnt)
                    {
                        outlines.AppendLine("\"" + line + "\"" + ",," + "\"" + currentfields + "\"");
                        ismapped = 0;

                    }


                }
                
                Dts.Variables["User::IsMapped"].Value = ismapped;

                if (ismapped == 0)
                    File.AppendAllText(unmappedfields, outlines.ToString());

            }
            catch (Exception e)
            {
                
                Dts.Events.FireError(18, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0);

            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_4e91ee531881413db3f80afb9f16a973</msb:CodeName>
		<msb:DisplayName>ST_4e91ee531881413db3f80afb9f16a973</msb:DisplayName>
		<msb:ProjectId>{78C18243-DF79-4681-BCF3-23CF5E01533C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f3ad09c648454d3e904411133d051a20.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Settings.get_Default():ST_4e91ee531881413db3f80afb9f16a973.Properties.Sett" +
    "ings")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4e91ee531881413db3f80afb9f16a973.dll">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
AQCHIgAAAACTCFIBAQEBAI8iAAAAAJYIVAYHAQIAliIAAAAAhhgKBQYAAgCeIgAAAACRGBAFDAEC
AAAAAQBsAwkACgUBABEACgUGABkACgUKACkACgUQADEACgUQADkACgUQAEEACgUQAEkACgUQAFEA
CgUQAFkACgUQAGEACgUQAGkACgUGAKEACgUGAMkACgUVANkACgUGAHEAGAYzAOEA3AU4AOkALQQ9
APEAWANDAPkATgZHAIEACgUQAPkAQAZOAAkBOQZUAAkB6gVZAAwA/ARoABQAbwZ3APkAQAZ8AIEA
LgGCABEBewaIABkBogEGAPEAYgOMAKkAjAORAAkBkAaVAOEALgabAJEAxACRAJEApQCRAPkAQAah
ACkB5gSoAOEAYAYBAHEACgUGAKkACgUGADEB9wCxADEBnga6ALEACgXAANEACgUGAAgAFADaAAgA
GADfACkAcwBHAS4ACwAfAS4AEwAoAS4AGwBHAS4AIwBQAS4AKwB5AS4AMwB5AS4AOwB5AS4AQwBQ
AS4ASwB/AS4AUwB5AS4AWwCWAUMAYwDfAEkAcwBHAWEAewDfAGMAawDfABsAAwABAAQAAwAAAMIE
EAEAAGYBFQEAAFgGGgECAAQAAwACAAUABQABAAYABQACAAcABwBiAHEABIAAAAEAAABMHbODAAAA
AAAAIwAAAAQAAAAAAAAAAAAAAMgAgQAAAAAACwAAAAAAAAAAAAAA0QCVAwAAAAAEAAAAAAAAAAAA
AADIADYEAAAAAAsAAAAAAAAAAAAAANEAWgAAAAAAAAAAAAEAAABbBQAABQACAAAAAAAASUVudW1l
cmFibGVgMQBJRW51bWVyYXRvcmAxAEludDMyAFNUXzRlOTFlZTUzMTg4MTQxM2RiM2Y4MGFmYjlm
MTZhOTczADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMA
dmFsdWVfXwBtc2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBnZXRfU3RhY2tUcmFj
ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5SdW50aW1lAEFwcGVuZExpbmUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRl
ZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1
dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29u
ZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0
aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5
Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3Nl
bWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1Zh
bHVlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80
ZTkxZWU1MzE4ODE0MTNkYjNmODBhZmI5ZjE2YTk3My5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0A
cmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AQ2hhcgBTdHJp
bmdCdWlsZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJy
b3IASUVudW1lcmF0b3IAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80
ZTkxZWU1MzE4ODE0MTNkYjNmODBhZmI5ZjE2YTk3My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU1RfNGU5MWVlNTMxODgxNDEzZGIzZjgwYWZiOWYxNmE5NzMu
UHJvcGVydGllcwBnZXRfVmFyaWFibGVzAFJlYWRMaW5lcwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVj
dGlvbnMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29u
Y2F0AE9iamVjdABTcGxpdABnZXRfRGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQ3VycmVudABN
b3ZlTmV4dABTeXN0ZW0uVGV4dABBcHBlbmRBbGxUZXh0AGdldF9Bc3NlbWJseQAAACNVAHMAZQBy
ADoAOgBDAHUAcgByAGUAbgB0AEYAaQBsAGUAAB1VAHMAZQByADoAOgBVAG4ATQBhAHAAcABlAGQA
AC8kAFAAYQBjAGsAYQBnAGUAOgA6AEMAdQByAHIAZQBuAHQARgBpAGUAbABkAHMAAEFDAHUAcgBy
AGUAbgB0AE0AYQBwAHAAaQBuAGcALAAsACAATwByAGkAZwBpAG4AYQBsAEYAaQBlAGwAZABzAAoA
ADVVAHMAZQByADoAOgBGAHUAbABsAEkAbgBiAG8AdQBuAGQARABpAHIAZQBjAHQAbwByAHkAAAMi
AAAJIgAsACwAIgAAHVUAcwBlAHIAOgA6AEkAcwBNAGEAcABwAGUAZAAAHVAAcgBvAGMAZQBzAHMA
IABWAGEAbAB1AGUAcwAABQoACgAAAQBxUwBUAF8ANABlADkAMQBlAGUANQAzADEAOAA4ADEANAAx
ADMAZABiADMAZgA4ADAAYQBmAGIAOQBmADEANgBhADkANwAzAC4AUAByAG8AcABlAHIAdABpAGUA
cwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAp/LTFmRCb0aaRRT1qNUXGwAEIAEBCAMgAAEFIAEBEREE
IAEBDgUgAQERYRcHCxUSPQEODg4OCAgSQQ4VEkUBDg4SSQQgABJxBCAAEnUFIAESeRwDIAAcBiAB
HQ4dAwUAAg4ODgQAAQIOCAABFRI9AQ4OBRUSPQEOCCAAFRJFARMABRUSRQEOBCAAEwAFAAEOHQ4F
IAESQQ4DIAACBCABARwDIAAOBQACAQ4OBSAAEoCVBgADDg4ODgggBQIIDg4OCAgAARKAmRGAnQUg
ABKAoQcgAgEOEoChCLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSEAIGCAMG
ERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkECAASXQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80ZTkxZWU1MzE4ODE0MTNk
YjNmODBhZmI5ZjE2YTk3MwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIwAABHAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJhbWV3
b3JrIDQAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAC4MgAAAAAAAAAAAADSMgAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAxDIAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEAs4NMHQAAAQCzg0wdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0AGUAOQAxAGUAZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYAYgA5
AGYAMQA2AGEAOQA3ADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA1ADAAMAAuADMAMwA3ADEANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwA0AGUAOQAxAGUAZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYAYgA5AGYA
MQA2AGEAOQA3ADMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfADQAZQA5ADEAZQBlADUAMwAxADgAOAAxADQAMQAzAGQAYgAzAGYAOAAwAGEA
ZgBiADkAZgAxADYAYQA5ADcAMwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0AGUAOQAxAGUAZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYA
YgA5AGYAMQA2AGEAOQA3ADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANQAwADAALgAzADMANwAxADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANQAwADAALgAzADMANwAxADUAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAA5DIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{4A42FECE-6E50-43DE-B0FD-25F40D31175B}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::IsMapped] == 1"
          DTS:From="Package\Foreach Loop Container\Validate_Fields"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Payment_Process" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{FEF2EAD7-3F16-4862-B91A-49842FAA03F9}"
          DTS:ObjectName="{FEF2EAD7-3F16-4862-B91A-49842FAA03F9}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="161,42"
          Id="Package\Foreach Loop Container\Payment_Process"
          TopLeft="24,76" />
        <NodeLayout
          Size="149,42"
          Id="Package\Foreach Loop Container\Validate_Fields"
          TopLeft="43,6" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="117.5,48">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-13,28"
              Start="0,0"
              End="-13,20.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10"
                    Point2="0,14"
                    Point3="-4,14" />
                  <mssgle:LineSegment
                    End="-9,14" />
                  <mssgle:CubicBezierSegment
                    Point1="-9,14"
                    Point2="-13,14"
                    Point3="-13,18" />
                  <mssgle:LineSegment
                    End="-13,20.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-14.5,19,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="224,173"
          Size="224,216"
          Id="Package\Foreach Loop Container"
          TopLeft="210,102" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Payment_Process">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\Payment_Process\Get_Mt_Data"
          TopLeft="213,36" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Loop Container\Payment_Process\Proess Payment"
          TopLeft="209.5,131.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\Payment_Process\Exception File"
          TopLeft="312,259.839285714286" />
        <NodeLayout
          Size="174,42"
          Id="Package\Foreach Loop Container\Payment_Process\Artiva MT Notes File"
          TopLeft="93.571428571429,254.821428571429" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Payment_Process.Paths[Exceptions]"
          TopLeft="310.833333333333,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="73.1666666666667,86.339285714286"
              Start="0,0"
              End="73.1666666666667,78.839285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0683988248257" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.0683988248257"
                    Point2="0,35.0683988248257"
                    Point3="4,35.0683988248257" />
                  <mssgle:LineSegment
                    End="69.1666666666667,35.0683988248257" />
                  <mssgle:CubicBezierSegment
                    Point1="69.1666666666667,35.0683988248257"
                    Point2="73.1666666666667,35.0683988248257"
                    Point3="73.1666666666667,39.0683988248257" />
                  <mssgle:LineSegment
                    End="73.1666666666667,78.839285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="12.5157552083333,40.0683988248257,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Payment_Process.Paths[ArtivaMT]"
          TopLeft="262.166666666667,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-81.5952380952377,81.321428571429"
              Start="0,0"
              End="-81.5952380952377,73.821428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.0302974660303" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.0302974660303"
                    Point2="0,33.0302974660303"
                    Point3="-4,33.0302974660303" />
                  <mssgle:LineSegment
                    End="-77.5952380952377,33.0302974660303" />
                  <mssgle:CubicBezierSegment
                    Point1="-77.5952380952377,33.0302974660303"
                    Point2="-81.5952380952377,33.0302974660303"
                    Point3="-81.5952380952377,37.0302974660303" />
                  <mssgle:LineSegment
                    End="-81.5952380952377,73.821428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-61.3293963913689,38.0302974660303,41.0635546875,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Payment_Process.Paths[Flat File Source Output]"
          TopLeft="285,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.5"
              Start="0,0"
              End="0,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>