<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/10/2020 8:31:00 AM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{FA1DAD6E-43EA-4DC7-A301-E6626EB28B77}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Placements"
  DTS:PackageType="5"
  DTS:VersionBuild="74"
  DTS:VersionGUID="{3410A9A5-7506-486D-B144-A54519F253E3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[artiva_import_file]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{3BAC4D6D-20C3-4295-BCAE-B36337814684}"
      DTS:ObjectName="artiva_import_file">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullOutboundDirectory] + "ArtivaNB-" + @[$Project::Namespace] + "-" + @[$Project::ClientName] + "-" +  @[User::PathInputFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\ArtivaNB-THIRDPROD-Integra Credit-0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="2000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="RowData"
              DTS:DTSID="{DCBD1454-6EF8-4BAD-83F7-1338503EC79A}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Input Source]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{A4065F2D-5CFA-46F0-9FEB-D4083CA9F7B1}"
      DTS:ObjectName="Input Source">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory]  + @[User::PathInputFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Inbound\0">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Reference Number"
              DTS:DTSID="{7CC4D8BD-E3F8-4481-92B2-C67E88E125F4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Loan Number"
              DTS:DTSID="{83B1E3AC-402D-4CCA-9B77-58E1588A100D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Principal Balance Due"
              DTS:DTSID="{CFEFDF33-F1F6-45E9-8DF0-5B2043056EC5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Interest Balance Due"
              DTS:DTSID="{D9699A04-48BE-49F8-A721-016AE0B66B6E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Other Balance Due"
              DTS:DTSID="{D55AF756-DD2E-4FF9-9C20-320D436F09E3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Service Date"
              DTS:DTSID="{C95CD9C9-4255-43ED-B314-6BC7CF17BD73}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Delinquency Date"
              DTS:DTSID="{7161F770-8DC1-42E9-AFEC-C2CDAAC4E2CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Chargeoff Date"
              DTS:DTSID="{9B1604F4-0958-4907-8706-D60462AD2E52}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Description of Debt"
              DTS:DTSID="{C41A9215-6F09-46A3-B839-BD037AA4908D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Last Payment Date"
              DTS:DTSID="{8CD1F0F3-6375-44AD-B96C-9C02216B2BF8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Client Last Payment Amount"
              DTS:DTSID="{54FF0CF9-8391-44C3-BFDF-ECFD1B082505}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer First Name"
              DTS:DTSID="{6BD0161D-0708-4EAF-B9C3-7EF6A184F28B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Last Name"
              DTS:DTSID="{34D8C028-A84F-4286-87AD-C4A38AB936C4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Address"
              DTS:DTSID="{56486336-922E-41D1-8B19-D4F68FE60709}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Address 2"
              DTS:DTSID="{B24E3EE0-2001-4BB7-A5DE-0ED26B8646C8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer City"
              DTS:DTSID="{3112A05E-3055-4A8C-A150-86208F70955C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer State"
              DTS:DTSID="{54F3AD29-C8DD-4297-A3EB-C85FA04B1904}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Zip"
              DTS:DTSID="{1FBF2FAF-9A61-465D-B60E-9F2A792A29AA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Home Phone Number"
              DTS:DTSID="{92B8405D-4AE9-4C54-870C-B6E428CD16A6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer POE Phone Number"
              DTS:DTSID="{7C01FEC5-734F-47D3-A85C-B00C82A2E37E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Mobile Number"
              DTS:DTSID="{8D27A447-015D-40B3-A6E7-7A09B1520AAB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Customer Email Address"
              DTS:DTSID="{05009855-F9D9-488E-AE9A-CE461642FFD6}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Due"
              DTS:DTSID="{C88E563A-95A5-4CD9-AF8E-0658130BA318}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Interest Accrued"
              DTS:DTSID="{D419F0C0-35B3-4CEA-B8E7-85DC6DC523EE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt Non Interest Charges"
              DTS:DTSID="{55F8E00A-F941-4502-A0D6-49DE94B20981}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Total Amt of Pmts Made on Debt"
              DTS:DTSID="{FF565E39-9327-4271-83B5-5364178FF127}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="500"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Original Lender Name"
              DTS:DTSID="{BD04BB12-48DA-44AC-978A-5B4D4BDF9D1D}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[NYCOHOLD]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{7a6a0e35-5ba8-46ca-917a-36474c7437dc}"
      DTS:ObjectName="NYCOHOLD">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::NYCOHOLDReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\0-NYCOHOLDReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{91B5F126-0EA0-4BB5-9422-CC11BF9F8F76}"
      DTS:ObjectName="CurrentFields">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Client Reference Number,Client Loan Number,Principal Balance Due,Interest Balance Due,Other Balance Due,Service Date,Delinquency Date,Chargeoff Date,Description of Debt,Client Last Payment Date,Client Last Payment Amount,Customer First Name,Customer Last Name,Customer Address,Customer Address 2,Customer City,Customer State,Customer Zip,Customer Home Phone Number,Customer POE Phone Number,Customer Mobile Number,Customer Email Address,Total Amt Due,Total Amt Interest Accrued,Total Amt Non Interest Charges,Total Amt of Pmts Made on Debt,Original Lender Name,SSN,Date Of Birth,Bank Name,bank_account_1st_4_digits</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{58FFF410-09E3-4A33-BCAE-0203B73DDEC5}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{257B842C-159F-400C-82FE-1E4162FB9289}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*IntegraPlacement_*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{EDC5C54B-D147-4F4A-AAF9-5AD2981BBE54}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{D40F1AD6-E914-4B23-BDBB-4DBF92643FBD}"
      DTS:ObjectName="WorksheetIndex">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{17655618-BABF-4D51-B7E8-0798C9893719}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientID">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F8635BCB-C0F1-4224-9779-F5556C53EB70}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ClientName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AC1AEF6E-487B-476F-A0A2-75DD423B0E97}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::PathInputFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CECB3B76-6A19-4A2B-8C58-78B7DB237EB7}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F715476-AB0F-4E17-BA8D-F11F7A02EE5B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{66694CA2-52B4-410E-A349-9F479C630B79}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="IsMapped">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E008BCEB-24C0-4648-A973-B92B9EB63B0B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::PathInputFile]  + &quot;-NYCOHOLDReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="NYCOHOLDReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-NYCOHOLDReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F73FBAED-548C-42DA-90C6-2ECA1EE09E9E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathInputFile">
      <DTS:VariableValue
        DTS:DataType="8">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A903DBE4-D7E9-4CEB-96E5-3B9DEC29EB6D}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ProcessType">
      <DTS:VariableValue
        DTS:DataType="8">Placement</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{502CAEE9-55A4-489A-9A59-1B02F8F93078}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::PathInputFile]  + &quot;-UnMappedFields.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="UnMapped">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\0-UnMappedFields.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Downloaded File"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{ed4972e3-8768-4083-868d-b3ecc08ca327}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Downloaded File">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{8585CBC2-73BC-403A-BC76-A6F16B2DE740}"
        DTS:ObjectName="{8585CBC2-73BC-403A-BC76-A6F16B2DE740}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Inbound\" />
            <FEFEProperty
              FileSpec="*IntegraPlacement_*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Downloaded File\Process placement File"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{f6b7d27e-4a04-4bf4-bf36-5663c74cc376}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="Process placement File">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Artiva File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[artiva_import_file]"
                      connectionManagerRefId="Package.ConnectionManagers[artiva_import_file]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].Columns[RowData]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="RowData"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input].ExternalColumns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          name="RowData" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Flat File Source"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Flat File Source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Input Source]"
                      connectionManagerRefId="Package.ConnectionManagers[Input Source]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Reference Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]"
                          name="Client Reference Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Loan Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]"
                          name="Client Loan Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Principal Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]"
                          name="Principal Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Interest Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]"
                          name="Interest Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Other Balance Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]"
                          name="Other Balance Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Service Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]"
                          name="Service Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Delinquency Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]"
                          name="Delinquency Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Chargeoff Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]"
                          name="Chargeoff Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description of Debt]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]"
                          name="Description of Debt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Date]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]"
                          name="Client Last Payment Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Amount]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]"
                          name="Client Last Payment Amount"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer First Name]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]"
                          name="Customer First Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Last Name]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]"
                          name="Customer Last Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address]"
                          length="500"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]"
                          name="Customer Address"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address 2]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]"
                          name="Customer Address 2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer City]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]"
                          name="Customer City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer State]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]"
                          name="Customer State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Zip]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]"
                          name="Customer Zip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Home Phone Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]"
                          name="Customer Home Phone Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer POE Phone Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]"
                          name="Customer POE Phone Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Mobile Number]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]"
                          name="Customer Mobile Number"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Email Address]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]"
                          name="Customer Email Address"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Due]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]"
                          name="Total Amt Due"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Interest Accrued]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]"
                          name="Total Amt Interest Accrued"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Non Interest Charges]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]"
                          name="Total Amt Non Interest Charges"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt of Pmts Made on Debt]"
                          length="50"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]"
                          name="Total Amt of Pmts Made on Debt"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Original Lender Name]"
                          length="500"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]"
                          name="Original Lender Name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Reference Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Reference Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Loan Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Loan Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Principal Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Principal Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Interest Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Interest Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Other Balance Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Other Balance Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Service Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Service Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Delinquency Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Delinquency Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Chargeoff Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Chargeoff Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Description of Debt]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Description of Debt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Date]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Last Payment Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Client Last Payment Amount]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Client Last Payment Amount" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer First Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer First Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Last Name]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Last Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Customer Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Address 2]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Address 2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer City]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer State]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Zip]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Zip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Home Phone Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Home Phone Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer POE Phone Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer POE Phone Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Mobile Number]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Mobile Number" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Customer Email Address]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Customer Email Address" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Due]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Due" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Interest Accrued]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Interest Accrued" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt Non Interest Charges]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt Non Interest Charges" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Total Amt of Pmts Made on Debt]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Total Amt of Pmts Made on Debt" />
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].ExternalColumns[Original Lender Name]"
                          codePage="1252"
                          dataType="str"
                          length="500"
                          name="Original Lender Name" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Nycohold"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Nycohold">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[NYCOHOLD]"
                      connectionManagerRefId="Package.ConnectionManagers[NYCOHOLD]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedDataType="wstr"
                          cachedLength="4000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Downloaded File\Process placement File\Process records"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Process records"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="33">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_0cc6f3f9bf4547ec9496e5e2650ced01")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_0cc6f3f9bf4547ec9496e5e2650ced01")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using SC_0cc6f3f9bf4547ec9496e5e2650ced01;
using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;
using System.Linq;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : BaseService
{
    private bool _exceptionReportCreated = false;
    private bool _nycoholdReportCreated = false;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    private Dictionary<string, string> clients;
    private Dictionary<string, string> clientids;
    public override void PreExecute()
    {
        base.PreExecute();
        clients = new Dictionary<string, string> { { "integra_credit_one", "Integra Credit One, LLC" },
            { "integra_credit_two", "Integra Credit Two, LLC" }, { "integra_credit_three", "Integra Credit Three, LLC" },
            { "integra_credit_four", "Integra Credit Four, LLC" }, { "integra_credit_five", "Integra Credit Five, LLC" } };
        clientids = new Dictionary<string, string> { { "integra_credit_one", "INTEG1" },
            { "integra_credit_two", "INTEG2" }, { "integra_credit_three", "INTEG3" },
            { "integra_credit_four", "INTEG4" }, { "integra_credit_five", "INTEG5" } };

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
        if(!_nycoholdReportCreated)
            System.IO.File.Delete(Connections.HYCOHOLDConnection.ConnectionString);
    }


    private int nycoholdcount;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        if(!(Row.ClientReferenceNumber.Trim().Distinct().Count() == 1 || Row.ClientReferenceNumber=="NULL" || Row.ClientReferenceNumber == ""))
        {

            try
            {
                if (Row.DelinquencyDate=="NULL" || Row.DelinquencyDate == "" || Row.DelinquencyDate == "00/00/0000")
                {
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = "Delinquency Date is Required. Invalid deliquency date for client reference number:  " + Row.ClientReferenceNumber + ". Need to get distro.";
                    _exceptionReportCreated = true;
                    return;
                }
                
                if (Row.OriginalLenderName=="NULL" || Row.OriginalLenderName == "" || !clients.ContainsKey(Row.OriginalLenderName.Trim()))
                {
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = "Original lender incorrect or missing value for client reference number:  " + Row.ClientLoanNumber + ".";
                    _exceptionReportCreated = true;
                    return;
                }


                PartyInformation_20 Record20 = new PartyInformation_20();
                AccountInformation_10 Record10 = new AccountInformation_10();
                PlacementInformation_100 Record100 = new PlacementInformation_100();
                OriginalOrFormerCreditor_102 Record102 = new OriginalOrFormerCreditor_102();
                ClientBankingInformation_807 Record807 = new ClientBankingInformation_807();

                #region Record 10
                Record10.ListedDate = DateTime.Today;                
                Record10.ClientID = clientids[Row.OriginalLenderName];
                Record10.DebtDescription = Row.DescriptionofDebt.Trim().Distinct().Count() == 1 || Row.DescriptionofDebt=="NULL" || Row.DescriptionofDebt=="" ? "" : Row.DescriptionofDebt.Replace("_"," ");
               
                Record10.SOLAgreementType = "WRITTEN";
                
                string cln = Row.ClientLoanNumber.Trim().Distinct().Count() == 1 || Row.ClientLoanNumber=="NULL" || Row.ClientLoanNumber == "" ? "" : Row.ClientLoanNumber;
                string cstate = Row.CustomerState.Trim().Distinct().Count() == 1 || Row.CustomerState=="NULL" || Row.CustomerState == "" ? "" : Row.CustomerState;

                Record10.ClientReferenceNumber = cln;
                Record10.SOLState = cstate;
                Record10.PrincipalInitalBalance = Row.PrincipalBalanceDue.Trim().Distinct().Count() == 1 || Row.PrincipalBalanceDue=="NULL" || Row.PrincipalBalanceDue == "" ? 0 : Convert.ToDecimal(Row.PrincipalBalanceDue);
                Record10.InterestInitialBalance = Row.InterestBalanceDue.Trim().Distinct().Count() == 1 || Row.InterestBalanceDue=="NULL" || Row.InterestBalanceDue == "" ? 0 : Convert.ToDecimal(Row.InterestBalanceDue);
                Record10.OtherInitialBalance = Row.OtherBalanceDue.Trim().Distinct().Count() == 1 || Row.OtherBalanceDue=="NULL" || Row.OtherBalanceDue == "" ? 0 : Convert.ToDecimal(Row.OtherBalanceDue);


                Record10.ServiceDate = Row.ServiceDate.Trim().Distinct().Count() == 1 || Row.ServiceDate=="NULL" || Row.ServiceDate == "" ? (DateTime?)null : getDate(Row.ServiceDate);

                DateTime? dq = Row.DelinquencyDate.Trim().Distinct().Count() == 1 || Row.DelinquencyDate=="NULL" || Row.DelinquencyDate == "" ? (DateTime?)null : getDate(Row.DelinquencyDate);

                Record10.DelinquencyDate = dq;
                Record10.SOLDate = dq;
                Record10.ChargeOffDate = Row.ChargeoffDate.Trim().Distinct().Count() == 1 || Row.ChargeoffDate=="NULL" || Row.ChargeoffDate == "" ? (DateTime?)null : getDate(Row.ChargeoffDate);
                Record10.ClientLastPayDate = Row.ClientLastPaymentDate.Trim().Distinct().Count() == 1 || Row.ClientLastPaymentDate=="NULL" || Row.ClientLastPaymentDate == "" ? (DateTime?)null : getDate(Row.ClientLastPaymentDate);
                Record10.ClientLastPayAmount = Row.ClientLastPaymentAmount.Trim().Distinct().Count() == 1 || Row.ClientLastPaymentAmount=="NULL" || Row.ClientLastPaymentAmount == "" ? 0 : Convert.ToDecimal(Row.ClientLastPaymentAmount);
                Record10.TotalAmountDueAsOfChargeOff = Row.TotalAmtDue.Trim().Distinct().Count() == 1 || Row.TotalAmtDue=="NULL" || Row.TotalAmtDue == "" ? 0 : Convert.ToDecimal(Row.TotalAmtDue);

                Record10.TotalAmountOfInterestAccuredSinceChargeOff = Row.TotalAmtInterestAccrued.Trim().Distinct().Count() == 1 || Row.TotalAmtInterestAccrued=="NULL" || Row.TotalAmtInterestAccrued == "" ? 0 : Convert.ToDecimal(Row.TotalAmtInterestAccrued);
                Record10.TotalAmountOfNonInterestChargesAndFeesAccuredSinceChargeOff = Row.TotalAmtNonInterestCharges.Trim().Distinct().Count() == 1 || Row.TotalAmtNonInterestCharges=="NULL" || Row.TotalAmtNonInterestCharges == "" ? 0 : Convert.ToDecimal(Row.TotalAmtNonInterestCharges);
                Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff = Row.TotalAmtofPmtsMadeonDebt.Trim().Distinct().Count() == 1 || Row.TotalAmtofPmtsMadeonDebt=="NULL" || Row.TotalAmtofPmtsMadeonDebt == "" ? 0 : Convert.ToDecimal(Row.TotalAmtofPmtsMadeonDebt);


                #endregion

                #region Record 20

                Record20.FirstName = Row.CustomerFirstName.Trim().Distinct().Count() == 1 || Row.CustomerFirstName=="NULL" || Row.CustomerFirstName == "" ? "" : Row.CustomerFirstName;
                Record20.LastName = Row.CustomerLastName.Trim().Distinct().Count() == 1 || Row.CustomerLastName=="NULL" || Row.CustomerLastName == "" ? "" : Row.CustomerLastName;
                                
                Record20.AddressLine = Row.CustomerAddress.Trim().Distinct().Count() == 1 || Row.CustomerAddress=="NULL" || Row.CustomerAddress == "" ? "" : Row.CustomerAddress;
                Record20.AddressUnit_AptOrPOBox = Row.CustomerAddress2.Trim().Distinct().Count() == 1 || Row.CustomerAddress2=="NULL" || Row.CustomerAddress2 == "" ? "" : Row.CustomerAddress2;
                Record20.City = Row.CustomerCity.Trim().Distinct().Count() == 1 || Row.CustomerCity=="NULL" || Row.CustomerCity == "" ? "" : Row.CustomerCity;
                Record20.State = cstate;

                Record20.PostalCode = Row.CustomerZip.Trim().Distinct().Count() == 1 || Row.CustomerZip=="NULL" || Row.CustomerZip == "" ? "" : Row.CustomerZip;

                Record20.PrimaryPhoneNumber = Row.CustomerHomePhoneNumber.Trim().Distinct().Count() == 1 || Row.CustomerHomePhoneNumber=="NULL" || Row.CustomerHomePhoneNumber == "" ? "" : Row.CustomerHomePhoneNumber;
                Record20.POEPhoneNumber = Row.CustomerPOEPhoneNumber.Trim().Distinct().Count() == 1 || Row.CustomerPOEPhoneNumber=="NULL" || Row.CustomerPOEPhoneNumber == "" ? "" : Row.CustomerPOEPhoneNumber;
                       
                Record20.AlternatePhoneNumber = Row.CustomerMobileNumber.Trim().Distinct().Count() == 1 || Row.CustomerMobileNumber=="NULL" || Row.CustomerMobileNumber == "" ? "" : Row.CustomerMobileNumber;
                Record20.AlternatePhoneFlag = String.IsNullOrEmpty(Record20.AlternatePhoneNumber) ? "" : "C";

                Record20.EmailAddress = Row.CustomerEmailAddress.Trim().Distinct().Count() == 1 || Row.CustomerEmailAddress=="NULL" || Row.CustomerEmailAddress == "" ? "" : Row.CustomerEmailAddress;
                Record20.SourceOfEmail = String.IsNullOrEmpty(Record20.EmailAddress) ? (int?)null : 1;
                Record20.RelationshipTypeKey = "PRIM";
                

                Decimal totalA = (Record10.TotalAmountDueAsOfChargeOff + Record10.TotalAmountOfInterestAccuredSinceChargeOff 
                    + Record10.TotalAmountOfNonInterestChargesAndFeesAccuredSinceChargeOff) 
                    - (Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff);
                Decimal sumB = Record10.PrincipalInitalBalance + Record10.InterestInitialBalance + Record10.OtherInitialBalance;
                Decimal val = Decimal.Compare(totalA, sumB);
                if (val!=0 && cstate=="NY")
                {
                    nycoholdcount++;
                    Record20.StatusCode = "NYCOHOLD";
                    
                    if (nycoholdcount == 1)
                    {
                        NYCOHOLDBuffer.AddRow();
                        NYCOHOLDBuffer.Data = "Client RP Account Number,Client Loan number,Current Balance,Total Amount Due as of Charge Off,Total Amt of Pmts Made on Debt since Charge Off,Difference";
                    }

                    NYCOHOLDBuffer.AddRow();
                    NYCOHOLDBuffer.Data = Row.ClientReferenceNumber + "," + Row.ClientLoanNumber + "," + totalA.ToString() + "," + Record10.TotalAmountDueAsOfChargeOff.ToString() + "," + Record10.TotalAmountOfPaymentsMadeOnDebtSinceChargeOff.ToString() + "," + getNonpemdas(totalA, sumB).ToString();


                    _nycoholdReportCreated = true;

                }

                #endregion

                #region Record 100                
                Record100.IncomingFileName = Variables.PathInputFile;
                Record100.DateLoaded = DateTime.Today;
                Record100.CreditorInternalConsumerNumber = Row.ClientReferenceNumber;
                Record100.BKEffectiveDate = Record10.ServiceDate;
                #endregion

                #region Record 102
                Record102.OriginalLender = clients[Row.OriginalLenderName];
                #endregion

                #region Record 807
                Record807.OriginalLoanNumber = cln;               
                #endregion

                AddPlacementRow(Record10);
                AddPlacementRow(Record20);
                AddPlacementRow(Record100);
                AddPlacementRow(Record102);
                AddPlacementRow(Record807);



            }
            catch (Exception ex)
            {
                bool cancel = false;
                ComponentMetaData.FireError(10, "Exception in script", ex.Message, "", 0, out cancel);
                if (ex.InnerException != null)
                {
                    ComponentMetaData.FireError(10, "Exception inner exception", ex.InnerException.Message, "", 0, out cancel);
                }
                ComponentMetaData.FireError(10, "Exception StackTrace", ex.StackTrace, "", 0, out cancel);
                return;
            }
        }

    }

    private Decimal getNonpemdas(Decimal val, Decimal subtraction)
    {

        int signval = Math.Sign(val);
        int signsubtraction = Math.Sign(subtraction);

        Decimal tot = 0m;

        if (signval == -1 && signsubtraction == 1)
        {

            if (Decimal.Negate(val) > subtraction)
                tot = Decimal.Negate(Decimal.Negate(val) - subtraction);
            else
                tot = subtraction - Decimal.Negate(val);
        }
        else if (signval == 1 && signsubtraction == -1)
        {
            tot = val - Decimal.Negate(subtraction);
        }
        else if (signval == -1 && signsubtraction == -1)
        {
            tot = Decimal.Negate(val) + Decimal.Negate(subtraction);
            tot = Decimal.Negate(tot);
        }
        else
            tot = val - subtraction;

        return tot;

    }

    private string getFormateddate(string str)
    {

        str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
        str = str.Length < 8 ? str.Insert(2, "0") : str;

        return str;
    }

    private static void AddToListRecord203(AccountFreeFormText_203 Record203, List<AccountFreeFormText_203> ListRecord203)
    {
        if (!Record203.FreeFormText.ToUpper().Contains("XXXX"))
        {
            ListRecord203.Add(Record203);
        }
    }

    private DateTime? getDate(string sDt)
    {

        string[] format = {"Mddyyyy", "MMddyyyy",
                     "Mdyyyy", "MMdyyyy"};
        var dateculture = new System.Globalization.CultureInfo("en-US");

        DateTime dt;
        if (DateTime.TryParseExact(getFormateddate(sDt), format, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out dt))
        {
            return dt;
        }
        return null;
    }

    private void WriteExceptionMessage(string msg, string data)
    {
        _exceptionReportCreated = true;
        ExceptionsBuffer.AddRow();
        ExceptionsBuffer.Data = string.Format("Line:{0}  Message:{1}  Detail:{2}", InputRecordCount, msg, data);
    }

    private void add203(string label, string data, List<AccountFreeFormText_203> rec203s)
    {
        if (string.IsNullOrEmpty(data))
            return;

        rec203s.Add(new AccountFreeFormText_203 { FreeFormText = label + data });
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

        Output0Buffer.AddRow();
        Output0Buffer.RowData = recordString.ToUpper();
    }
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0cc6f3f9bf4547ec9496e5e2650ced01.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{364A8333-AB0A-48CD-A1C2-6331F8B6E867}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_0cc6f3f9bf4547ec9496e5e2650ced01</RootNamespace>
    <AssemblyName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91">
      <Private>False</Private>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Mapper.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public NYCOHOLDBuffer NYCOHOLDBuffer;

    public Output0Buffer Output0Buffer;

    public ExceptionsBuffer ExceptionsBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != NYCOHOLDBuffer)
        {
            NYCOHOLDBuffer.SetEndOfRowset();
            NYCOHOLDBuffer = null;
        }

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"NYCOHOLD"))
            {
                NYCOHOLDBuffer = new NYCOHOLDBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 HYCOHOLDConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"HYCOHOLDConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String ClientID
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["ClientID"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String PathInputFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["PathInputFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Mapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

using RGS.ArtivaGeneralPurpose.Data.Records;
using FileHelpers;


        public class BaseRecord
        {

            public override string ToString()
            {
                return BaseService.FHEngine.WriteString(new List<object>() { this });
            }
            public BaseRecord()
            { }
            public string GetHeader()
            {
                string delim = ",";// TODO:: finish this,...if needed or pass in the delimiter if we need to vary the value...or use the attribute ( GetType().GetCustomAttributes (typeof(DelimitedRecordAttribute ),false).FirstOrDefault() as DelimitedRecordAttribute )
                return string.Join(delim, GetType().GetFields().Select(p => p.Name));
            }

            [FieldHidden]
            private static Dictionary<string, string> recordLayoutExamples;
            public static string GetRecordLayoutExample(string className)
            {
                if (recordLayoutExamples == null)
                {
                    recordLayoutExamples = new Dictionary<string, string>();
                    string Template = "";
                    int FldNum = 0;
                    string ClassName = "";
                    new BaseRecord()
                            .GetType().Assembly
                            .GetTypes().Where(n => n.BaseType.Name == "BaseRecord").ToList()
                            .ForEach(rectyp =>
                            {
                                Template = "";
                                ClassName = string.Format("{0}", rectyp.Name);
                            //find the filehelpers attributes to determine if its fixed length or delimited
                            var DelimitedAttrs = rectyp.GetCustomAttributes(typeof(FileHelpers.DelimitedRecordAttribute), false);
                                var FixedAttrs = rectyp.GetCustomAttributes(typeof(FileHelpers.FixedLengthRecordAttribute), false);

                                if ((DelimitedAttrs != null && DelimitedAttrs.Length > 0) || (FixedAttrs != null && FixedAttrs.Length > 0))
                                {
                                    FldNum = 0;
                                    rectyp.GetFields()
                                    .ToList()
                                    .ForEach(fld =>
                                    {
                                        FldNum++;

                                        if (DelimitedAttrs != null && DelimitedAttrs.Length > 0)
                                        {
                                            FileHelpers.DelimitedField df = DelimitedAttrs[0] as FileHelpers.DelimitedField;
                                        //add the comma
                                        Template += FldNum == 1 ? "" : ",";
                                        //stuff the fields with 0000011111222223333344444.....999990000011111...
                                        Template += "".PadRight(5, FldNum.ToString().Last());
                                        }
                                        else
                                        {
                                            if (FixedAttrs != null && FixedAttrs.Length > 0)
                                            {
                                                var FixedFieldAttr = fld.GetCustomAttributes(typeof(FileHelpers.FieldFixedLengthAttribute), false);
                                                if (FixedFieldAttr != null && FixedFieldAttr.Length > 0)
                                                {
                                                    FileHelpers.FieldFixedLengthAttribute ff = FixedFieldAttr[0] as FileHelpers.FieldFixedLengthAttribute;
                                                //stuff the fields with 0000011111222223333344444.....999990000011111...
                                                Template += "".PadRight(ff.Length, FldNum.ToString().Last());
                                                }
                                                else
                                                {
                                                    Template += String.Format("\n\n\n\nError!  fld.GetCustomAttributes(typeof(FileHelpers.FixedLengthField), false) didnt return any data.  check the file make sure the fields all have  fixed field attr....");
                                                }
                                            }
                                        }

                                    });
                                }

                                recordLayoutExamples.Add(ClassName, Template);
                            });
                }

                return recordLayoutExamples.ContainsKey(className) ? recordLayoutExamples[className] : string.Format("could not determine record layout for class [{0}]", className);

            }

        }
        public class BaseService : UserComponent
        {

            protected string ClientId = "";
 
            protected int InputRecordCount;


            /// <summary>
            ///contains the substring of the Record Identifier from the current/last row processed 
            /// </summary>
            protected static string RecordTypeName;

            /// <summary>
            /// Contains the type of record from the current/last row processed
            /// </summary>
            protected static Type RecordType;

            protected string FileName { get; set; }

            protected List<string> DebugInfo = new List<string>();


            public List<string> FilesWritten = new List<string>();

            public IEnumerable<string> GetDebugDetails()
            {
                return DebugInfo;
            }


 

        protected string getCSV( GeneralPurposeRecordBase  record)
        {
            return FHEngine.WriteString(new List<GeneralPurposeRecordBase>() { record }).ToUpper().TrimEnd("\n".First()).TrimEnd("\r".First()).Replace("XXXXXXXXXXXXX","");
        }
  

        

            public class EmailMessage
            {
                public string To;
                public string Body;
                public string Subject;
                public string Attachments;
                public string From;
                public string NotificationCategory;
            }


     
            private static MultiRecordEngine fHEngine = null;
            public static MultiRecordEngine FHEngine
            {
                get
                {
                    if (fHEngine == null)
                    {
                        fHEngine = new FileHelpers.MultiRecordEngine(new Type[]
                              { 
                             //client entities
                             //artiva entities
                             typeof(AccountFreeFormTextMntOnly_203),  typeof(ConsumerFreeFormTextMntOnly_205), typeof(DeceasedInformation_104), typeof(DisputeAccountInformation_213), typeof(Education_811),
                             typeof(ImportantNote_INOTE),  typeof(MiscellaneousSIFInfo_204), typeof(PartyPreviousAddress_24), typeof(PendingRecall_210),
                             typeof(PossibleAddresses_706), typeof(PossiblePhonesMaintenance_208), typeof(PriorCollectionContacts_115), typeof(RequestForTitleLienRelease_217), typeof(ResponsiblePartyInfo_112),
                             typeof(RetailClubInformation_808), typeof(ClientBankingInformation_807), typeof(ClientGeneralPatientInformation_804), typeof(ClientCommercialInformation_805), typeof(PossiblePhones_208),
                             typeof(ConsumerFreeFormText_205), typeof(AccountFreeFormText_203), typeof(AccountInformation_10), typeof(Adjustment_ADJ), typeof(AssignRoute_RTE), typeof(ClientTelcomInformation_806),
                             typeof(ClientInsuranceInformation_802), typeof(LetterRequest_LET), typeof(PaymentReversal_REV), typeof(Payment_PAY), typeof(Reactivate_REACT), typeof(SegmentationScores_110),
                             typeof(SIFTracking_209), typeof(SkipPhone_214), typeof(StatusCodeUpdate_ST), typeof(CloseAccount_C), typeof(CloseInfoToClient_202), typeof(InsuredInformation_800),
                             typeof(ClientRecallInfo_201), typeof(NewInsuranceInformation_803), typeof(OriginalOrFormerCreditor_102), typeof(PartyInformation_20), typeof(PendrickNote_900), typeof(PendrickVNotes_906),
                             typeof(KeeperInfo_200), typeof(PlacementInformation_100),   typeof(UpdateCBRInfo_CBR), typeof(UpdateField_U), typeof( AdditionalBankingInformation_812), typeof( MailReturnInformation_111 ),
                             typeof(CableCellUtilityInformation_809)
                              });
                }

                    //if (fHEngine.RecordSelector == null)
                    //{
                    //    fHEngine.RecordSelector = BaseService.CustomSelector;
                    //    // fHEngine.BeforeReadRecord += FHEngineBeforeReadRecord;
                    //    fHEngine.AfterReadRecord += FHEngineAfterReadRecord;
                    //}

                    return fHEngine;
                }
                set { fHEngine = value; }
            }
 
            /// <summary>
            /// Used by FileHelpers to identify the type of record 
            /// </summary>
            /// <param name="engine">An instance of Filehelpers engine initialized with classes used by this mehtod</param>
            /// <param name="recordLine">the csv record</param>
            /// <returns>The type to be used to deserialize recordLine</returns>
            protected static Type CustomSelector(MultiRecordEngine engine, string recordLine)
            {

                if (recordLine.Length == 0)
                {
                    return null;
                }

                //ServiceBase.RecordTypeName = recordLine.Substring(0, 3);
                //if (ServiceBase.RecordTypeName != "HDR" && ServiceBase.RecordTypeName != "TLR")
                //{ //placement record            

                //    ServiceBase.RecordTypeName = recordLine.Substring(0, 13).Split(DELIMITER)[1];

                //}

                //switch (ServiceBase.RecordTypeName)
                //{
                //    case "CN":
                //        RecordType = typeof(PlacementRecord);
                //        break;
                //    case "RC":
                //        RecordType = typeof(IBRecall);
                //        break;
                //    case "CC":
                //        RecordType = typeof(Cosigner);
                //        break;
                //    case "CE":
                //        RecordType = typeof(EmployerInformation);
                //        break;
                //    case "CR":
                //        RecordType = typeof(ReferenceInformation);
                //        break;
                //    case "CP":
                //        RecordType = typeof(PhoneInformation);
                //        break;
                //    case "CA":
                //        RecordType = typeof(AutomotiveRecord);
                //        break;
                //    case "CB":
                //        RecordType = typeof(DismissedBankruptcyRecord);
                //        break;
                //    case "SL":
                //        RecordType = typeof(StudentLoanRecord);
                //        break;
                //    case "CS":
                //        RecordType = typeof(PortfolioDetailsRecord);
                //        break;
                //    case "HDR":
                //        RecordType = typeof(StandardClientHeader);
                //        break;
                //    case "TLR":
                //        RecordType = typeof(ClientPlacementTrailer);
                //        break;
                //    default:
                //        throw new ArgumentException(string.Format("Record Type Code[{0}] at [Position:35,Length:2] is not supported.  Record[{1}]", ServiceBase.RecordTypeName, recordLine), "Record Type");
                //        break;
                //}

                return RecordType;

            }

            public void Dispose()
            {

            }
        }

   
     ]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ClientReferenceNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool ClientReferenceNumber_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String ClientLoanNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool ClientLoanNumber_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String PrincipalBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool PrincipalBalanceDue_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String InterestBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool InterestBalanceDue_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String OtherBalanceDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool OtherBalanceDue_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public String ServiceDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[5]);
        }
    }
    public bool ServiceDate_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public String DelinquencyDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[6]);
        }
    }
    public bool DelinquencyDate_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String ChargeoffDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[7]);
        }
    }
    public bool ChargeoffDate_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    public String DescriptionofDebt
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[8]);
        }
    }
    public bool DescriptionofDebt_IsNull
    {
        get
        {
            return IsNull(8);
        }
    }

    public String ClientLastPaymentDate
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[9]);
        }
    }
    public bool ClientLastPaymentDate_IsNull
    {
        get
        {
            return IsNull(9);
        }
    }

    public String ClientLastPaymentAmount
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[10]);
        }
    }
    public bool ClientLastPaymentAmount_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String CustomerFirstName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[11]);
        }
    }
    public bool CustomerFirstName_IsNull
    {
        get
        {
            return IsNull(11);
        }
    }

    public String CustomerLastName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[12]);
        }
    }
    public bool CustomerLastName_IsNull
    {
        get
        {
            return IsNull(12);
        }
    }

    public String CustomerAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[13]);
        }
    }
    public bool CustomerAddress_IsNull
    {
        get
        {
            return IsNull(13);
        }
    }

    public String CustomerAddress2
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[14]);
        }
    }
    public bool CustomerAddress2_IsNull
    {
        get
        {
            return IsNull(14);
        }
    }

    public String CustomerCity
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[15]);
        }
    }
    public bool CustomerCity_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public String CustomerState
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[16]);
        }
    }
    public bool CustomerState_IsNull
    {
        get
        {
            return IsNull(16);
        }
    }

    public String CustomerZip
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[17]);
        }
    }
    public bool CustomerZip_IsNull
    {
        get
        {
            return IsNull(17);
        }
    }

    public String CustomerHomePhoneNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[18]);
        }
    }
    public bool CustomerHomePhoneNumber_IsNull
    {
        get
        {
            return IsNull(18);
        }
    }

    public String CustomerPOEPhoneNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[19]);
        }
    }
    public bool CustomerPOEPhoneNumber_IsNull
    {
        get
        {
            return IsNull(19);
        }
    }

    public String CustomerMobileNumber
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[20]);
        }
    }
    public bool CustomerMobileNumber_IsNull
    {
        get
        {
            return IsNull(20);
        }
    }

    public String CustomerEmailAddress
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[21]);
        }
    }
    public bool CustomerEmailAddress_IsNull
    {
        get
        {
            return IsNull(21);
        }
    }

    public String TotalAmtDue
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[22]);
        }
    }
    public bool TotalAmtDue_IsNull
    {
        get
        {
            return IsNull(22);
        }
    }

    public String TotalAmtInterestAccrued
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[23]);
        }
    }
    public bool TotalAmtInterestAccrued_IsNull
    {
        get
        {
            return IsNull(23);
        }
    }

    public String TotalAmtNonInterestCharges
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[24]);
        }
    }
    public bool TotalAmtNonInterestCharges_IsNull
    {
        get
        {
            return IsNull(24);
        }
    }

    public String TotalAmtofPmtsMadeonDebt
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[25]);
        }
    }
    public bool TotalAmtofPmtsMadeonDebt_IsNull
    {
        get
        {
            return IsNull(25);
        }
    }

    public String OriginalLenderName
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[26]);
        }
    }
    public bool OriginalLenderName_IsNull
    {
        get
        {
            return IsNull(26);
        }
    }

    public String Data
    {
        set
        {
            this[27] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class NYCOHOLDBuffer: ScriptBuffer

{
    public NYCOHOLDBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RowData
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RowData_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>SC_0cc6f3f9bf4547ec9496e5e2650ced01</msb:DisplayName>
		<msb:ProjectId>{378BCCD5-431B-4BD6-8D23-2F4313E8507D}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_0cc6f3f9bf4547ec9496e5e2650ced01.csproj"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Mapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Settings.get_Default():SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Sett" +
    "ings")]

namespace SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_0cc6f3f9bf4547ec9496e5e2650ced01.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_0cc6f3f9bf4547ec9496e5e2650ced01.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
I1VTAHw+AAAQAAAAI0dVSUQAAACMPgAAjAUAACNCbG9iAAAAAAAAAAIAAAFXFaIJCR8AAAD6ATMA
FgAAAQAAAHQAAAARAAAAKAAAAIQAAAA4AAAArwAAABcAAAAIAAAACQAAAEcAAABKAAAADgAAAAEA
AAAJAAAAAQAAAAQAAAABAAAADgAAAAEAAAAAAOcPAQAAAAAABgBVDe0XBgDpDe0XBgByDKAXDwBh
GAAABgCfDAYUBgA4DQYUBgAZDQYUBgDQDQYUBgB1DQYUBgCODQYUBgDQDAYUBgDrDDsPCgCpDRkK
BgAlA/MGDgA3AccXDgAhAccXDgABAMcXDgBvAscXDgAHBccXBgA2AmwTBgCwCWwTBgCxD2wTBgCW
FGwTDgBHA8cXBgBYAvMGDgDCCscXCgDHFhkKEgCnFhkKCgD0FBkKCgDpGhkKBgBmGmwTFgB/AAYX
GgAEDYoZBgAGDO0XBgAeA2wTBgDEFAYUBgBmCmwTGgC2DIoZGgDzCYoZBgBBAvMGBgBVDKAXBgDY
Fg0YBgDOFNYTHgDYC8MPHgCGDMMPHgDbCsETBgDWCC4GBgCCD2wTIgCaCGoVBgBsG2wTJgAaAC4X
BgCfD2wTBgBeFmwTBgDpGNYTBgD7AmwTGgAFCooZBgB2FWwTBgBzFGwTBgCwFGwTJgBDAC4XJgBm
AC4XFgCYAAYXFgAzAAYXewDoGwAAFgCpAAYXBgCZCGMZBgCYHAYUBgBPAmwTDgBfA8cXBgClCGwT
DgBmBMcXDgDSA8cXDgC0A8cXDgD2AccXDgD7BccXDgDqA8cXDgA1BMcXDgAPAccXDgDCBMcXDgBD
BccXDgCmBMcXDgAkBccXDgDBAscXDgB0BccXDgADBMcXDgCGBMcXDgBhBccXDgBNBMcXDgAfBscX
DgAPBscXDgDYBMcXDgCiAscXDgBbBscXDgCPBscXDgCqBscXDgBKBscXDgD4AMcXDgCOBccXDgAn
BMcXDgBtBscXDgDLBccXDgCMAscXDgDQAMcXDgCjAccXDgCYA8cXDgDnAMcXDgD0BMcXDgDBAMcX
DgA4BscXDgCBBscXDgDaAscXDgDcAccXDgCeBccXBgDkFAYUGgAhDIoZGgA6DIoZAAAAAMIFAAAA
AAEAAQABABAAsRMAACwAAQABAAEAEAB9FgAAbQAGAAwAAQAQAJgWAABtAAYARwABABAAihYAAG0A
BgBNAAEAEAC2FgAAbQAGAFMAAQAQAMsaAAB5AAYAWQABABAAdhkAAH0ADABhAAEAEADKGAAAfQAN
AGQAAQAQALoHAAB9AA4AZwABABAA9gcAABwADwBrAAAAEAAUGI8YfQAXAHUAAAEQADoZjxi5ABkA
eQADIRAA7wYAAH0AGgB8AAMBEACOAQAAfQAdAIAAAwEQAAQCAAB9ACAAggACABAAdggAAH0AIwCE
AAEAYAd6AwEASQd6AwEA3Rl9AwEAsxd9AwEAChuFAwYAdhmIAwYAyhiMAwYAmBaQAwYAihaUAwYA
thaYAwEAJgeFAwEA2RqcAwEA2RqcAxEA1Bh9AwQADgezAAQA+RqFAxQAJgmzABQAOgqgAwEAlAez
AAQA2hSlAwYAnxOlAxEA6gmsAxEAhBOxAxEAnQq2AxEARAi7AzYAvgW/AxYASwHDAxYAZgHOAwYA
xguzAAYATAmzAAYAfROFAwYAlhnZAwYApRnZAwYAXwLdAwYAwRSzAAYAbxyzAAYAbRqzAAYA5Rmz
AAYAeBOzAAYAoRyzAFAgAAAAAMYABw4GAAEAHCEAAAAAxgASDgYAAQBsIQAAAADGAC8c4QMBANwt
AAAAAIEAkxfnAwIAfC4AAAAAgQCvC/ADBADRLgAAAACRAIUD9QMFAPQuAAAAAIEAZwsBBAcAWi8A
AAAAgQCDCAsECACQLwAAAACBAH4DEQQKALQvAAAAAIEAHxwdBA0AbzAAAAAAhhhhFwYADgB3MAAA
AACGGGEXsAEOAIIwAAAAAIYIexUrABEAlzAAAAAAhgjTEdIBEQCgMAAAAACGCCAWKwARALUwAAAA
AIYIWRLSAREAvjAAAAAAhggeDisAEQDTMAAAAACGCE0R0gERANwwAAAAAIYISg4rABEA8TAAAAAA
hgiHEdIBEQD6MAAAAACGCDYOKwARAA8xAAAAAIYIbBHSAREAGDEAAAAAhggnCysAEQAtMQAAAACG
CMgQ0gERADYxAAAAAIYImwsrABEASzEAAAAAhggZEdIBEQBUMQAAAACGCFULKwARAGkxAAAAAIYI
3xDSAREAcjEAAAAAhgglGisAEQCHMQAAAACGCNYS0gERAJAxAAAAAIYIbwsrABEApjEAAAAAhgj4
ENIBEQCwMQAAAACGCBgbKwARAMYxAAAAAIYIFxPSAREA0DEAAAAAhgh1CSsAEQDmMQAAAACGCKsQ
0gERAPAxAAAAAIYIYAkrABEABjIAAAAAhgiPENIBEQAQMgAAAACGCMkZKwARACYyAAAAAIYIuxLS
AREAMDIAAAAAhggyAysAEQBGMgAAAACGCA8Q0gERAFAyAAAAAIYIthwrABEAZjIAAAAAhgg6E9IB
EQBwMgAAAACGCO0LKwARAIYyAAAAAIYINBHSAREAkDIAAAAAhghTFSsAEQCmMgAAAACGCLwR0gER
ALAyAAAAAIYIyRUrABEAxjIAAAAAhgg2EtIBEQDQMgAAAACGCK4VKwARAOYyAAAAAIYIFBLSAREA
8DIAAAAAhgiVFSsAEQAGMwAAAACGCPQR0gERABAzAAAAAIYIsBkrABEAJjMAAAAAhgibEtIBEQAw
MwAAAACGCGEOKwARAEYzAAAAAIYIpRHSAREAUDMAAAAAhgh4BysAEQBmMwAAAACGCE4Q0gERAHAz
AAAAAIYIcBgrABEAhjMAAAAAhgh1EtIBEQCQMwAAAACGCDsaKwARAKYzAAAAAIYI8xLSAREAsDMA
AAAAhgg1CSsAEQDGMwAAAACGCHEQ0gERANAzAAAAAIYItgYQABEA2zMAAAAAhggrECQEEgDzMwAA
AACGAEYc0gETAPszAAAAAIYAmBrSARMAdzAAAAAAhhhhF7ABEwADNAAAAACGCLYGEAAWAA00AAAA
AIYIKxAkBBcAJDQAAAAAhgAYHAYAGAAsNAAAAACGAJUaBgAYAPszAAAAAIYAmBrSARgAdzAAAAAA
hhhhF7ABGAADNAAAAACGCNUGEAAbAA00AAAAAIYIOxAkBBwAJDQAAAAAhgAYHAYAHQAsNAAAAACG
AJUaBgAdAPszAAAAAIYAmBrSAR0AdzAAAAAAhhhhF7ABHQADNAAAAACGCLYGEAAgAA00AAAAAIYI
KxAkBCEAJDQAAAAAhgAYHAYAIgAsNAAAAACGAJUaBgAiAPszAAAAAIYAmBrSASIANDQAAAAAhhhh
FwYAIgBUNAAAAADGAK4bKQQiAK80AAAAAMYB8RkGACYAtDQAAAAAgQA1BwYAJgAQNQAAAADGALsb
MwQmAK80AAAAAMYB/xkGACoAszUAAAAAxgGnG+EDKgCvNAAAAADGAS8c4QMrAMY1AAAAAIYYYRc/
BCwA1TUAAAAAhgg4FPwBLQD2NQAAAACGCE8U/AEtABc2AAAAAIYYYRc/BC0AJjYAAAAAhgjaBSsA
LgBMNgAAAACGCMkIKwAuAHI2AAAAAMYAdg8rAC4AijYAAAAAhhhhFwYALgCSNgAAAACGAFQWKwAu
ANA2AAAAAJYA2whFBC4AgzcAAAAAhAj7CCsALwCLNwAAAACECAgJEAAvAJQ3AAAAAIYAShlKBDAA
nDcAAAAAhACjBlMEMAAEOAAAAACWCNAJWQQxAOQ6AAAAAJYI3QlfBDEA7DoAAAAAlABuF2YEMgCv
NAAAAACGAAwLBgA0AP06AAAAAIYYYRcGADQArzQAAAAAkRhnF3AENACKNgAAAACDGGEXBgA0ACY7
AAAAAJMI1BZ0BDQAUjsAAAAAkwiFCm8BNABZOwAAAACTCJEKegQ0AGE7AAAAAJYIvxqBBDUAaDsA
AAAAhhhhFwYANQBwOwAAAACRGGcXcAQ1AHw7AAAAAJEYZxdwBDUAijYAAAAAhhhhFwYANQCIOwAA
AACDAFQBhgQ1AJA7AAAAAIMAbwGNBDYAijYAAAAAhhhhFwYANwCoOwAAAACDABkClAQ3AIo2AAAA
AIYYYRcGADgAbDwAAAAAgwABA5sEOACKNgAAAACGGGEXBgA5AAAAAQBKHAAAAQC5DwAAAgD6EwAA
AQB9FwAAAQCOAwAAAgCKAwAAAQATGgAAAQCTDwAAAgDhBgAAAQC9DwAAAgDhBgAAAwCBFwAAAQDF
BwAAAQDNFgAAAgAVGQAAAwACFQAAAQBxDgAAAQBxDgAAAQDNFgAAAgAVGQAAAwACFQAAAQBxDgAA
AQBxDgAAAQDNFgAAAgAVGQAAAwACFQAAAQBxDgAAAQBxDgAAAQDNFgAAAgAVGQAAAwACFQAAAQBx
DgAAAQBxDgAAAQDnBQAAAgCLCQAAAwDNFgAABAACFQAAAQD3GQAAAgCJFwAAAwCCGQAABAACFQAA
AQDNFgAAAQBKHAAAAQDvGgAAAQDvGgAAAQBWCQAAAQBxDgAAAQDFBwAAAQBxDgAAAQASCgAAAgC5
CQAAAQBxDgAAAQBoFQAAAQC/FAAAAQBjFQAAAQCuBwkAYRcBABEAYRcGABkAYRcKACkAYRcQADEA
YRcQADkAYRcQAEEAYRcQAEkAYRcQAFEAYRcQAFkAYRcQAGEAYRcQAGkAYRcGAAkBYRcGABEBYRcG
AEkBYRcGAGkBYRcVAPEABw4GAAwAYRcGAAwAFwcjAPEAEg4GAAEBYQ8rAHkB/wsvAIEBcxMrAIkB
fBpdAIkBBBtzAIEBxxx/AIEBFxqFAAwAiByMAHkAYRcGAIEAYRcGAIkAYRcGAJEAYRcGAJkAYRcG
AKkAZRySABQAYReeAIEAHAukAAwAWhOsAIEA3gWzAIEBzAe2AIEAoBSzAIEAWgqzAIEAfxWzAIEA
zwuzAJEBrw+8ALEA7xTCAIEALQjCAIEAFgjCAIEAAgjCAIEAKwukAIEAnwukAIEAFAukAIEARwuk
AIEAiQukAIEANBvCAIEADA/CAIEAsw7CAIEAdw7CAIEA3g7CAHkAgQmzAHkAbAmzAHkAxAmzAHkA
ThyzAHkAwhyzAHkA+QuzAHkAVAizAHkA+hWzAHkAuhWzAHkA5RWzAIEB4RzGAHkAKA+zAHkAvBmz
ABwAYReeAHkA2Q/RAHkAdByzALEAZxTYALEA6xPYALEAawrhALEArRrpALEA0xzvAHkAXwizALEA
dg8rAIEBFxr3AIkAFQmzAIkAGwekAIkANRazAIkANwukAJEAbhazAJkADRazAPEAvwYWAbkAaggr
AJkBVxccAbkAjRQnAbkA5wcrAKEBrBMzAbEAvws5AbEAkBPvAIEBpA9AAYEBiQ9EAYEB0xx/AIEB
FxpKAYEBZRtQAcEAxxuzAIEB/hYrAIEBWhlWASQAFweeAFkBYRcQAFkBrQpvAakAWBp1AYEBHhqF
AcEAYRcGACwAYRcGACwAFweeAMEBVQ+YAYEBuRqpAYEB1AfGANkAYRewAdkAzRa6AdkAFRm+AeEA
fw/CAdkASxPHAdkAYxPMAdkAUhMBANEBYRcQANkARhzSAdkAmBrSAdkAGBwGANkAlRoGAPEAYRcG
AIEBQxnWAfEAKRneAeEAhRrSAfEA7wXoAfkAYRcGAJkBGBTvAeEBlQn1AekB6Bb8AfEAvhgCAvEB
WhMIAvEAAxwPAvkB1BsVAjQAYRcGADQAFweeADkBVQ8iAvkAUgopAikBvRcvAjwAYRdAAokBdRpG
AoEBvBNoAikBlBx4AhkC+Bh+AkQAYRdAAokBcwqPAokBeRuvAkwAYRdAAlQAlw/RAoEBHhrcAlwA
YRcGAFwAFweeAIkBoRvpAoEBsgf2AikBtwj8AjkBYRcFA2QAYRcGAFEBYRcTA3EBYRcGAJED8ggr
ACkBRQopApEDARkgA2wAYRdAAnQAlw/RArkBdg8rAIkBdBvpAoEBpBpJAzEBpA9AAYEBHhpPAy4A
CwDHBC4AEwDQBC4AGwDvBC4AIwD4BC4AKwAhBS4AMwAhBS4AOwAhBS4AQwD4BC4ASwAnBS4AUwAh
BS4AWwA+BUMAYwCGBYMBewCGBcEBawCGBcMBcwCGBeMBcwCGBQMCcwCGBWECcwCGBSEDcwCGBakI
gwDvBMkIgwDvBGANcwCGBYANcwCGBTQALAFiAY0B5AFzAhsDQAMDAAEABAA5AAUAOwAGAD0ACAA/
AAkAQQALAEMADABFAA0ARwAAAH8VogQAANcRpgQAACQWogQAAF0SpgQAACIOogQAAFERpgQAAE4O
ogQAAIsRpgQAADoOogQAAHARpgQAACsLogQAAMwQpgQAAJ8LogQAAB0RpgQAAFkLogQAAOMQpgQA
ACkaogQAANoSpgQAAHMLogQAAPwQpgQAABwbogQAABsTpgQAAHkJogQAAK8QpgQAAGQJogQAAJMQ
pgQAAM0ZogQAAL8SpgQAADYDogQAABMQpgQAALocogQAAD4TpgQAAPELogQAADgRpgQAAFcVogQA
AMARpgQAAM0VogQAADoSpgQAALIVogQAABgSpgQAAJkVogQAAPgRpgQAALQZogQAAJ8SpgQAAGUO
ogQAAKkRpgQAAHwHogQAAFIQpgQAAHQYogQAAHkSpgQAAD8aogQAAPcSpgQAADkJogQAAHUQpgQA
ANwGogQAAEIQpgQAANwGogQAAEIQpgQAANkGogQAAD8QpgQAANwGogQAAEIQpgQAADwUqgQAAFMU
qgQAAN4FogQAAM0IogQAAB0JogQAAOEJsAQAANgWtgQAALoKvAQAAMMawgQCAA0AAwACAA4ABQAC
AA8ABwACABAACQACABEACwACABIADQACABMADwACABQAEQACABUAEwACABYAFQACABcAFwACABgA
GQACABkAGwACABoAHQACABsAHwACABwAIQACAB0AIwACAB4AJQACAB8AJwACACAAKQACACEAKwAC
ACIALQACACMALwACACQAMQACACUAMwACACYANQACACcANwACACgAOQACACkAOwACACoAPQACACsA
PwACACwAQQACAC0AQwACAC4ARQACAC8ARwACADAASQACADEASwACADIATQACADMATwACADQAUQAC
ADUAUwACADYAVQACADcAVwACADgAWQACADkAWwACADoAXQACADsAXwACADwAYQACAD0AYwACAD4A
ZQACAD8AZwACAEAAaQACAEEAawACAEIAbQABAEMAbwABAEQAcQABAEgAcwABAEkAdQABAE4AdwAB
AE8AeQABAFQAewABAFUAfQACAGIAfwACAGMAgQACAGUAgwACAGYAhQACAGsAhwABAGwAhwACAG8A
iQABAHAAiQACAHYAiwACAHcAjQABAHgAjQACAHkAjwAcAJcAywBbAZEBHAI2AoUCwALJAuICDQMv
AzgDBIAAAAEAAAAAAAAAAAAAAAAAuAEAAAQAAAAAAAAAAAAAAFYD5gYAAAAACwAAAAAAAAAAAAAA
XwNIGwAAAAABAAEAAAAAAAAAAABoA/MKAAAAAAsAAAAAAAAAAAAAAF8DgBsAAAAACwAAAAAAAAAA
AAAAXwMMFQAAAAADAAIABwAAAAAAAABxA4oZAAAAAAQAAAAAAAAAAAAAAFYDbBMAAAAABAAAAAAA
AAAAAAAAVgN5CgAAAAALAAAAAAAAAAAAAABfAy8VAAAAAAAAAAABAAAAHhgAAA4ACgAPAAoAEAAK
ABEACwAAAAAAFQB/BjEAbwAzAG8AFAD9ABQAAgEUAAcBFAAMARQAEQHjAKQBJwFhAjEBqQIzAakC
PwFvADMBKQNZAW8AAQBpAAAAAAAAUGxhY2VtZW50SW5mb3JtYXRpb25fMTAwAElEVFNDb21wb25l
bnRNZXRhRGF0YTEwMABJRFRTVmFyaWFibGUxMDAASURUU1J1bnRpbWVDb25uZWN0aW9uQ29sbGVj
dGlvbjEwMABJRFRTUnVudGltZUNvbm5lY3Rpb24xMDAASURUU0Nvbm5lY3Rpb25NYW5hZ2VyMTAw
AElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRvckNvbnRleHQxMDAAS2VlcGVySW5mb18yMDAA
SW5zdXJlZEluZm9ybWF0aW9uXzgwMABQZW5kcmlja05vdGVfOTAwAFNlZ21lbnRhdGlvblNjb3Jl
c18xMTAAUGVuZGluZ1JlY2FsbF8yMTAAQWNjb3VudEluZm9ybWF0aW9uXzEwAFBhcnR5SW5mb3Jt
YXRpb25fMjAAPD45X18yXzAAPEdldEhlYWRlcj5iX18yXzAAPD45X180XzAAPEdldFJlY29yZExh
eW91dEV4YW1wbGU+Yl9fNF8wADw+Y19fRGlzcGxheUNsYXNzNF8wAENsaWVudFJlY2FsbEluZm9f
MjAxAFNDXzBjYzZmM2Y5YmY0NTQ3ZWM5NDk2ZTVlMjY1MGNlZDAxAE1haWxSZXR1cm5JbmZvcm1h
dGlvbl8xMTEARWR1Y2F0aW9uXzgxMQA8PmNfX0Rpc3BsYXlDbGFzczRfMQA8R2V0UmVjb3JkTGF5
b3V0RXhhbXBsZT5iX18xAE51bGxhYmxlYDEASUVudW1lcmFibGVgMQBBY3Rpb25gMQBMaXN0YDEA
Q1MkPD44X19sb2NhbHMxAE9yaWdpbmFsT3JGb3JtZXJDcmVkaXRvcl8xMDIAQ2xvc2VJbmZvVG9D
bGllbnRfMjAyAENsaWVudEluc3VyYW5jZUluZm9ybWF0aW9uXzgwMgBSZXNwb25zaWJsZVBhcnR5
SW5mb18xMTIAQWRkaXRpb25hbEJhbmtpbmdJbmZvcm1hdGlvbl84MTIASW50MzIAPEdldFJlY29y
ZExheW91dEV4YW1wbGU+Yl9fMgBGdW5jYDIARGljdGlvbmFyeWAyAGdldF9DdXN0b21lckFkZHJl
c3MyAEFjY291bnRGcmVlRm9ybVRleHRfMjAzAEFjY291bnRGcmVlRm9ybVRleHRNbnRPbmx5XzIw
MwBhZGQyMDMAQWRkVG9MaXN0UmVjb3JkMjAzAE5ld0luc3VyYW5jZUluZm9ybWF0aW9uXzgwMwBE
aXNwdXRlQWNjb3VudEluZm9ybWF0aW9uXzIxMwBEZWNlYXNlZEluZm9ybWF0aW9uXzEwNABNaXNj
ZWxsYW5lb3VzU0lGSW5mb18yMDQAQ2xpZW50R2VuZXJhbFBhdGllbnRJbmZvcm1hdGlvbl84MDQA
U2tpcFBob25lXzIxNABQYXJ0eVByZXZpb3VzQWRkcmVzc18yNABDb25zdW1lckZyZWVGb3JtVGV4
dF8yMDUAQ29uc3VtZXJGcmVlRm9ybVRleHRNbnRPbmx5XzIwNQBDbGllbnRDb21tZXJjaWFsSW5m
b3JtYXRpb25fODA1AFByaW9yQ29sbGVjdGlvbkNvbnRhY3RzXzExNQBQb3NzaWJsZUFkZHJlc3Nl
c183MDYAQ2xpZW50VGVsY29tSW5mb3JtYXRpb25fODA2AFBlbmRyaWNrVk5vdGVzXzkwNgBDbGll
bnRCYW5raW5nSW5mb3JtYXRpb25fODA3AFJlcXVlc3RGb3JUaXRsZUxpZW5SZWxlYXNlXzIxNwBQ
b3NzaWJsZVBob25lc01haW50ZW5hbmNlXzIwOABQb3NzaWJsZVBob25lc18yMDgAUmV0YWlsQ2x1
YkluZm9ybWF0aW9uXzgwOABTSUZUcmFja2luZ18yMDkAQ2FibGVDZWxsVXRpbGl0eUluZm9ybWF0
aW9uXzgwOQA8PjkAPE1vZHVsZT4AQ2xvc2VBY2NvdW50X0MAZ2V0X0NsaWVudElEAElucHV0SUQA
R2V0T3V0cHV0SUQASW1wb3J0YW50Tm90ZV9JTk9URQBBc3NpZ25Sb3V0ZV9SVEUAQWRqdXN0bWVu
dF9BREoAU3lzdGVtLklPAFVwZGF0ZUNCUkluZm9fQ0JSAFJlYWN0aXZhdGVfUkVBQ1QATGV0dGVy
UmVxdWVzdF9MRVQAU3RhdHVzQ29kZVVwZGF0ZV9TVABVcGRhdGVGaWVsZF9VAFBheW1lbnRSZXZl
cnNhbF9SRVYAZ2V0Q1NWAFBheW1lbnRfUEFZAHNldF9EYXRhAGdldF9Db21wb25lbnRNZXRhRGF0
YQBzZXRfUm93RGF0YQBkYXRhAG1zY29ybGliADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJp
YwBDbGllbnRJZABBZGQARGF0ZUxvYWRlZABJbnB1dHNGaW5pc2hlZABNYXJrT3V0cHV0c0Zpbmlz
aGVkAF9ueWNvaG9sZFJlcG9ydENyZWF0ZWQAX2V4Y2VwdGlvblJlcG9ydENyZWF0ZWQAZ2V0X1Rv
dGFsQW10SW50ZXJlc3RBY2NydWVkADxGaWxlTmFtZT5rX19CYWNraW5nRmllbGQAZmxkAFRyaW1F
bmQAQmFzZVJlY29yZAByZWNvcmQAUmVwbGFjZQBJc051bGxPcldoaXRlU3BhY2UAZ2V0X1N0YWNr
VHJhY2UAQmFzZVNlcnZpY2UAT3RoZXJJbml0aWFsQmFsYW5jZQBJbnRlcmVzdEluaXRpYWxCYWxh
bmNlAFByaW5jaXBhbEluaXRhbEJhbGFuY2UAZGVmYXVsdEluc3RhbmNlAFBvc3RhbENvZGUAU3Rh
dHVzQ29kZQBnZXRfTWVzc2FnZQBFbWFpbE1lc3NhZ2UAV3JpdGVFeGNlcHRpb25NZXNzYWdlAElF
bnVtZXJhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9QYXRoSW5w
dXRGaWxlAEdldFJlY29yZExheW91dEV4YW1wbGUAZ2V0X05hbWUAZ2V0X0ZpbGVOYW1lAHNldF9G
aWxlTmFtZQBJbmNvbWluZ0ZpbGVOYW1lAFJlY29yZFR5cGVOYW1lAGdldF9PcmlnaW5hbExlbmRl
ck5hbWUAQ2xhc3NOYW1lAGNsYXNzTmFtZQBnZXRfQ3VzdG9tZXJMYXN0TmFtZQBnZXRfQ3VzdG9t
ZXJGaXJzdE5hbWUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAERhdGVUaW1l
AHJlY29yZExpbmUAQWRkcmVzc0xpbmUAZ2V0X0ZIRW5naW5lAHNldF9GSEVuZ2luZQBmSEVuZ2lu
ZQBNdWx0aVJlY29yZEVuZ2luZQBDb21tb25FbmdpbmUAZW5naW5lAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlBpcGVsaW5lAFJlY29yZFR5cGUAZ2V0X0Jhc2VUeXBlAEdldFR5cGUAU09MQWdyZWVt
ZW50VHlwZQBDb21wYXJlAFdoZXJlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJl
AHJlc291cmNlQ3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBHZW5lcmFsUHVycG9zZVJlY29y
ZEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUkdTLkFydGl2YUdlbmVyYWxQdXJwb3NlAERp
c3Bvc2UAU09MRGF0ZQBMaXN0ZWREYXRlAGdldF9TZXJ2aWNlRGF0ZQBCS0VmZmVjdGl2ZURhdGUA
Q2hhcmdlT2ZmRGF0ZQBnZXRfQ2hhcmdlb2ZmRGF0ZQBnZXREYXRlAGdldF9DbGllbnRMYXN0UGF5
bWVudERhdGUAQ2xpZW50TGFzdFBheURhdGUAZ2V0X0RlbGlucXVlbmN5RGF0ZQBnZXRGb3JtYXRl
ZGRhdGUATmVnYXRlAFRlbXBsYXRlAFNPTFN0YXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAGdldF9D
dXN0b21lclN0YXRlAERlbGV0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWxpbWl0ZWRS
ZWNvcmRBdHRyaWJ1dGUARml4ZWRMZW5ndGhSZWNvcmRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEZpZWxkRml4ZWRMZW5ndGhBdHRyaWJ1dGUAQXNzZW1i
bHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEZpZWxkSGlkZGVu
QXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9k
dWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25l
bnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29t
cGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAGdldF9QcmluY2lwYWxC
YWxhbmNlRHVlAGdldF9PdGhlckJhbGFuY2VEdWUAZ2V0X0ludGVyZXN0QmFsYW5jZUR1ZQBnZXRf
VG90YWxBbXREdWUAdmFsdWUAVG90YWxBbW91bnRPZk5vbkludGVyZXN0Q2hhcmdlc0FuZEZlZXNB
Y2N1cmVkU2luY2VDaGFyZ2VPZmYAVG90YWxBbW91bnRPZkludGVyZXN0QWNjdXJlZFNpbmNlQ2hh
cmdlT2ZmAFRvdGFsQW1vdW50T2ZQYXltZW50c01hZGVPbkRlYnRTaW5jZUNoYXJnZU9mZgBUb3Rh
bEFtb3VudER1ZUFzT2ZDaGFyZ2VPZmYAQWx0ZXJuYXRlUGhvbmVGbGFnAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAV3JpdGVTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJpbmcAVG9TdHJpbmcAR2V0
U3RyaW5nAFN1YnN0cmluZwBtc2cARm9yRWFjaABNYXRoAGdldF9MZW5ndGgAVG9EZWNpbWFsAHZh
bABsYWJlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU291cmNlT2ZFbWFpbABTQ18wY2M2ZjNmOWJm
NDU0N2VjOTQ5NmU1ZTI2NTBjZWQwMS5kbGwAZ2V0X0N1c3RvbWVyQWRkcmVzczJfSXNOdWxsAHNl
dF9EYXRhX0lzTnVsbABzZXRfUm93RGF0YV9Jc051bGwAZ2V0X1RvdGFsQW10SW50ZXJlc3RBY2Ny
dWVkX0lzTnVsbABnZXRfT3JpZ2luYWxMZW5kZXJOYW1lX0lzTnVsbABnZXRfQ3VzdG9tZXJMYXN0
TmFtZV9Jc051bGwAZ2V0X0N1c3RvbWVyRmlyc3ROYW1lX0lzTnVsbABnZXRfU2VydmljZURhdGVf
SXNOdWxsAGdldF9DaGFyZ2VvZmZEYXRlX0lzTnVsbABnZXRfQ2xpZW50TGFzdFBheW1lbnREYXRl
X0lzTnVsbABnZXRfRGVsaW5xdWVuY3lEYXRlX0lzTnVsbABnZXRfQ3VzdG9tZXJTdGF0ZV9Jc051
bGwAZ2V0X1ByaW5jaXBhbEJhbGFuY2VEdWVfSXNOdWxsAGdldF9PdGhlckJhbGFuY2VEdWVfSXNO
dWxsAGdldF9JbnRlcmVzdEJhbGFuY2VEdWVfSXNOdWxsAGdldF9Ub3RhbEFtdER1ZV9Jc051bGwA
Z2V0X0N1c3RvbWVyWmlwX0lzTnVsbABnZXRfQ2xpZW50UmVmZXJlbmNlTnVtYmVyX0lzTnVsbABn
ZXRfQ3VzdG9tZXJNb2JpbGVOdW1iZXJfSXNOdWxsAGdldF9DdXN0b21lclBPRVBob25lTnVtYmVy
X0lzTnVsbABnZXRfQ3VzdG9tZXJIb21lUGhvbmVOdW1iZXJfSXNOdWxsAGdldF9DbGllbnRMb2Fu
TnVtYmVyX0lzTnVsbABnZXRfVG90YWxBbXROb25JbnRlcmVzdENoYXJnZXNfSXNOdWxsAGdldF9D
dXN0b21lckVtYWlsQWRkcmVzc19Jc051bGwAZ2V0X0N1c3RvbWVyQWRkcmVzc19Jc051bGwAZ2V0
X0Rlc2NyaXB0aW9ub2ZEZWJ0X0lzTnVsbABnZXRfVG90YWxBbXRvZlBtdHNNYWRlb25EZWJ0X0lz
TnVsbABnZXRfQ2xpZW50TGFzdFBheW1lbnRBbW91bnRfSXNOdWxsAGdldF9DdXN0b21lckNpdHlf
SXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRyaW0ARnJvbQBGbGROdW0A
cmVzb3VyY2VNYW4Ab3BfR3JlYXRlclRoYW4ARmlsZXNXcml0dGVuAFNpZ24AU2NyaXB0TWFpbgBK
b2luAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0
aW9uAHN1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNv
bGxlY3Rpb24AZ2V0X0hZQ09IT0xEQ29ubmVjdGlvbgBnZXRfRXhjZXB0aW9uQ29ubmVjdGlvbgBv
cF9BZGRpdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAGdldF9Jbm5lckV4Y2VwdGlvbgBE
ZWJ0RGVzY3JpcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBUbwBGaWVsZEluZm8AQ3VsdHVyZUluZm8A
RGVidWdJbmZvAE1lbWJlckluZm8AWmVybwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3Nv
ZnQuU3FsU2VydmVyLkRUU1J1bnRpbWVXcmFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxp
bmVXcmFwAGdldF9DdXN0b21lclppcAByZWN0eXAAU3lzdGVtLkxpbnEAQ2hhcgBnZXRfQ2xpZW50
UmVmZXJlbmNlTnVtYmVyAGdldF9DdXN0b21lck1vYmlsZU51bWJlcgBnZXRfQ3VzdG9tZXJQT0VQ
aG9uZU51bWJlcgBnZXRfQ3VzdG9tZXJIb21lUGhvbmVOdW1iZXIAQWx0ZXJuYXRlUGhvbmVOdW1i
ZXIAUHJpbWFyeVBob25lTnVtYmVyAE9yaWdpbmFsTG9hbk51bWJlcgBnZXRfQ2xpZW50TG9hbk51
bWJlcgBDcmVkaXRvckludGVybmFsQ29uc3VtZXJOdW1iZXIAR2V0SGVhZGVyAElGb3JtYXRQcm92
aWRlcgBPcmlnaW5hbExlbmRlcgBJbnB1dDBCdWZmZXIAT3V0cHV0MEJ1ZmZlcgBOWUNPSE9MREJ1
ZmZlcgBQaXBlbGluZUJ1ZmZlcgBFeGNlcHRpb25zQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVz
b3VyY2VNYW5hZ2VyAGdldF9Db25uZWN0aW9uTWFuYWdlcgBUb1VwcGVyAE1pY3Jvc29mdC5TcWxT
ZXJ2ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGlu
ZS5XcmFwcGVyAEZpcmVFcnJvcgAuY3RvcgAuY2N0b3IAQ3VzdG9tU2VsZWN0b3IAc3RyAHJlYzIw
M3MAT3V0cHV0SURzAGdldE5vbnBlbWRhcwBTeXN0ZW0uRGlhZ25vc3RpY3MAY2xpZW50aWRzAEdl
dEZpZWxkcwBSR1MuQXJ0aXZhR2VuZXJhbFB1cnBvc2UuRGF0YS5SZWNvcmRzAFN5c3RlbS5SdW50
aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18wY2M2ZjNmOWJmNDU0N2Vj
OTQ5NmU1ZTI2NTBjZWQwMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5n
TW9kZXMAZ2V0X1RvdGFsQW10Tm9uSW50ZXJlc3RDaGFyZ2VzAFNDXzBjYzZmM2Y5YmY0NTQ3ZWM5
NDk2ZTVlMjY1MGNlZDAxLlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAHJlY29yZExh
eW91dEV4YW1wbGVzAERhdGVUaW1lU3R5bGVzAEdldFR5cGVzAEdldEN1c3RvbUF0dHJpYnV0ZXMA
QnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBHZXRE
ZWJ1Z0RldGFpbHMAQ29udGFpbnMAU3lzdGVtLkNvbGxlY3Rpb25zAENvbm5lY3Rpb25zAEJ1ZmZl
cnMARmlsZUhlbHBlcnMARGVsaW1pdGVkQXR0cnMARml4ZWRBdHRycwBnZXRfQ3VzdG9tZXJFbWFp
bEFkZHJlc3MAZ2V0X0N1c3RvbWVyQWRkcmVzcwBjbGllbnRzAEF0dGFjaG1lbnRzAEZpbmlzaE91
dHB1dHMAQ3JlYXRlTmV3T3V0cHV0Um93cwBzRHQAQ29uY2F0AEZvcm1hdABnZXRfRGVzY3JpcHRp
b25vZkRlYnQAZ2V0X1RvdGFsQW10b2ZQbXRzTWFkZW9uRGVidABUcnlQYXJzZUV4YWN0AE9iamVj
dABTdWJqZWN0AFNlbGVjdABEaXN0aW5jdABnZXRfRW5kT2ZSb3dzZXQAU2V0RW5kT2ZSb3dzZXQA
UGFkUmlnaHQAb3BfSW1wbGljaXQAU3BsaXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJl
bnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AElucHV0UmVjb3JkQ291bnQAbnljb2hvbGRjb3Vu
dABnZXRfQ2xpZW50TGFzdFBheW1lbnRBbW91bnQAQ2xpZW50TGFzdFBheUFtb3VudABNaWNyb3Nv
ZnQuU3FsU2VydmVyLlR4U2NyaXB0AEluc2VydABDb252ZXJ0AExhc3QAVG9MaXN0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AEZpcnN0AElucHV0MF9Qcm9jZXNzSW5wdXQAUHJpbWVP
dXRwdXQARnJlZUZvcm1UZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZh
bENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AEFkZFBsYWNlbWVudFJvdwBJbnB1
dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAQWRkcmVzc1VuaXRfQXB0T3JQT0JveABnZXRfVG9k
YXkAQm9keQBSZWxhdGlvbnNoaXBUeXBlS2V5AENvbnRhaW5zS2V5AGdldF9Bc3NlbWJseQBOb3Rp
ZmljYXRpb25DYXRlZ29yeQBnZXRfQ3VzdG9tZXJDaXR5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxp
dHkASXNOdWxsT3JFbXB0eQAAACVpAG4AdABlAGcAcgBhAF8AYwByAGUAZABpAHQAXwBvAG4AZQAA
L0kAbgB0AGUAZwByAGEAIABDAHIAZQBkAGkAdAAgAE8AbgBlACwAIABMAEwAQwAAJWkAbgB0AGUA
ZwByAGEAXwBjAHIAZQBkAGkAdABfAHQAdwBvAAAvSQBuAHQAZQBnAHIAYQAgAEMAcgBlAGQAaQB0
ACAAVAB3AG8ALAAgAEwATABDAAApaQBuAHQAZQBnAHIAYQBfAGMAcgBlAGQAaQB0AF8AdABoAHIA
ZQBlAAAzSQBuAHQAZQBnAHIAYQAgAEMAcgBlAGQAaQB0ACAAVABoAHIAZQBlACwAIABMAEwAQwAA
J2kAbgB0AGUAZwByAGEAXwBjAHIAZQBkAGkAdABfAGYAbwB1AHIAADFJAG4AdABlAGcAcgBhACAA
QwByAGUAZABpAHQAIABGAG8AdQByACwAIABMAEwAQwAAJ2kAbgB0AGUAZwByAGEAXwBjAHIAZQBk
AGkAdABfAGYAaQB2AGUAADFJAG4AdABlAGcAcgBhACAAQwByAGUAZABpAHQAIABGAGkAdgBlACwA
IABMAEwAQwAADUkATgBUAEUARwAxAAANSQBOAFQARQBHADIAAA1JAE4AVABFAEcAMwAADUkATgBU
AEUARwA0AAANSQBOAFQARQBHADUAAAlOAFUATABMAAABABUwADAALwAwADAALwAwADAAMAAwAACA
qUQAZQBsAGkAbgBxAHUAZQBuAGMAeQAgAEQAYQB0AGUAIABpAHMAIABSAGUAcQB1AGkAcgBlAGQA
LgAgAEkAbgB2AGEAbABpAGQAIABkAGUAbABpAHEAdQBlAG4AYwB5ACAAZABhAHQAZQAgAGYAbwBy
ACAAYwBsAGkAZQBuAHQAIAByAGUAZgBlAHIAZQBuAGMAZQAgAG4AdQBtAGIAZQByADoAIAAgAAAr
LgAgAE4AZQBlAGQAIAB0AG8AIABnAGUAdAAgAGQAaQBzAHQAcgBvAC4AAICTTwByAGkAZwBpAG4A
YQBsACAAbABlAG4AZABlAHIAIABpAG4AYwBvAHIAcgBlAGMAdAAgAG8AcgAgAG0AaQBzAHMAaQBu
AGcAIAB2AGEAbAB1AGUAIABmAG8AcgAgAGMAbABpAGUAbgB0ACAAcgBlAGYAZQByAGUAbgBjAGUA
IABuAHUAbQBiAGUAcgA6ACAAIAAAAy4AAANfAAADIAAAD1cAUgBJAFQAVABFAE4AAANDAAAJUABS
AEkATQAABU4AWQAAEU4AWQBDAE8ASABPAEwARAAAgTFDAGwAaQBlAG4AdAAgAFIAUAAgAEEAYwBj
AG8AdQBuAHQAIABOAHUAbQBiAGUAcgAsAEMAbABpAGUAbgB0ACAATABvAGEAbgAgAG4AdQBtAGIA
ZQByACwAQwB1AHIAcgBlAG4AdAAgAEIAYQBsAGEAbgBjAGUALABUAG8AdABhAGwAIABBAG0AbwB1
AG4AdAAgAEQAdQBlACAAYQBzACAAbwBmACAAQwBoAGEAcgBnAGUAIABPAGYAZgAsAFQAbwB0AGEA
bAAgAEEAbQB0ACAAbwBmACAAUABtAHQAcwAgAE0AYQBkAGUAIABvAG4AIABEAGUAYgB0ACAAcwBp
AG4AYwBlACAAQwBoAGEAcgBnAGUAIABPAGYAZgAsAEQAaQBmAGYAZQByAGUAbgBjAGUAAAMsAAAn
RQB4AGMAZQBwAHQAaQBvAG4AIABpAG4AIABzAGMAcgBpAHAAdAAAM0UAeABjAGUAcAB0AGkAbwBu
ACAAaQBuAG4AZQByACAAZQB4AGMAZQBwAHQAaQBvAG4AAClFAHgAYwBlAHAAdABpAG8AbgAgAFMA
dABhAGMAawBUAHIAYQBjAGUAAAMwAAAJWABYAFgAWAAAD00AZABkAHkAeQB5AHkAABFNAE0AZABk
AHkAeQB5AHkAAA1NAGQAeQB5AHkAeQAAD00ATQBkAHkAeQB5AHkAAAtlAG4ALQBVAFMAAUNMAGkA
bgBlADoAewAwAH0AIAAgAE0AZQBzAHMAYQBnAGUAOgB7ADEAfQAgACAARABlAHQAYQBpAGwAOgB7
ADIAfQAAC0MATwBNAEEASwAAAy8AAANOAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5
ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMA
aQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBz
AHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAABFPAHUAdABwAHUAdAAgADAAABVFAHgAYwBlAHAA
dABpAG8AbgBzAAAlSABZAEMATwBIAE8ATABEAEMAbwBuAG4AZQBjAHQAaQBvAG4AACdFAHgAYwBl
AHAAdABpAG8AbgBDAG8AbgBuAGUAYwB0AGkAbwBuAAARQwBsAGkAZQBuAHQASQBEAAAbUABhAHQA
aABJAG4AcAB1AHQARgBpAGwAZQAAY2MAbwB1AGwAZAAgAG4AbwB0ACAAZABlAHQAZQByAG0AaQBu
AGUAIAByAGUAYwBvAHIAZAAgAGwAYQB5AG8AdQB0ACAAZgBvAHIAIABjAGwAYQBzAHMAIABbAHsA
MAB9AF0AAAMKAAADDQAAG1gAWABYAFgAWABYAFgAWABYAFgAWABYAFgAAHFTAEMAXwAwAGMAYwA2
AGYAMwBmADkAYgBmADQANQA0ADcAZQBjADkANAA5ADYAZQA1AGUAMgA2ADUAMABjAGUAZAAwADEA
LgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAABVCAGEAcwBlAFIAZQBj
AG8AcgBkAAAHewAwAH0AAIFXCgAKAAoACgBFAHIAcgBvAHIAIQAgACAAZgBsAGQALgBHAGUAdABD
AHUAcwB0AG8AbQBBAHQAdAByAGkAYgB1AHQAZQBzACgAdAB5AHAAZQBvAGYAKABGAGkAbABlAEgA
ZQBsAHAAZQByAHMALgBGAGkAeABlAGQATABlAG4AZwB0AGgARgBpAGUAbABkACkALAAgAGYAYQBs
AHMAZQApACAAZABpAGQAbgB0ACAAcgBlAHQAdQByAG4AIABhAG4AeQAgAGQAYQB0AGEALgAgACAA
YwBoAGUAYwBrACAAdABoAGUAIABmAGkAbABlACAAbQBhAGsAZQAgAHMAdQByAGUAIAB0AGgAZQAg
AGYAaQBlAGwAZABzACAAYQBsAGwAIABoAGEAdgBlACAAIABmAGkAeABlAGQAIABmAGkAZQBsAGQA
IABhAHQAdAByAC4ALgAuAC4AAAAADP9P8M4wuk+O2g4+JNq2iAAEIAEBCAMgAAEFIAEBEREEIAEB
DgYgAQERgLEGFRI5Ag4OByACARMAEwEDIAAOBAABAQ4oBw8SPRJBEkUSSRJNDg4VEVEBEVURWRFZ
FRFRARFVFRFRAQgRWRJdAhEQAQEVEoChAR4AFRKAoQEeAAMKAQMLEAEBCBUSgKEBHgAFAAICDg4G
AAMODg4OBSABAhMABAAAEVUGFRFRARFVBSABARMABwYVEVEBEVUGIAETARMAAgYOBSACDg4OBQAB
EVkOAwYRWQQAAQIOBRURUQEIBgYVEVEBCAgAAhFZEVkRWQcAAggRWRFZBQABEVkIBwACAhFZEVkF
AAEOHQ4ECgESQQQKARI9BAoBEkUECgESSQQKARJNBSAAEoDNCiAGAQgODg4IEAIEIAASXQYHAwgI
EVkFAAEIEVkGAAERWRFZAyAACAUgAg4ICAUAAg4ODgUgAg4IDgQgAQIOBhUSZQESYQwHAx0OEVUV
EVEBEVUFAAASgK0PAAUCDh0OEoDVEYDZEBFVBwAEDg4cHBwDBwEOBhUSZQEeAAsQAQEOFRKAoQEe
AAQKAR4ABiABHQ4dAwkgAwEScR0IEnUDBhJxAwYdCAQgAQ4IBCABAggFIAIBCBwDIAACByACAg4R
gO0FIAEdCAgDBwEIBgACCBJ1DgUgABKA8QYgARKA9Q4FIAASgIEFIAASgPkGIAESgP0cBQAAEoEB
BiABHBKBBQUVEmUBHAYgAQ4SgQkFIAASgJUGIAAdEoCRCRUSgI0CEoCRDgUgAgEcGBoQAgIVEoCh
AR4BFRKAoQEeABUSgI0CHgAeAQYKAhKAkQ4KAAIODhUSgKEBDgQHARI8BSAAEoENBiAAHRKAlQkV
EoCNAhKAlQIZEAECFRKAoQEeABUSgKEBHgAVEoCNAh4AAgUKARKAlRAQAQEVEmUBHgAVEoChAR4A
CBUSgREBEoCVBxUSZQESgJUKIAEBFRKBEQETAAUAAg4OHAYVEmUBEmkMEAEBHgAVEoChAR4ABSAB
Dh0DCAABEoCVEYEZByABAR0SgJUFFRJlAQ4HIAIBDhKBDQQHARJACCACHRwSgJUCBQoBEoCRCBUS
gREBEoCRBxUSZQESgJEIBwMIHRwSgJkFIAIOCAMGAAIODh0cCLd6XFYZNOCJCImEXc2AgMyRCPoM
7UpFUaeCCD4MCNWcw9ZXAgYCBwYVEjkCDg4CBggDBhIgAwYSJAMGEhADBhIUAwYSGAMGEnkEBhKA
lQYGFRJlAQ4EBhKAnQQGEoCpBAYSgK0DBhI0AwYSOAoGFRKAjQISgJEOCgYVEoCNAhKAlQIDBh0c
AwYSPAUgAQESDAggAhFZEVkRWQQgAQ4OCwACARJhFRJlARJhCSABFRFRARFVDgUgAgEODgsgAwEO
DhUSZQESYQYwAQEBHgAEIAEBAgkgBAEIDhJxEnULIAQBCB0IHRJxEnUFIAEBEnkEAAEODgggABUS
gKEBDgUgAQ4SaQUAABKAnQYAAQESgJ0JAAISgJUSgJ0OAwAAAQUAABKAqQYAAQESgK0EAAASNAYg
AQ4SgJEGIAECEoCVBiABARKAlQYgAQESgJEDKAAOAygAAgUoABKAgQUIABKAnQUIABKAqQUIABKA
rQQIABI0CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTQ18wY2M2ZjNmOWJmNDU0N2VjOTQ5NmU1ZTI2NTBjZWQwMQAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE5AABHAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEC5ORVQgRnJhbWV3b3JrIDQEAQAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5S
ZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1
cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3Vy
Y2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAwIIAAAAAAAAAAAAA
2oIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMyCAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNj
b3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAA
AAAAAAAAAAAAAAABAAAAAABIAAAAWKAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMA
SQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAAC
AAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIA
YQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBm
AG8AAAAoAwAAAQAwADAAMAAwADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAA
IgABAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBj
AHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADAAYwBjADYAZgAzAGYAOQBiAGYANAA1ADQANwBlAGMA
OQA0ADkANgBlADUAZQAyADYANQAwAGMAZQBkADAAMQAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBp
AG8AbgAAAAAAMQAuADAALgAwAC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAA
UwBDAF8AMABjAGMANgBmADMAZgA5AGIAZgA0ADUANAA3AGUAYwA5ADQAOQA2AGUANQBlADIANgA1
ADAAYwBlAGQAMAAxAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQA
AABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVABy
AGEAZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4A
YQBtAGUAAABTAEMAXwAwAGMAYwA2AGYAMwBmADkAYgBmADQANQA0ADcAZQBjADkANAA5ADYAZQA1
AGUAMgA2ADUAMABjAGUAZAAwADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0A
ZQAAAAAAUwBDAF8AMABjAGMANgBmADMAZgA5AGIAZgA0ADUANAA3AGUAYwA5ADQAOQA2AGUANQBl
ADIANgA1ADAAYwBlAGQAMAAxAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAA
MQAuADAALgAwAC4AMAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADAALgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAADsMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA=]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_0cc6f3f9bf4547ec9496e5e2650ced01</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::ClientID,User::PathInputFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">03ec35ed0af5f50aa3d3c42f19a33cb6</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">50ccfbb7a55781096676fe3de51deb29bd7cb254</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Connections[HYCOHOLDConnection]"
                      connectionManagerID="Package.ConnectionManagers[NYCOHOLD]"
                      connectionManagerRefId="Package.ConnectionManagers[NYCOHOLD]"
                      name="HYCOHOLDConnection" />
                    <connection
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Reference Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Reference Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Reference Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Loan Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Loan Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Loan Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Principal Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Principal Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Principal Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Interest Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Interest Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Interest Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Other Balance Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Other Balance Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Other Balance Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Service Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Service Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Service Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Delinquency Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Delinquency Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Delinquency Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Chargeoff Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Chargeoff Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Chargeoff Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Description of Debt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Description of Debt"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Description of Debt]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Last Payment Date]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Last Payment Date"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Date]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Client Last Payment Amount]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Client Last Payment Amount"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Client Last Payment Amount]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer First Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer First Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer First Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Last Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Last Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Last Name]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Customer Address"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Address 2]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Address 2"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Address 2]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer City"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer City]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer State"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer State]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Zip"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Zip]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Home Phone Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Home Phone Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Home Phone Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer POE Phone Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer POE Phone Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer POE Phone Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Mobile Number]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Mobile Number"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Mobile Number]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Customer Email Address]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Customer Email Address"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Customer Email Address]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Due]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Due"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Due]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Interest Accrued]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Interest Accrued"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Interest Accrued]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt Non Interest Charges]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt Non Interest Charges"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt Non Interest Charges]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Total Amt of Pmts Made on Debt]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Total Amt of Pmts Made on Debt"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Total Amt of Pmts Made on Debt]" />
                        <inputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0].Columns[Original Lender Name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="500"
                          cachedName="Original Lender Name"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output].Columns[Original Lender Name]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default]"
                      name="default"
                      synchronousInputId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[default].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD]"
                      hasSideEffects="true"
                      name="NYCOHOLD">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0].Columns[RowData]"
                          name="RowData" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="2000"
                          lineageId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Exceptions]"
                  endId="Package\Foreach Downloaded File\Process placement File\Exception File.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Flat File Source Output]"
                  endId="Package\Foreach Downloaded File\Process placement File\Process records.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Downloaded File\Process placement File\Flat File Source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[NYCOHOLD]"
                  endId="Package\Foreach Downloaded File\Process placement File\Nycohold.Inputs[Flat File Destination Input]"
                  name="NYCOHOLD"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[NYCOHOLD]" />
                <path
                  refId="Package\Foreach Downloaded File\Process placement File.Paths[Output 0]"
                  endId="Package\Foreach Downloaded File\Process placement File\Artiva File.Inputs[Flat File Destination Input]"
                  name="Output 0"
                  startId="Package\Foreach Downloaded File\Process placement File\Process records.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Downloaded File\Validate_Fields"
          DTS:CreationName="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:Description="Script Task"
          DTS:DTSID="{e95a4320-f248-4925-b572-20f8a90cc7d0}"
          DTS:ExecutableType="Microsoft.SqlServer.Dts.Tasks.ScriptTask.ScriptTask, Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"
          DTS:LocaleID="-1"
          DTS:ObjectName="Validate_Fields"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_f7077c8d2dd142238c929e9f46d48910"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FullInboundDirectory,User::PathInputFile,User::UnMapped,$Package::CurrentFields"
              ReadWriteVariables="User::IsMapped">
              <ProjectItem
                Name="ST_f7077c8d2dd142238c929e9f46d48910.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d3e4aaf2-ea82-479c-84a7-5a9c236324a9}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_4e91ee531881413db3f80afb9f16a973</RootNamespace><AssemblyName>ST_f7077c8d2dd142238c929e9f46d48910</AssemblyName><TargetFrameworkVersion>v4.0</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host><ProjectClient><HostIdentifier>SSIS_ST110</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Settings.get_Default():ST_4e91ee531881413db3f80afb9f16a973.Properties.Sett" +
    "ings")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.IO;
using System.Text;
#endregion

namespace ST_4e91ee531881413db3f80afb9f16a973
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            

            try
            {
                
                IEnumerable<string> allLines = null;
                string currentfile = (string)Dts.Variables["User::PathInputFile"].Value;
                string unmappedfields = (string)Dts.Variables["User::UnMapped"].Value;
                string[] splitted = null;
                int cnt = 0;
                string currentfields = (string)Dts.Variables["$Package::CurrentFields"].Value;
                string[] currentfieldarr = currentfields.Split(',');
                int fieldcnt = currentfieldarr.Length;
                int ismapped = 1;
                
                var outlines = new StringBuilder("CurrentMapping,, OriginalFields\n");

                string filePath = (string)Dts.Variables["User::FullInboundDirectory"].Value + currentfile;// Variables.FullInboundDirectory + Variables.currentFile;
                if (File.Exists(filePath))
                {

                    allLines = File.ReadLines(filePath);
                }

                foreach (string line in allLines)
                {
                    splitted = line.Split(',');
                    cnt = splitted.Length;

                    if(cnt!=fieldcnt)
                    {
                        outlines.AppendLine("\"" + line + "\"" + ",," + "\"" + currentfields + "\"");
                        ismapped = 0;

                    }


                }
                
                Dts.Variables["User::IsMapped"].Value = ismapped;

                if (ismapped == 0)
                    File.AppendAllText(unmappedfields, outlines.ToString());

            }
            catch (Exception e)
            {
                
                Dts.Events.FireError(18, "Process Values", e.Message + "\n\n" + e.StackTrace, "", 0);

            }
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4e91ee531881413db3f80afb9f16a973</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4e91ee531881413db3f80afb9f16a973</msb:DisplayName>
		<msb:ProjectId>{78C18243-DF79-4681-BCF3-23CF5E01533C}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_f7077c8d2dd142238c929e9f46d48910.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4e91ee531881413db3f80afb9f16a973")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4e91ee531881413db3f80afb9f16a973.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4e91ee531881413db3f80afb9f16a973.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_f7077c8d2dd142238c929e9f46d48910.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMFJDl8AAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAACjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALgyAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
MgAAAAAAAEgAAAACAAUArCIAAFQPAAABAAAAAAAAAAAyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCyAQAAAQAAERQKAigQAAAKbxEAAApyAQAAcG8SAAAK
bxMAAAp0HwAAAQsCKBAAAApvEQAACnIpAABwbxIAAApvEwAACnQfAAABDAIoEAAACm8RAAAKckcA
AHBvEgAACm8TAAAKdB8AAAENCReNIAAAASUWHyydbxQAAAqOaRMEFxMFcncAAHBzFQAAChMGAigQ
AAAKbxEAAApyuQAAcG8SAAAKbxMAAAp0HwAAAQcoFgAAChMHEQcoFwAACiwIEQcoGAAACgoGbxkA
AAoTCCtYEQhvGgAAChMJEQkXjSAAAAElFh8snW8UAAAKjmkRBC43EQYbjR8AAAElFnLvAABwoiUX
EQmiJRhy8wAAcKIlGQmiJRpy7wAAcKIoGwAACm8cAAAKJhYTBREIbx0AAAotn94MEQgsBxEIbx4A
AArcAigQAAAKbxEAAApy/QAAcG8SAAAKEQWMJAAAAW8fAAAKEQUtDQgRBm8gAAAKKCEAAAreOhMK
AigQAAAKbyIAAAofEnIbAQBwEQpvIwAACnI5AQBwEQpvJAAACiglAAAKcj8BAHAWbyYAAAom3gAC
KBAAAAoWbycAAAoqAABBNAAAAgAAAMYAAABlAAAAKwEAAAwAAAAAAAAAAAAAAAAAAABrAQAAawEA
ADoAAAASAAABHgIoKAAACioeAigpAAAKKq5+AQAABC0eckEBAHDQAwAAAigqAAAKbysAAApzLAAA
CoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKC0AAAoqLnMIAAAGgAMAAAQqAABC
U0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAB0BAAAI34AAOAEAADQBgAAI1N0cmlu
Z3MAAAAAsAsAALQBAAAjVVMAZA0AABAAAAAjR1VJRAAAAHQNAADgAQAAI0Jsb2IAAAAAAAAAAgAA
AVcdogkJAwAAAPoBMwAWAAABAAAAKAAAAAUAAAAGAAAACQAAAAEAAAAtAAAAAgAAABAAAAABAAAA
AgAAAAMAAAAEAAAAAgAAAAEAAAAEAAAAAQAAAAEAAAAAACkEAQAAAAAABgDPAk4FBgBeA04FBgAb
AjsFDwDCBQAABgBIAqcEBgCyAqcEBgCTAqcEBgBFA6cEBgDvAqcEBgAIA6cEBgBfAqcEBgB6ApYD
CgAjA9gDCgCSAdgDBgAlAK4ABgDUBKgGBgAzAK4ABgC5BFoEBgBhBFoEBgD+ATsFBgBrBloEBgDm
BG4FBgDDBJIEDgDOARMEDgAvAhMEDgCuAX0EBgDjAU4FCgABBNgDEgAEBjIBEgD0ADIBBgCyA1oE
BgDPBFoEBgAtAXQABgAUBSEGBgD9AFoEBgBBAFoECgD2BNgDBgBdAVoEBgAJAVoEBgDGBqcEAAAA
AGsAAAAAAAEAAQABABAAcgRHADkAAQABAAAAEAB1BdEFVQABAAMAAAEQABgG0QVpAAMABwADAQAA
RAYAAE0ABAAKABEAZgTkABEAggHoABEA2ADsAAYGnQDwAFaANAbzAFaAYgHzAFAgAAAAAIYAeAQG
AAEARCIAAAAAhhguBQYAAQBMIgAAAACDGC4FBgABAFQiAAAAAJMI4gT3AAEAgCIAAAAAkwhqAfwA
AQCHIgAAAACTCHYBAQEBAI8iAAAAAJYIeAYHAQIAliIAAAAAhhguBQYAAgCeIgAAAACRGDQFDAEC
AAAAAQCQAwkALgUBABEALgUGABkALgUKACkALgUQADEALgUQADkALgUQAEEALgUQAEkALgUQAFEA
LgUQAFkALgUQAGEALgUQAGkALgUGAKEALgUGAMkALgUVANkALgUGAHEAPAYzAOEAAAY4AOkAUQQ9
APEAfANDAPkAcgZHAIEALgUQAPkAZAZOAAkBXQZUAAkBDgZZAAwAIAVoABQAkwZ3APkAZAZ8AIEA
UgGCABEBnwaIABkBxgEGAPEAhgOMAKkAsAORAAkBtAaVAOEAUgabAJEA6ACRAJEAyQCRAPkAZAah
ACkBCgWoAOEAhAYBAHEALgUGAKkALgUGADEBGwGxADEBwga6ALEALgXAANEALgUGAAgAFADaAAgA
GADfACkAcwBHAS4ACwAfAS4AEwAoAS4AGwBHAS4AIwBQAS4AKwB5AS4AMwB5AS4AOwB5AS4AQwBQ
AS4ASwB/AS4AUwB5AS4AWwCWAUMAYwDfAEkAcwBHAWEAewDfAGMAawDfABsAAwABAAQAAwAAAOYE
EAEAAIoBFQEAAHwGGgECAAQAAwACAAUABQABAAYABQACAAcABwBiAHEABIAAAAEAAABMHfiGAAAA
AAAAAQAAAAQAAAAAAAAAAAAAAMgApQAAAAAACwAAAAAAAAAAAAAA0QC5AwAAAAAEAAAAAAAAAAAA
AADIAFoEAAAAAAsAAAAAAAAAAAAAANEAfgAAAAAAAAAAAAEAAAB/BQAABQACAAAAAAAAU1RfZjcw
NzdjOGQyZGQxNDIyMzhjOTI5ZTlmNDZkNDg5MTAASUVudW1lcmFibGVgMQBJRW51bWVyYXRvcmAx
AEludDMyAFNUXzRlOTFlZTUzMTg4MTQxM2RiM2Y4MGFmYjlmMTZhOTczADxNb2R1bGU+AFN5c3Rl
bS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBTeXN0
ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBnZXRfU3RhY2tUcmFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X01lc3NhZ2UAVmFyaWFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUARmlsZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAEFwcGVuZExpbmUA
VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBF
ZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5v
blVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUA
VGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBB
c3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1
dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNT
SVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUA
UnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHNldF9WYWx1ZQB2YWx1ZQBT
eXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2Ny
aXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9i
amVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF9mNzA3N2M4ZDJkZDE0MjIzOGM5Mjll
OWY0NmQ0ODkxMC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFp
bgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVj
dGlvbgBFeGNlcHRpb24AQ3VsdHVyZUluZm8AQ2hhcgBTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJj
ZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IASUVudW1lcmF0b3IAR2V0RW51
bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNv
bXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTVF80ZTkxZWU1MzE4ODE0MTNkYjNmODBh
ZmI5ZjE2YTk3My5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMA
U1RfNGU5MWVlNTMxODgxNDEzZGIzZjgwYWZiOWYxNmE5NzMuUHJvcGVydGllcwBnZXRfVmFyaWFi
bGVzAFJlYWRMaW5lcwBTZXR0aW5ncwBTeXN0ZW0uQ29sbGVjdGlvbnMAU3VjY2VzcwBnZXRfRHRz
AFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBFeGlzdHMAQ29uY2F0AE9iamVjdABTcGxpdABnZXRf
RGVmYXVsdABzZXRfVGFza1Jlc3VsdABnZXRfQ3VycmVudABNb3ZlTmV4dABTeXN0ZW0uVGV4dABB
cHBlbmRBbGxUZXh0AGdldF9Bc3NlbWJseQAAACdVAHMAZQByADoAOgBQAGEAdABoAEkAbgBwAHUA
dABGAGkAbABlAAAdVQBzAGUAcgA6ADoAVQBuAE0AYQBwAHAAZQBkAAAvJABQAGEAYwBrAGEAZwBl
ADoAOgBDAHUAcgByAGUAbgB0AEYAaQBlAGwAZABzAABBQwB1AHIAcgBlAG4AdABNAGEAcABwAGkA
bgBnACwALAAgAE8AcgBpAGcAaQBuAGEAbABGAGkAZQBsAGQAcwAKAAA1VQBzAGUAcgA6ADoARgB1
AGwAbABJAG4AYgBvAHUAbgBkAEQAaQByAGUAYwB0AG8AcgB5AAADIgAACSIALAAsACIAAB1VAHMA
ZQByADoAOgBJAHMATQBhAHAAcABlAGQAAB1QAHIAbwBjAGUAcwBzACAAVgBhAGwAdQBlAHMAAAUK
AAoAAAEAcVMAVABfADQAZQA5ADEAZQBlADUAMwAxADgAOAAxADQAMQAzAGQAYgAzAGYAOAAwAGEA
ZgBiADkAZgAxADYAYQA5ADcAMwAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBj
AGUAcwAAAPklGdyYUOROhic/4LmjGMsABCABAQgDIAABBSABARERBCABAQ4FIAEBEWEXBwsVEj0B
Dg4ODggIEkEOFRJFAQ4OEkkEIAAScQQgABJ1BSABEnkcAyAAHAYgAR0OHQMFAAIODg4EAAECDggA
ARUSPQEODgUVEj0BDgggABUSRQETAAUVEkUBDgQgABMABQABDh0OBSABEkEOAyAAAgQgAQEcAyAA
DgUAAgEODgUgABKAlQYAAw4ODg4IIAUCCA4ODggIAAESgJkRgJ0FIAASgKEHIAIBDhKAoQi3elxW
GTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJZAwYSXQMGEhACBggDBhEUBAAAElkEAAASXQUAAQES
XQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfNGU5MWVlNTMxODgxNDEzZGIzZjgwYWZiOWYxNmE5NzMA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0AAC0AAAAzsrvvgEA
AACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9u
PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4
OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0
AAAA4DIAAAAAAAAAAAAA+jIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOwyAAAAAAAAAAAAAAAA
X0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEA+IZMHQAAAQD4hkwdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwA0AGUAOQAxAGUAZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYAYgA5
AGYAMQA2AGEAOQA3ADMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
NwA1ADAAMAAuADMANAA1ADUAMgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABT
AFQAXwBmADcAMAA3ADcAYwA4AGQAMgBkAGQAMQA0ADIAMgAzADgAYwA5ADIAOQBlADkAZgA0ADYA
ZAA0ADgAOQAxADAALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAA
AEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABUAHIA
YQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBh
AG0AZQAAAFMAVABfAGYANwAwADcANwBjADgAZAAyAGQAZAAxADQAMgAyADMAOABjADkAMgA5AGUA
OQBmADQANgBkADQAOAA5ADEAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBl
AAAAAABTAFQAXwA0AGUAOQAxAGUAZQA1ADMAMQA4ADgAMQA0ADEAMwBkAGIAMwBmADgAMABhAGYA
YgA5AGYAMQA2AGEAOQA3ADMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAx
AC4AMAAuADcANQAwADAALgAzADQANQA1ADIAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANQAwADAALgAzADQANQA1ADIAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAADDMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Downloaded File.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{B3A151A5-0403-4CDF-AC06-6C40A37F3400}"
          DTS:EvalOp="3"
          DTS:Expression="@[User::IsMapped] == 1"
          DTS:From="Package\Foreach Downloaded File\Validate_Fields"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Downloaded File\Process placement File" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{509B8368-3572-4AC1-8C16-74C7DD3D720D}"
          DTS:ObjectName="{509B8368-3572-4AC1-8C16-74C7DD3D720D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::PathInputFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="186,42"
          Id="Package\Foreach Downloaded File\Process placement File"
          TopLeft="61,120" />
        <NodeLayout
          Size="149,42"
          Id="Package\Foreach Downloaded File\Validate_Fields"
          TopLeft="91,18" />
        <EdgeLayout
          Id="Package\Foreach Downloaded File.PrecedenceConstraints[Constraint]"
          TopLeft="165.5,60">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-11.5,60"
              Start="0,0"
              End="-11.5,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26"
                    Point2="0,30"
                    Point3="-4,30" />
                  <mssgle:LineSegment
                    End="-7.5,30" />
                  <mssgle:CubicBezierSegment
                    Point1="-7.5,30"
                    Point2="-11.5,30"
                    Point3="-11.5,34" />
                  <mssgle:LineSegment
                    End="-11.5,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-13.75,35,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="354,217"
          Size="354,260"
          Id="Package\Foreach Downloaded File"
          TopLeft="45.5,49.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Downloaded File\Process placement File">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Foreach Downloaded File\Process placement File\Flat File Source"
          TopLeft="95,68" />
        <NodeLayout
          Size="122,42"
          Id="Package\Foreach Downloaded File\Process placement File\Nycohold"
          TopLeft="552,363" />
        <NodeLayout
          Size="194,42"
          Id="Package\Foreach Downloaded File\Process placement File\Exception File"
          TopLeft="309,359.839285714286" />
        <NodeLayout
          Size="155,60"
          Id="Package\Foreach Downloaded File\Process placement File\Process records"
          TopLeft="98,176" />
        <NodeLayout
          Size="128,42"
          Id="Package\Foreach Downloaded File\Process placement File\Artiva File"
          TopLeft="82.571428571429,385.821428571429" />
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Output 0]"
          TopLeft="148.785714285715,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,149.821428571429"
              Start="0,0"
              End="0,142.321428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,142.321428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-20.15572265625,65.4439174107145,40.3114453125,11.43359375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[NYCOHOLD]"
          TopLeft="212.25,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="400.75,127"
              Start="0,0"
              End="400.75,119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.7653276955603" />
                  <mssgle:CubicBezierSegment
                    Point1="0,39.7653276955603"
                    Point2="0,43.7653276955603"
                    Point3="4,43.7653276955603" />
                  <mssgle:LineSegment
                    End="396.75,43.7653276955603" />
                  <mssgle:CubicBezierSegment
                    Point1="396.75,43.7653276955603"
                    Point2="400.75,43.7653276955603"
                    Point3="400.75,47.7653276955603" />
                  <mssgle:LineSegment
                    End="400.75,119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="174.3437890625,48.7653276955603,52.062421875,9.5732421875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Flat File Source Output]"
          TopLeft="173.5,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66"
              Start="0,0"
              End="0,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Downloaded File\Process placement File.Paths[Exceptions]"
          TopLeft="200,236">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206,123.839285714286"
              Start="0,0"
              End="206,116.339285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.2948823207445" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46.2948823207445"
                    Point2="0,50.2948823207445"
                    Point3="4,50.2948823207445" />
                  <mssgle:LineSegment
                    End="202,50.2948823207445" />
                  <mssgle:CubicBezierSegment
                    Point1="202,50.2948823207445"
                    Point2="206,50.2948823207445"
                    Point3="206,54.2948823207445" />
                  <mssgle:LineSegment
                    End="206,116.339285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="78.932421875,55.2948823207445,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>