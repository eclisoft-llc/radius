<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/11/2020 5:51:32 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DFW2-APPDEV-006"
  DTS:CreatorName="CORP\nokeke"
  DTS:DTSID="{B5A750AF-6165-4C9E-BE77-BC14A75373B5}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="13.0.2165.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="PlacementMaintenanceFix"
  DTS:PackageType="5"
  DTS:VersionBuild="42"
  DTS:VersionGUID="{D826951B-E71B-4486-A751-A2060EE1017C}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ARTIVA]"
      DTS:CreationName="ADO.NET:System.Data.Odbc.OdbcConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{21D9CA10-3555-4DE5-A9A3-50BD3E310AE7}"
      DTS:ObjectName="ARTIVA">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"DSN="+  @[$Project::Namespace]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="DSN=THIRDMIG2;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ArtivaMTPayment]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{382F4730-5FE6-4DC2-B09C-140FE5903AA3}"
      DTS:ObjectName="ArtivaMTPayment">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::PathArtiva]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\ArtivaMT-THIRDMIG2-Integra Credit--5212020113446.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Data"
              DTS:DTSID="{27BFA756-0D05-4BD0-A7C7-5A2F5BD0B389}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Exceptions]"
      DTS:CreationName="FLATFILE"
      DTS:DelayValidation="True"
      DTS:DTSID="{20B9716C-E9DD-4633-ACDF-04582C42FC9F}"
      DTS:ObjectName="Exceptions">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ExceptionReportFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="RaggedRight"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Outbound\-ExceptionReport.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="5000"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Message"
              DTS:DTSID="{202C0599-76C1-4EC9-A04C-CC4DDAA51040}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[NewFields]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{47CB4E14-8B5F-483B-A60E-17F9AF27713A}"
      DTS:ObjectName="NewFields">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::FullInboundDirectory]  +  @[User::CurrentFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x0022_"
          DTS:CodePage="1252"
          DTS:ConnectionString="M:\IntegraCredit\Inbound\">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="loan_id"
              DTS:DTSID="{1E50F624-E103-4E5F-94C2-9AE6ABE1C4AD}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ssn"
              DTS:DTSID="{DC2AD177-2FC6-4CA2-8D7C-A70E86515445}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="20"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="dob"
              DTS:DTSID="{AB3353D6-3D78-41EA-B720-1F289606931B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="200"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="bank_name"
              DTS:DTSID="{0099C4FD-71B2-4711-8F19-B507D2FE29A4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="bank_account_1st_4_digits"
              DTS:DTSID="{296BDB02-007B-4039-A152-84741E552EF2}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{656B5CFB-E175-42D9-9C41-DAB9C00C296D}"
      DTS:ObjectName="InboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Inbound\</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2890B369-9B34-4004-B660-8D96DE9FC2AB}"
      DTS:ObjectName="InboundFileMask">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">*Additional info for placed loans v3*.csv</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{2DB40332-5E27-4CB0-A8C0-A041C495AEB3}"
      DTS:ObjectName="OutboundDirectory">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Outbound\</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DD895383-E5D3-4E6C-B818-91A4813CA32C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CurrentFile">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{FED9455A-2C98-49DC-869D-2579CB264257}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="REPLACE(REPLACE(REPLACE(LEFT(  (DT_WSTR, 99) @[System::StartTime]  ,19)&#xA;,&quot;:&quot;,&quot;&quot;),&quot;/&quot;,&quot;&quot;),&quot; &quot;,&quot;&quot;)"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DateStamp">
      <DTS:VariableValue
        DTS:DataType="8">5212020113446</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DCD71628-4EE8-49A7-A788-9450D056F426}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]  +  @[User::CurrentFile]  + &quot;-ExceptionReport.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExceptionReportFile">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\-ExceptionReport.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BBA3013F-9B2E-4B39-932E-EF122481BD3B}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath]+ @[$Package::InboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullInboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Inbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{559F0735-B5A3-4302-9864-08C71AC77EB4}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::LocalPath] + @[$Package::OutboundDirectory]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FullOutboundDirectory">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9BE27153-4DFA-4CD7-A3E6-60A0239344A6}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::FullOutboundDirectory]+ &quot;ArtivaMT-&quot;+  @[$Project::Namespace] +&quot;-&quot; + @[$Project::ClientName]  + &quot;-&quot; + @[User::CurrentFile]  + &quot;-&quot; +  @[User::DateStamp] + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PathArtiva">
      <DTS:VariableValue
        DTS:DataType="8">M:\IntegraCredit\Outbound\ArtivaMT-THIRDMIG2-Integra Credit--5212020113446.csv</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{d8446c2e-c055-4db5-b2bb-a5db5c18123a}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="DTS.ForEachFileEnumerator.3"
        DTS:DTSID="{7ecf956b-8cdc-40d6-b00c-7b4c7c1cbb24}"
        DTS:ObjectName="{E135B64F-EF71-4DDD-8453-1A4A95126D0C}">
        <DTS:PropertyExpression
          DTS:Name="Directory">@[User::FullInboundDirectory]</DTS:PropertyExpression>
        <DTS:PropertyExpression
          DTS:Name="FileSpec">@[$Package::InboundFileMask]</DTS:PropertyExpression>
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="M:\IntegraCredit\Inbound\" />
            <FEFEProperty
              FileSpec="*Additional info for placed loans v3*.csv" />
            <FEFEProperty
              FileNameRetrievalType="1" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\AddNewFields"
          DTS:CreationName="SSIS.Pipeline.3"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{843483c3-ec1a-485c-bbd2-bc5c4a1396df}"
          DTS:ExecutableType="SSIS.Pipeline.3"
          DTS:LocaleID="-1"
          DTS:ObjectName="AddNewFields">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\AddNewFields\Artiva MT File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Artiva MT File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[ArtivaMTPayment]"
                      connectionManagerRefId="Package.ConnectionManagers[ArtivaMTPayment]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[ArtivaMT].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Inputs[Flat File Destination Input].ExternalColumns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Data" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\AddNewFields\Exception File"
                  componentClassID="DTSAdapter.FlatFileDestination.3"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Flat File Destination"
                  localeId="1033"
                  name="Exception File">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">false</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\AddNewFields\Exception File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\AddNewFields\Exception File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Exception File.Inputs[Flat File Destination Input].Columns[Data]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="5000"
                          cachedName="Data"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[Exceptions].Columns[Data]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Exception File.Inputs[Flat File Destination Input].ExternalColumns[Message]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          name="Message" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data"
                  componentClassID="DTSAdapter.FlatFileSource.3"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Get_Mt_Data"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[NewFields]"
                      connectionManagerRefId="Package.ConnectionManagers[NewFields]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[ssn]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[ssn]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[ssn]"
                          name="ssn"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[dob]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[dob]"
                          length="20"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[dob]"
                          name="dob"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_name]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[bank_name]"
                          length="200"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_name]"
                          name="bank_name"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[bank_account_1st_4_digits]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]"
                          name="bank_account_1st_4_digits"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[loan_id]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[loan_id]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[loan_id]"
                          name="loan_id"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[ssn]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ssn" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[dob]"
                          codePage="1252"
                          dataType="str"
                          length="20"
                          name="dob" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[bank_name]"
                          codePage="1252"
                          dataType="str"
                          length="200"
                          name="bank_name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[bank_account_1st_4_digits]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="bank_account_1st_4_digits" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].ExternalColumns[loan_id]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="loan_id" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\AddNewFields\Proess"
                  componentClassID="DTS.ManagedComponentWrapper.3"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Proess"
                  version="8">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ExceptionsBuffer ExceptionsBuffer;

    public ArtivaMTBuffer ArtivaMTBuffer;

    int InputsFinished = 0;

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

        if (Buffer.EndOfRowset)
        {
            InputsFinished = InputsFinished + 1;
            if (InputsFinished == 1)
            {
                FinishOutputs();
                MarkOutputsFinished();
            }
        }

    }

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ExceptionsBuffer)
        {
            ExceptionsBuffer.SetEndOfRowset();
            ExceptionsBuffer = null;
        }

        if (null != ArtivaMTBuffer)
        {
            ArtivaMTBuffer.SetEndOfRowset();
            ArtivaMTBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Exceptions"))
            {
                ExceptionsBuffer = new ExceptionsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ArtivaMT"))
            {
                ArtivaMTBuffer = new ArtivaMTBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

    }

    public virtual void CreateNewOutputRows()
    {
    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 ExceptionConnection
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"ExceptionConnection").ConnectionManager;
        }
    }

    public IDTSConnectionManager100 Artiva
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Artiva").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String CurrentFile
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["CurrentFile"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using RGS.ArtivaGeneralPurpose.Data.Records;
using System.Linq;
using System.Collections.Generic;
using FileHelpers;
using System.Data.Odbc;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private bool _exceptionReportCreated = false;

    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    private Dictionary<string, string> trancodes;
    System.Data.Odbc.OdbcConnection ArtivaCOnnection;
    public override void PreExecute()
    {
        base.PreExecute();

        trancodes = new Dictionary<string, string> { { "DP", "DP" },
            { "DPNSF", "DPNSF" }, { "DBJ", "DBJ" },
            { "CRJ", "CRJ" } };
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        if (!_exceptionReportCreated)
            System.IO.File.Delete(Connections.ExceptionConnection.ConnectionString);
    }
    int InputRecordCount;
    FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203> FHE = new FileHelpers.DelimitedFileEngine<AccountFreeFormTextMntOnly_203>();
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        try
        {
            InputRecordCount++;
            ArtivaCOnnection = Connections.Artiva.AcquireConnection(null) as System.Data.Odbc.OdbcConnection;

            
            string Aracid = string.Empty;
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT ARACID FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') WHERE ARACCLACCT = '{0}'", Row.loanid.Trim()), ArtivaCOnnection, null))
            {
                var aracid = cmd.ExecuteScalar();

                if (aracid == DBNull.Value || aracid == null || aracid.ToString() == "")
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Unable to find account!  Row Number:{0} Client Reference Number:{1} .  Update Skipped", InputRecordCount, Row.loanid);
                    return;
                }
                else
                {
                    Aracid = aracid.ToString();
                }
            }

            ClientBankingInformation_807 Record807 = new ClientBankingInformation_807();            
            var updSSN = new UpdateAccount_UPD();
            var updDOB = new UpdateAccount_UPD();
            var rec203s = new List<AccountFreeFormText_203>();    
                    
       

            //ssn
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT entity.ARENSSN FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT account ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') INNER JOIN ARENTITY entity on account.ARACRPID = entity.ARENID  WHERE ARACCLACCT = '{0}'", Row.loanid.Trim()), ArtivaCOnnection, null))
            {
                var arassn = cmd.ExecuteScalar();

                if((arassn == DBNull.Value || arassn == null || arassn.ToString() == "") && (Row.ssn.Trim().Distinct().Count() == 1 || Row.ssn == "NULL" || Row.ssn == ""))
                    return;
                
                if (arassn == DBNull.Value || arassn == null || arassn.ToString() == "")
                {
                   
                    updSSN.AccountId = Aracid;
                    updSSN.UpdateField = "ARENSSN";
                    updSSN.UpdateValue= Row.ssn;
                    AddPlacementRow(updSSN);

                }
                else
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Update manually!  LoanID:{0} Table_SSNValue:{1} File_SSNValue:{2}.  Update Skipped", Row.loanid, arassn.ToString(), Row.ssn);
                }
            }

            //dob
            using (OdbcCommand cmd = new OdbcCommand(string.Format("SELECT entity.ARENBTHDTE FROM %STARTTABLE ARCLIENT INNER JOIN ARACCOUNT account ON ARCLID = ARACCLTID AND ARCLID IN ('INTEG1','INTEG2','INTEG3','INTEG4','INTEG5') INNER JOIN ARENTITY entity on account.ARACRPID = entity.ARENID  WHERE ARACCLACCT = '{0}'", Row.loanid.Trim()), ArtivaCOnnection, null))
            {
                var aradob = cmd.ExecuteScalar();

                if ((aradob == DBNull.Value || aradob == null || aradob.ToString() == "") && (Row.dob.Trim().Distinct().Count() == 1 || Row.dob == "00/00/0000" || Row.dob == "NULL" || Row.dob == ""))
                    return;

                if (aradob == DBNull.Value || aradob == null || aradob.ToString() == "")
                {
                    
                    updDOB.AccountId = Aracid;
                    updDOB.UpdateField = "ARENBTHDTE";
                    updDOB.UpdateValue = getFormateddate(Row.dob.Trim());
                    AddPlacementRow(updDOB);
                }
                else
                {
                    _exceptionReportCreated = true;
                    ExceptionsBuffer.AddRow();
                    ExceptionsBuffer.Data = string.Format("Update manually!  LoanID:{0} Table_DOBValue:{1} File_DOBValue:{2}.  Update Skipped", Row.loanid, aradob.ToString(), Row.dob);
                }
            }




            #region Record 807
            Record807.AcctIDFiller = Aracid;
            Record807.CheckingAccountNumber = (Row.bankaccount1st4digits.Trim().Distinct().Count() == 1 && Row.bankaccount1st4digits.Trim().StartsWith("0")) || Row.bankaccount1st4digits == "NULL" || Row.bankaccount1st4digits.Trim() == "" ? "" : Row.bankaccount1st4digits;
            #endregion

            #region 203

            string bank_name = Row.bankname.Trim().Distinct().Count() == 1 || Row.bankname == "NULL" || Row.bankname == "" ? "" : Row.bankname;
            AddPlacementRow(new AccountFreeFormTextMntOnly_203 { AccountId = Aracid, FreeFormText = "bank name:  " + bank_name });
            
            #endregion

                          
            AddPlacementRow(Record807);            




        }
        catch (Exception ex)
        {
            bool cancel = false;
            ComponentMetaData.FireError(10, "Exception in notes script", ex.Message, "", 0, out cancel);
            if (ex.InnerException != null)
            {
                ComponentMetaData.FireError(10, "Exception inner exception", ex.InnerException.Message, "", 0, out cancel);
            }
            ComponentMetaData.FireError(10, "Exception StackTrace", ex.StackTrace, "", 0, out cancel);
            return;
        }
    }



    private string getFormateddate(string str)
    {

        str = str.Length < 8 && str.Substring(0, 1) != "0" ? "0" + str : str;
        str = str.Length < 8 ? str.Insert(2, "0") : str;

        return str;
    }

    private static void AddToListRecord203(AccountFreeFormText_203 Record203, List<AccountFreeFormText_203> ListRecord203)
    {
        if (!Record203.FreeFormText.ToUpper().Contains("XXXX"))
        {
            ListRecord203.Add(Record203);
        }
    }

    private DateTime? getDate(string sDt)
    {

        string[] format = {"Mddyyyy", "MMddyyyy",
                     "Mdyyyy", "MMdyyyy"};
        var dateculture = new System.Globalization.CultureInfo("en-US");

        DateTime dt;
        if (DateTime.TryParseExact(getFormateddate(sDt), format, System.Globalization.CultureInfo.InvariantCulture, System.Globalization.DateTimeStyles.None, out dt))
        {
            return dt;
        }
        return null;
    }

    private void add203(string label, string data, List<AccountFreeFormText_203> rec203s)
    {
        if (string.IsNullOrEmpty(data))
            return;

        rec203s.Add(new AccountFreeFormText_203 { FreeFormText = label + data });
    }

    private void WriteExceptionMessage(string msg, string data)
    {
        _exceptionReportCreated = true;
        ExceptionsBuffer.AddRow();
        ExceptionsBuffer.Data = msg + "  " + data;
    }

    private void AddPlacementRow<T>(T record) where T : GeneralPurposeRecordBase
    {
        var recordList = new List<T>();
        recordList.Add(record);
        var recordString = CommonEngine.WriteString<T>(recordList);
        string recordType = recordString.Split(',')[0];

        if (string.IsNullOrWhiteSpace(recordType.Replace(recordString, "").Replace("COMAK", "").Replace(",", "").Replace(".", "").Replace("0", "").Replace("/", "").Replace("N", "")))
            return;

          ArtivaMTBuffer.AddRow();
          ArtivaMTBuffer.Data = recordString.ToUpper();
    }
}



]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ssn
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool ssn_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String dob
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool dob_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public String bankname
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[2]);
        }
    }
    public bool bankname_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String bankaccount1st4digits
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[3]);
        }
    }
    public bool bankaccount1st4digits_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public String loanid
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[4]);
        }
    }
    public bool loanid_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ExceptionsBuffer: ScriptBuffer

{
    public ExceptionsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ArtivaMTBuffer: ScriptBuffer

{
    public ArtivaMTBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Data
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Data_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Settings.get_Default():SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Sett" +
    "ings")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A8865E69-B834-4E85-93DB-5BBD5E761F1B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4ac8cb4c75d34a55855dc106f555b957</RootNamespace>
    <AssemblyName>SC_4ac8cb4c75d34a55855dc106f555b957</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CommonClasses, Version=1.1.0.0, Culture=neutral, PublicKeyToken=1f7181b3d59d8c40, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\CommonClasses\1.1.0.0\CommonClasses.dll</HintPath>
    </Reference>
    <Reference Include="FileHelpers, Version=3.3.0.0, Culture=neutral, PublicKeyToken=3e0c08d59cc3d657, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\FileHelpers\1.1.0.0\FileHelpers.dll</HintPath>
    </Reference>
    <Reference Include="RGS.ArtivaGeneralPurpose, Version=1.20.0.0, Culture=neutral, PublicKeyToken=972530eacd4bf30a, processorArchitecture=MSIL">
      <SpecificVersion>False</SpecificVersion>
      <HintPath>R:\Software\RGS.ArtivaGeneralPurpose\1.1.0.0\RGS.ArtivaGeneralPurpose.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:CodeName>
		<msb:DisplayName>SC_4ac8cb4c75d34a55855dc106f555b957</msb:DisplayName>
		<msb:ProjectId>{DA30ED14-06B8-4F0B-8EF6-6B34AC9FB2E8}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_4ac8cb4c75d34a55855dc106f555b957.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_4ac8cb4c75d34a55855dc106f555b957")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4ac8cb4c75d34a55855dc106f555b957.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4ac8cb4c75d34a55855dc106f555b957.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="2">
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4ac8cb4c75d34a55855dc106f555b957.dll]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[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
8QCpCgYA1wAfAgYAqACuBwYAkAOuBxYAFQSpCgoAzAmmAxoArAmmAwoA7AimAwoAyQymAx4AZgAY
CgYAtgSWCgYA3QnvCgYA4AjmByIAfwTaBiIA5wTaBiIALgTRBwYAmwTPCgYAWQO2AQYAqQauBw4A
+wcOAg4AmgK0CAYAGAeuBwYA3gCuBwYAHgOuByYAEwNLCQYAswAfAioAAQBACgYAgAmuBwYAoQvm
BxIAmQMCDAYAVwmuBwYAhwiuBwYAxwiuByoAKgBACioATQBACh4AfwAYCh4AGgAYCn8AcA0AAB4A
kAAYCgYAxwOuBwYAKgOuBwYA2g0LCAAAAACDAQAAAAABAAEAAQAQAMYHAAAYAAEAAQABABAAkAkA
AHEABgALAAEAEAC7CQAAcQAGABgAAQAQAJ0JAABxAAYAHgABABAAqwwAAH0ABgAkAAEAEADuCwAA
VQALACwAAQAQAJcLAABVAAwALwAAABAA9gpcC1UADQAxAAABEADVC1wLmQAPADUAAQBrAv0BAQBS
CwACAQA9CAgCAQDZDAwCAQCyAQ8CBgDuCxcCBgCXCxsCBgC7CR8CBgCdCSMCAQBIAgwCAQC5DCcC
AQC5DCcCEQC6BysCEQDwAzACEQDhAjUCUCAAAAAAxgA5BgYAAQCuIAAAAADGAEQGBgABANQgAAAA
AMYAtw05AgEA5CUAAAAAgQBvBD8CAgA5JgAAAACRAC8BRAIDAFwmAAAAAIEAZwRQAgUAwiYAAAAA
gQAoAVoCBgDlJgAAAACBAP0CZgIJABAnAAAAAIEApw1sAgsAyycAAAAAhhhzCgYADADeJwAAAACG
GHMKVgEMAOknAAAAAIYI2AgrAA8A/icAAAAAhghkB3IBDwAHKAAAAACGCAYCKwAPABwoAAAAAIYI
LwdyAQ8AJSgAAAAAhgiDAysADwA6KAAAAACGCFAHcgEPAEMoAAAAAIYIDgwrAA8AWCgAAAAAhghz
B3IBDwBhKAAAAACGCIMCKwAPAHYoAAAAAIYIPgdyAQ8AfygAAAAAhgDODXIBDwCHKAAAAACGAI0M
cgEPAN4nAAAAAIYYcwpWAQ8AjygAAAAAhgjOARAAEgCZKAAAAACGCB8HcwITALAoAAAAAIYAoA0G
ABQAuCgAAAAAhgCKDAYAFACHKAAAAACGAI0McgEUAN4nAAAAAIYYcwpWARQAjygAAAAAhgjOARAA
FwCZKAAAAACGCB8HcwIYALAoAAAAAIYAoA0GABkAuCgAAAAAhgCKDAYAGQCHKAAAAACGAI0McgEZ
AMAoAAAAAIYYcwoGABkA4CgAAAAAxgA2DXgCGQA7KQAAAADGASgMBgAdAD0pAAAAAIEAVwIGAB0A
dCkAAAAAxgBDDYICHQA7KQAAAADGATYMBgAhAOcpAAAAAMYBLw05AiEAOykAAAAAxgG3DTkCIgD6
KQAAAACGGHMKjgIjAAkqAAAAAIYIbwiiASQAKioAAAAAhgjyAaIBJABLKgAAAACGGHMKjgIkAFoq
AAAAAIYITgMrACUAgCoAAAAAgxhzCgYAJQCIKgAAAACTCNkJlAIlALQqAAAAAJMI2AP9ACUAuyoA
AAAAkwjkA5oCJQDDKgAAAACWCJ8MoQImAMoqAAAAAIYYcwoGACYA0ioAAAAAkRh5CqYCJgAAAAEA
0g0AAAEAgAoAAAEAOAEAAAIANAEAAAEASgwAAAEA1AYAAAIA7QEAAAMAhAoAAAEAugYAAAIA7QEA
AAEAsAIAAAEA0gkAAAIAsAsAAAMA+ggAAAEA0gkAAAIAsAsAAAMA+ggAAAEAXAYAAAEAXAYAAAEA
0gkAAAIAsAsAAAMA+ggAAAEAXAYAAAEAXAYAAAEAjAEAAAIAXgMAAAMA0gkAAAQA+ggAAAEALgwA
AAIAjAoAAAMA+gsAAAQA+ggAAAEA0gkAAAEA0g0AAAEAzwwAAAEAzwwAAAEAXAYJAHMKAQARAHMK
BgAZAHMKCgApAHMKEAAxAHMKEAA5AHMKEABBAHMKEABJAHMKEABRAHMKEABZAHMKEABhAHMKEABp
AHMKBgAJAXMKBgApAXMKFQA5AXMKBgD5ADkGBgAMAHMKBgAMAEQCIwD5AEQGBgABAYgGKwBBAZQE
LwABAV0ISwBJAQUOUABJAbUHKwBJAVUMUwChAHMKWQBZAVwJYwBhAVYGZwCpAJ0GKwBJAeMNbABJ
AVUMcgBxAV8EBgCRAHMKBgCZAHMKBgAUAHMKBgB5AXEMgAB5AeQMlgCZADoCUACZAI4CUACZAFAG
UABJAVUMpwCRAAMKUABJAckGrwCRAGoJUACJAHMKBgCJADoCUABJAU4MtACJAE8NUAD5ANcBxACx
APECKwCJAWkKygCxAKEI1QCxANICKwBJAb4G2gBJAbAG3gBJAe8NbABJAQcN5AC5AE8NUABJARAK
KwBJAeULrwAUAEQC6gAZAXMKEAAZAQAE/QDRAFwMAwEcAHMK6gBJAf0NGgG5AHMKBgBJAU4MHwEk
AHMKBgAkAEQC6gChAXwGMQFJAZkMQgFJAbcCSQFJAb8CGgEsAHMKBgDhAHMKVgHhANIJYAHhALAL
ZAHpAKYGaAHhAI0HbQHhAM4NcgHhAI0McgHhAKUHdgHhAJQHAQCxAXMKEADhAKANBgDhAIoMBgD5
AHMKBgBJAd4LfAH5AMQLhAHpAHoMcgH5AJQBjgGpAHMKBgCJAR0IlQHBAWgDmwHJAe0JogH5AIsL
qAHRAZwHrgH5AIsNtQHZAVwNuwHxATwDwgHxAdYNywERAXMK0QExAXMKBgAuAAsAyQIuABMA0gIu
ABsA8QIuACMA+gIuACsAIwMuADMAIwMuADsAIwMuAEMA+gIuAEsAKQMuAFMAIwMuAFsAQANDAGMA
iAMjAWsAiAPhAXsAiANJAnMA8QJpAnMA8QI0APAAJgGKAQMAAQAEAAsABQANAAcADwAIABEACQAS
AAoAFAAAANwIqgIAAGgHrgIAAAoCqgIAADMHrgIAAIcDqgIAAFQHrgIAABIMqgIAAHcHrgIAAIcC
qgIAAEIHrgIAAOgBqgIAACMHrgIAAOgBqgIAACMHrgIAAHMIsgIAAPYBsgIAAFIDqgIAAN0JuAIA
AA0EvgIAAKMMxAICAAwAAwACAA0ABQACAA4ABwACAA8ACQACABAACwACABEADQACABIADwACABMA
EQACABQAEwACABUAFQABABkAFwABABoAGQABAB8AGwABACAAHQACAC0AHwACAC4AIQACADAAIwAC
ADIAJQACADMAJwABADQAJwACADUAKQAcAHkAEwEqAU8BBIAAAAEAAAAVHWJuAAAAAAAAXwEAAAQA
AAAAAAAAAAAAANkB/QEAAAAACwAAAAAAAAAAAAAA4gHqDAAAAAAEAAAAAAAAAAAAAADZAcIBAAAA
AAMAAgAHAAAAAAAAAOsBAgwAAAAAAQABAAAAAAAAAAAA9AFGBAAAAAALAAAAAAAAAAAAAADiAQ4N
AAAAAAsAAAAAAAAAAAAAAOIBBAkAAAAABAAAAAAAAAAAAAAA2QGuBwAAAAAEAAAAAAAAAAAAAADZ
AcwDAAAAAAsAAAAAAAAAAAAAAOIBJwkAAAAAAAAAAAEAAAAACwAAAAAAABMAwAFJAJIASwCSABIA
ogASALoAEgC/AI8APQEBAG0AAAAASURUU0NvbXBvbmVudE1ldGFEYXRhMTAwAElEVFNWYXJpYWJs
ZTEwMABJRFRTUnVudGltZUNvbm5lY3Rpb25Db2xsZWN0aW9uMTAwAElEVFNSdW50aW1lQ29ubmVj
dGlvbjEwMABJRFRTQ29ubmVjdGlvbk1hbmFnZXIxMDAASURUU1ZhcmlhYmxlczEwMABJRFRTRXZh
bHVhdG9yQ29udGV4dDEwMABOdWxsYWJsZWAxAElFbnVtZXJhYmxlYDEARGVsaW1pdGVkRmlsZUVu
Z2luZWAxAExpc3RgMQBJbnQzMgBEaWN0aW9uYXJ5YDIAQWNjb3VudEZyZWVGb3JtVGV4dF8yMDMA
QWNjb3VudEZyZWVGb3JtVGV4dE1udE9ubHlfMjAzAGFkZDIwMwBBZGRUb0xpc3RSZWNvcmQyMDMA
Q2xpZW50QmFua2luZ0luZm9ybWF0aW9uXzgwNwBTQ180YWM4Y2I0Yzc1ZDM0YTU1ODU1ZGMxMDZm
NTU1Yjk1NwA8TW9kdWxlPgBJbnB1dElEAEdldE91dHB1dElEAFVwZGF0ZUFjY291bnRfVVBEAEZI
RQBTeXN0ZW0uSU8AVABTeXN0ZW0uRGF0YQBzZXRfRGF0YQBnZXRfQ29tcG9uZW50TWV0YURhdGEA
ZGF0YQBnZXRfQXJ0aXZhAG1zY29ybGliAGdldF9kb2IAU3lzdGVtLkRhdGEuT2RiYwBTeXN0ZW0u
Q29sbGVjdGlvbnMuR2VuZXJpYwBBY2NvdW50SWQAQWRkAElucHV0c0ZpbmlzaGVkAE1hcmtPdXRw
dXRzRmluaXNoZWQAX2V4Y2VwdGlvblJlcG9ydENyZWF0ZWQAZ2V0X2xvYW5pZABVcGRhdGVGaWVs
ZABEYkNvbW1hbmQAT2RiY0NvbW1hbmQAcmVjb3JkAFJlcGxhY2UASXNOdWxsT3JXaGl0ZVNwYWNl
AGdldF9TdGFja1RyYWNlAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBXcml0ZUV4Y2VwdGlv
bk1lc3NhZ2UARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBnZXRfQ3VycmVudEZpbGUASW5wdXROYW1lAEdldFJ1bnRpbWVDb25uZWN0aW9u
QnlOYW1lAGdldF9iYW5rbmFtZQBEYXRlVGltZQBDb21tb25FbmdpbmUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAR2VuZXJhbFB1cnBvc2VSZWNv
cmRCYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZQBE
aXNwb3NlAGdldERhdGUAZ2V0Rm9ybWF0ZWRkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAERlbGV0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAFVwZGF0ZVZhbHVlAHZhbHVl
AFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAV3JpdGVTdHJpbmcAZ2V0X0Nvbm5lY3Rpb25TdHJp
bmcAVG9TdHJpbmcAR2V0U3RyaW5nAFN1YnN0cmluZwBtc2cAZ2V0X0xlbmd0aABTdGFydHNXaXRo
AGxhYmVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ180YWM4Y2I0Yzc1ZDM0YTU1ODU1ZGMxMDZm
NTU1Yjk1Ny5kbGwAREJOdWxsAHNldF9EYXRhX0lzTnVsbABnZXRfZG9iX0lzTnVsbABnZXRfbG9h
bmlkX0lzTnVsbABnZXRfYmFua25hbWVfSXNOdWxsAGdldF9zc25fSXNOdWxsAGdldF9iYW5rYWNj
b3VudDFzdDRkaWdpdHNfSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAFRy
aW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBPZGJjVHJhbnNhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X1J1bnRpbWVD
b25uZWN0aW9uQ29sbGVjdGlvbgBBcnRpdmFDT25uZWN0aW9uAE9kYmNDb25uZWN0aW9uAEFjcXVp
cmVDb25uZWN0aW9uAGdldF9FeGNlcHRpb25Db25uZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNl
cHRpb24AZ2V0X0lubmVyRXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBTdHJpbmdDb21wYXJp
c29uAGdldF9zc24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAATWljcm9zb2Z0
LlNxbFNlcnZlci5EVFNSdW50aW1lV3JhcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1BpcGVsaW5l
V3JhcABTeXN0ZW0uTGlucQBDaGFyAEV4ZWN1dGVTY2FsYXIAQ2hlY2tpbmdBY2NvdW50TnVtYmVy
AElGb3JtYXRQcm92aWRlcgBJbnB1dDBCdWZmZXIAQXJ0aXZhTVRCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIARXhjZXB0aW9uc0J1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRf
Q29ubmVjdGlvbk1hbmFnZXIAQWNjdElERmlsbGVyAFRvVXBwZXIATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZS5XcmFwcGVyAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldy
YXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBzdHIAcmVjMjAzcwBPdXRwdXRJRHMAU3lzdGVt
LkRpYWdub3N0aWNzAFJHUy5BcnRpdmFHZW5lcmFsUHVycG9zZS5EYXRhLlJlY29yZHMAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzRhYzhjYjRjNzVk
MzRhNTU4NTVkYzEwNmY1NTViOTU3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwB0cmFuY29kZXMAU0NfNGFjOGNiNGM3NWQzNGE1NTg1NWRjMTA2ZjU1NWI5NTcu
UHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMARGF0ZVRpbWVTdHlsZXMAQnVmZmVyQ29s
dW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb250YWlucwBDb25u
ZWN0aW9ucwBCdWZmZXJzAEZpbGVIZWxwZXJzAGdldF9iYW5rYWNjb3VudDFzdDRkaWdpdHMARmlu
aXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAHNEdABDb25jYXQARm9ybWF0AFRyeVBhcnNl
RXhhY3QAT2JqZWN0AERpc3RpbmN0AGdldF9FbmRPZlJvd3NldABTZXRFbmRPZlJvd3NldABTcGxp
dABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQASW5wdXRSZWNvcmRDb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AEluc2VydABN
aWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AFByaW1l
T3V0cHV0AEZyZWVGb3JtVGV4dABHZXRWYWx1ZVdpdGhDb250ZXh0AFNjcmlwdENvbXBvbmVudEV2
YWxDb250ZXh0AGdldF9FdmFsdWF0b3JDb250ZXh0AEFkZFJvdwBBZGRQbGFjZW1lbnRSb3cASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBvcF9J
bmVxdWFsaXR5AElzTnVsbE9yRW1wdHkAAAAFRABQAAALRABQAE4AUwBGAAAHRABCAEoAAAdDAFIA
SgAAgVFTAEUATABFAEMAVAAgAEEAUgBBAEMASQBEACAARgBSAE8ATQAgACUAUwBUAEEAUgBUAFQA
QQBCAEwARQAgAEEAUgBDAEwASQBFAE4AVAAgAEkATgBOAEUAUgAgAEoATwBJAE4AIABBAFIAQQBD
AEMATwBVAE4AVAAgAE8ATgAgAEEAUgBDAEwASQBEACAAPQAgAEEAUgBBAEMAQwBMAFQASQBEACAA
QQBOAEQAIABBAFIAQwBMAEkARAAgAEkATgAgACgAJwBJAE4AVABFAEcAMQAnACwAJwBJAE4AVABF
AEcAMgAnACwAJwBJAE4AVABFAEcAMwAnACwAJwBJAE4AVABFAEcANAAnACwAJwBJAE4AVABFAEcA
NQAnACkAIABXAEgARQBSAEUAIABBAFIAQQBDAEMATABBAEMAQwBUACAAPQAgACcAewAwAH0AJwAB
AQCAq1UAbgBhAGIAbABlACAAdABvACAAZgBpAG4AZAAgAGEAYwBjAG8AdQBuAHQAIQAgACAAUgBv
AHcAIABOAHUAbQBiAGUAcgA6AHsAMAB9ACAAQwBsAGkAZQBuAHQAIABSAGUAZgBlAHIAZQBuAGMA
ZQAgAE4AdQBtAGIAZQByADoAewAxAH0AIAAuACAAIABVAHAAZABhAHQAZQAgAFMAawBpAHAAcABl
AGQAAIHxUwBFAEwARQBDAFQAIABlAG4AdABpAHQAeQAuAEEAUgBFAE4AUwBTAE4AIABGAFIATwBN
ACAAJQBTAFQAQQBSAFQAVABBAEIATABFACAAQQBSAEMATABJAEUATgBUACAASQBOAE4ARQBSACAA
SgBPAEkATgAgAEEAUgBBAEMAQwBPAFUATgBUACAAYQBjAGMAbwB1AG4AdAAgAE8ATgAgAEEAUgBD
AEwASQBEACAAPQAgAEEAUgBBAEMAQwBMAFQASQBEACAAQQBOAEQAIABBAFIAQwBMAEkARAAgAEkA
TgAgACgAJwBJAE4AVABFAEcAMQAnACwAJwBJAE4AVABFAEcAMgAnACwAJwBJAE4AVABFAEcAMwAn
ACwAJwBJAE4AVABFAEcANAAnACwAJwBJAE4AVABFAEcANQAnACkAIABJAE4ATgBFAFIAIABKAE8A
SQBOACAAQQBSAEUATgBUAEkAVABZACAAZQBuAHQAaQB0AHkAIABvAG4AIABhAGMAYwBvAHUAbgB0
AC4AQQBSAEEAQwBSAFAASQBEACAAPQAgAGUAbgB0AGkAdAB5AC4AQQBSAEUATgBJAEQAIAAgAFcA
SABFAFIARQAgAEEAUgBBAEMAQwBMAEEAQwBDAFQAIAA9ACAAJwB7ADAAfQAnAAEJTgBVAEwATAAA
D0EAUgBFAE4AUwBTAE4AAIClVQBwAGQAYQB0AGUAIABtAGEAbgB1AGEAbABsAHkAIQAgACAATABv
AGEAbgBJAEQAOgB7ADAAfQAgAFQAYQBiAGwAZQBfAFMAUwBOAFYAYQBsAHUAZQA6AHsAMQB9ACAA
RgBpAGwAZQBfAFMAUwBOAFYAYQBsAHUAZQA6AHsAMgB9AC4AIAAgAFUAcABkAGEAdABlACAAUwBr
AGkAcABwAGUAZAAAgfdTAEUATABFAEMAVAAgAGUAbgB0AGkAdAB5AC4AQQBSAEUATgBCAFQASABE
AFQARQAgAEYAUgBPAE0AIAAlAFMAVABBAFIAVABUAEEAQgBMAEUAIABBAFIAQwBMAEkARQBOAFQA
IABJAE4ATgBFAFIAIABKAE8ASQBOACAAQQBSAEEAQwBDAE8AVQBOAFQAIABhAGMAYwBvAHUAbgB0
ACAATwBOACAAQQBSAEMATABJAEQAIAA9ACAAQQBSAEEAQwBDAEwAVABJAEQAIABBAE4ARAAgAEEA
UgBDAEwASQBEACAASQBOACAAKAAnAEkATgBUAEUARwAxACcALAAnAEkATgBUAEUARwAyACcALAAn
AEkATgBUAEUARwAzACcALAAnAEkATgBUAEUARwA0ACcALAAnAEkATgBUAEUARwA1ACcAKQAgAEkA
TgBOAEUAUgAgAEoATwBJAE4AIABBAFIARQBOAFQASQBUAFkAIABlAG4AdABpAHQAeQAgAG8AbgAg
AGEAYwBjAG8AdQBuAHQALgBBAFIAQQBDAFIAUABJAEQAIAA9ACAAZQBuAHQAaQB0AHkALgBBAFIA
RQBOAEkARAAgACAAVwBIAEUAUgBFACAAQQBSAEEAQwBDAEwAQQBDAEMAVAAgAD0AIAAnAHsAMAB9
ACcAARUwADAALwAwADAALwAwADAAMAAwAAAVQQBSAEUATgBCAFQASABEAFQARQAAgKVVAHAAZABh
AHQAZQAgAG0AYQBuAHUAYQBsAGwAeQAhACAAIABMAG8AYQBuAEkARAA6AHsAMAB9ACAAVABhAGIA
bABlAF8ARABPAEIAVgBhAGwAdQBlADoAewAxAH0AIABGAGkAbABlAF8ARABPAEIAVgBhAGwAdQBl
ADoAewAyAH0ALgAgACAAVQBwAGQAYQB0AGUAIABTAGsAaQBwAHAAZQBkAAADMAAAGWIAYQBuAGsA
IABuAGEAbQBlADoAIAAgAAAzRQB4AGMAZQBwAHQAaQBvAG4AIABpAG4AIABuAG8AdABlAHMAIABz
AGMAcgBpAHAAdAAAM0UAeABjAGUAcAB0AGkAbwBuACAAaQBuAG4AZQByACAAZQB4AGMAZQBwAHQA
aQBvAG4AAClFAHgAYwBlAHAAdABpAG8AbgAgAFMAdABhAGMAawBUAHIAYQBjAGUAAAlYAFgAWABY
AAAPTQBkAGQAeQB5AHkAeQAAEU0ATQBkAGQAeQB5AHkAeQAADU0AZAB5AHkAeQB5AAAPTQBNAGQA
eQB5AHkAeQAAC2UAbgAtAFUAUwABBSAAIAAAC0MATwBNAEEASwAAAywAAAMuAAADLwAAA04AAICb
SQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0
ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8A
IAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAA
FUUAeABjAGUAcAB0AGkAbwBuAHMAABFBAHIAdABpAHYAYQBNAFQAACdFAHgAYwBlAHAAdABpAG8A
bgBDAG8AbgBuAGUAYwB0AGkAbwBuAAANQQByAHQAaQB2AGEAABdDAHUAcgByAGUAbgB0AEYAaQBs
AGUAAHFTAEMAXwA0AGEAYwA4AGMAYgA0AGMANwA1AGQAMwA0AGEANQA1ADgANQA1AGQAYwAxADAA
NgBmADUANQA1AGIAOQA1ADcALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAAAUZLXFMyLDk+7USi7nukwAgAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgJEGFRI5Ag4O
ByACARMAEwEDIAAOBAABAQ4WBw0OEkkSTRJNDhJRHBJRHBJRHBJZAgQgARwcAgYOBQACDg4cCSAD
AQ4SPRKAqQMgABwEBhKAsQUAAgIODgYAAw4OHBwGFRJhARJdERABARUSgMEBHgAVEoDBAR4AAwoB
AwsQAQEIFRKAwQEeAAQKARJNBwAEDg4cHBwEIAECDgUAAg4ODgQKARJFBAoBEkkFIAASgMUKIAYB
CA4ODggQAgQgABJZAyAACAUgAg4ICAUgAg4IDgUgAQETAAwHAx0OEWkVEWUBEWkFAAASgI0PAAUC
Dh0OEoDJEYDNEBFpBhURZQERaQQAAQIOBgADDg4ODgMHAQ4GFRJhAR4ACxABAQ4VEoDBAR4ABAoB
HgAGIAEdDh0DBSACDg4OBhUSQQESRQkgAwESdR0IEnkDBhJ1AwYdCAQgAQ4IBCABAggDIAACBSAC
AQgcByACAg4RgN0FIAEdCAgDBwEIBgACCBJ5DgUgABKA4QYgARKA5Q4FIAASgIEFIAASgOkGIAES
gO0cBQAAEoDxBiABHBKA9QgAARKA+RGA/QUgABKBAQcgAgEOEoEBCLd6XFYZNOCJCImEXc2AgMyR
CD4MCNWcw9ZXCPoM7UpFUaeCAgYCBwYVEjkCDg4DBhI9AgYIBwYVEkEBEkUDBhIcAwYSIAMGEhAD
BhIUAwYSfQQGEoCJBAYSgI0DBhIoBSABARIMBCABDg4LAAIBEl0VEmEBEl0JIAEVEWUBEWkOCyAD
AQ4OFRJhARJdBSACAQ4OBjABAQEeAAQgAQECCSAEAQgOEnUSeQsgBAEIHQgdEnUSeQUgAQESfQUA
ABKAiQYAAQESgI0EAAASKAMAAAEDKAAOAygAAgUoABKAgQUIABKAiQUIABKAjQQIABIoCAEACAAA
AAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180YWM4Y2I0
Yzc1ZDM0YTU1ODU1ZGMxMDZmNTU1Yjk1NwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDE5AABH
AQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5O
RVQgRnJhbWV3b3JrIDQEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAD0UwAAAAAAAAAAAAAOVAAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAFQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgAAIAAAAAA
AAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAAGgQAAAAAAAAA
AAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEAAAABAGJu
FR0AAAEAYm4VHT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBGAGkAbABl
AEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBHoDAAABAFMA
dAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAAMAA0AGIAMAAAABoAAQAB
AEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAAAA
AABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8ANABhAGMAOABj
AGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3AAAA
PgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADcANAA0ADUALgAyADgAMgA1
ADgAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABhAGMAOABjAGIA
NABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3AC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADkAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA0AGEA
YwA4AGMAYgA0AGMANwA1AGQAMwA0AGEANQA1ADgANQA1AGQAYwAxADAANgBmADUANQA1AGIAOQA1
ADcALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANABhAGMA
OABjAGIANABjADcANQBkADMANABhADUANQA4ADUANQBkAGMAMQAwADYAZgA1ADUANQBiADkANQA3
AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA3ADQANAA1AC4A
MgA4ADIANQA4AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA3ADQANAA1AC4AMgA4ADIANQA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAADAAAACA0AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_4ac8cb4c75d34a55855dc106f555b957</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">User::CurrentFile</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum"
                      typeConverter="NOTBROWSABLE">5154ddc9c3655739792709ff28eca9cf</property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataShaChecksum"
                      typeConverter="NOTBROWSABLE">4ec2deeba5fd9231c86014e0a54521039d75190e</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\AddNewFields\Proess.Connections[ExceptionConnection]"
                      connectionManagerID="Package.ConnectionManagers[Exceptions]"
                      connectionManagerRefId="Package.ConnectionManagers[Exceptions]"
                      name="ExceptionConnection" />
                    <connection
                      refId="Package\Foreach Loop Container\AddNewFields\Proess.Connections[Artiva]"
                      connectionManagerID="Package.ConnectionManagers[ARTIVA]"
                      connectionManagerRefId="Package.ConnectionManagers[ARTIVA]"
                      name="Artiva" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0].Columns[ssn]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ssn"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[ssn]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0].Columns[dob]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="20"
                          cachedName="dob"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[dob]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0].Columns[bank_name]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="200"
                          cachedName="bank_name"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_name]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0].Columns[bank_account_1st_4_digits]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="bank_account_1st_4_digits"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[bank_account_1st_4_digits]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0].Columns[loan_id]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="loan_id"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output].Columns[loan_id]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[Exceptions]"
                      hasSideEffects="true"
                      name="Exceptions">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[Exceptions].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[Exceptions].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[ArtivaMT]"
                      hasSideEffects="true"
                      name="ArtivaMT">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[ArtivaMT].Columns[Data]"
                          codePage="1252"
                          dataType="str"
                          length="5000"
                          lineageId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[ArtivaMT].Columns[Data]"
                          name="Data" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\AddNewFields.Paths[ArtivaMT]"
                  endId="Package\Foreach Loop Container\AddNewFields\Artiva MT File.Inputs[Flat File Destination Input]"
                  name="ArtivaMT"
                  startId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[ArtivaMT]" />
                <path
                  refId="Package\Foreach Loop Container\AddNewFields.Paths[Exceptions]"
                  endId="Package\Foreach Loop Container\AddNewFields\Exception File.Inputs[Flat File Destination Input]"
                  name="Exceptions"
                  startId="Package\Foreach Loop Container\AddNewFields\Proess.Outputs[Exceptions]" />
                <path
                  refId="Package\Foreach Loop Container\AddNewFields.Paths[Flat File Source Output]"
                  endId="Package\Foreach Loop Container\AddNewFields\Proess.Inputs[Input 0]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data.Outputs[Flat File Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{4082554E-3437-482C-BEDD-66A69284A43D}"
          DTS:ObjectName="{4082554E-3437-482C-BEDD-66A69284A43D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::CurrentFile" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Foreach Loop Container\AddNewFields"
          TopLeft="34,33" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="224,130"
          Size="224,173"
          Id="Package\Foreach Loop Container"
          TopLeft="198,97" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\AddNewFields">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="141,42"
          Id="Package\Foreach Loop Container\AddNewFields\Get_Mt_Data"
          TopLeft="213,36" />
        <NodeLayout
          Size="110,42"
          Id="Package\Foreach Loop Container\AddNewFields\Proess"
          TopLeft="209.5,131.5" />
        <NodeLayout
          Size="144,42"
          Id="Package\Foreach Loop Container\AddNewFields\Exception File"
          TopLeft="312,259.839285714286" />
        <NodeLayout
          Size="143,42"
          Id="Package\Foreach Loop Container\AddNewFields\Artiva MT File"
          TopLeft="93.571428571429,254.821428571429" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\AddNewFields.Paths[Exceptions]"
          TopLeft="281.5,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.5,86.339285714286"
              Start="0,0"
              End="102.5,78.839285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.2784178187405" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31.2784178187405"
                    Point2="0,35.2784178187405"
                    Point3="4,35.2784178187405" />
                  <mssgle:LineSegment
                    End="98.5,35.2784178187405" />
                  <mssgle:CubicBezierSegment
                    Point1="98.5,35.2784178187405"
                    Point2="102.5,35.2784178187405"
                    Point3="102.5,39.2784178187405" />
                  <mssgle:LineSegment
                    End="102.5,78.839285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="27.182421875,40.2784178187405,48.13515625,11.3310546875"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\AddNewFields.Paths[ArtivaMT]"
          TopLeft="247.5,173.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-82.428571428571,81.321428571429"
              Start="0,0"
              End="-82.428571428571,73.821428571429">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.2281105990785" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.2281105990785"
                    Point2="0,33.2281105990785"
                    Point3="-4,33.2281105990785" />
                  <mssgle:LineSegment
                    End="-78.428571428571,33.2281105990785" />
                  <mssgle:CubicBezierSegment
                    Point1="-78.428571428571,33.2281105990785"
                    Point2="-82.428571428571,33.2281105990785"
                    Point3="-82.428571428571,37.2281105990785" />
                  <mssgle:LineSegment
                    End="-82.428571428571,73.821428571429" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-61.7460630580355,38.2281105990785,41.0635546875,9.470703125"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\AddNewFields.Paths[Flat File Source Output]"
          TopLeft="283.5,78">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19,53.5"
              Start="0,0"
              End="-19,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.75"
                    Point2="0,26.75"
                    Point3="-4,26.75" />
                  <mssgle:LineSegment
                    End="-15,26.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-15,26.75"
                    Point2="-19,26.75"
                    Point3="-19,30.75" />
                  <mssgle:LineSegment
                    End="-19,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>